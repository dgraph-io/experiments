/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.8
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: rocksdbswig.i

package rocksdbswig

/*
#define intgo swig_intgo
typedef void *swig_voidp;

#include <stdint.h>


typedef long long intgo;
typedef unsigned long long uintgo;



typedef struct { char *p; intgo n; } _gostring_;
typedef struct { void* array; intgo len; intgo cap; } _goslice_;


typedef _gostring_ swig_type_1;
typedef long long swig_type_2;
typedef _gostring_ swig_type_3;
typedef _gostring_ swig_type_4;
typedef _gostring_ swig_type_5;
typedef long long swig_type_6;
typedef long long swig_type_7;
typedef long long swig_type_8;
typedef _gostring_ swig_type_9;
typedef _gostring_ swig_type_10;
typedef long long swig_type_11;
typedef _gostring_ swig_type_12;
typedef _gostring_ swig_type_13;
typedef long long swig_type_14;
typedef long long swig_type_15;
typedef _gostring_ swig_type_16;
typedef _gostring_ swig_type_17;
typedef _gostring_ swig_type_18;
typedef _gostring_ swig_type_19;
typedef long long swig_type_20;
typedef long long swig_type_21;
typedef long long swig_type_22;
typedef long long swig_type_23;
typedef long long swig_type_24;
typedef long long swig_type_25;
typedef void* swig_type_26;
typedef void* swig_type_27;
typedef long long swig_type_28;
typedef long long swig_type_29;
typedef long long swig_type_30;
typedef long long swig_type_31;
typedef _gostring_ swig_type_32;
typedef _gostring_ swig_type_33;
typedef _gostring_ swig_type_34;
typedef _gostring_ swig_type_35;
typedef long long swig_type_36;
typedef long long swig_type_37;
typedef long long swig_type_38;
typedef long long swig_type_39;
typedef long long swig_type_40;
typedef long long swig_type_41;
typedef long long swig_type_42;
typedef long long swig_type_43;
typedef long long swig_type_44;
typedef long long swig_type_45;
typedef long long swig_type_46;
typedef long long swig_type_47;
typedef long long swig_type_48;
typedef long long swig_type_49;
typedef long long swig_type_50;
typedef long long swig_type_51;
typedef long long swig_type_52;
typedef long long swig_type_53;
typedef _gostring_ swig_type_54;
typedef _gostring_ swig_type_55;
typedef _gostring_ swig_type_56;
typedef _gostring_ swig_type_57;
typedef long long swig_type_58;
typedef long long swig_type_59;
typedef long long swig_type_60;
typedef long long swig_type_61;
typedef long long swig_type_62;
typedef long long swig_type_63;
typedef long long swig_type_64;
typedef long long swig_type_65;
typedef long long swig_type_66;
typedef long long swig_type_67;
typedef long long swig_type_68;
typedef long long swig_type_69;
typedef long long swig_type_70;
typedef long long swig_type_71;
typedef long long swig_type_72;
typedef long long swig_type_73;
typedef long long swig_type_74;
typedef long long swig_type_75;
typedef long long swig_type_76;
typedef long long swig_type_77;
typedef long long swig_type_78;
typedef long long swig_type_79;
typedef long long swig_type_80;
typedef long long swig_type_81;
typedef void* swig_type_82;
typedef void* swig_type_83;
typedef long long swig_type_84;
typedef long long swig_type_85;
typedef long long swig_type_86;
typedef long long swig_type_87;
typedef long long swig_type_88;
typedef long long swig_type_89;
typedef long long swig_type_90;
typedef long long swig_type_91;
typedef _gostring_ swig_type_92;
typedef _gostring_ swig_type_93;
typedef _gostring_ swig_type_94;
typedef _gostring_ swig_type_95;
typedef _gostring_ swig_type_96;
typedef _gostring_ swig_type_97;
typedef _gostring_ swig_type_98;
typedef _gostring_ swig_type_99;
typedef _gostring_ swig_type_100;
typedef _gostring_ swig_type_101;
typedef _gostring_ swig_type_102;
typedef _gostring_ swig_type_103;
typedef _gostring_ swig_type_104;
typedef _gostring_ swig_type_105;
typedef _gostring_ swig_type_106;
typedef _gostring_ swig_type_107;
typedef _gostring_ swig_type_108;
typedef _gostring_ swig_type_109;
typedef _gostring_ swig_type_110;
typedef _gostring_ swig_type_111;
typedef _gostring_ swig_type_112;
typedef _gostring_ swig_type_113;
typedef _gostring_ swig_type_114;
typedef _gostring_ swig_type_115;
typedef _gostring_ swig_type_116;
extern void _wrap_Swig_free_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern uintptr_t _wrap_new_Slice__SWIG_0_rocksdbswig_576e316b0df25a62(void);
extern uintptr_t _wrap_new_Slice__SWIG_1_rocksdbswig_576e316b0df25a62(swig_type_1 arg1, swig_type_2 arg2);
extern uintptr_t _wrap_new_Slice__SWIG_2_rocksdbswig_576e316b0df25a62(swig_type_3 arg1);
extern uintptr_t _wrap_new_Slice__SWIG_3_rocksdbswig_576e316b0df25a62(swig_type_4 arg1);
extern uintptr_t _wrap_new_Slice__SWIG_4_rocksdbswig_576e316b0df25a62(uintptr_t arg1, swig_voidp arg2);
extern swig_type_5 _wrap_Slice_data_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern swig_type_6 _wrap_Slice_size_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern _Bool _wrap_Slice_empty_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_Slice_clear_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_Slice_remove_prefix_rocksdbswig_576e316b0df25a62(uintptr_t arg1, swig_type_7 arg2);
extern void _wrap_Slice_remove_suffix_rocksdbswig_576e316b0df25a62(uintptr_t arg1, swig_type_8 arg2);
extern swig_type_9 _wrap_Slice_ToString__SWIG_0_rocksdbswig_576e316b0df25a62(uintptr_t arg1, _Bool arg2);
extern swig_type_10 _wrap_Slice_ToString__SWIG_1_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern swig_intgo _wrap_Slice_compare_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2);
extern _Bool _wrap_Slice_starts_with_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2);
extern _Bool _wrap_Slice_ends_with_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2);
extern swig_type_11 _wrap_Slice_difference_offset_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_Slice_data__set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, swig_type_12 arg2);
extern swig_type_13 _wrap_Slice_data__get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_Slice_size__set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, swig_type_14 arg2);
extern swig_type_15 _wrap_Slice_size__get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_delete_Slice_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern uintptr_t _wrap_new_SliceParts__SWIG_0_rocksdbswig_576e316b0df25a62(uintptr_t arg1, swig_intgo arg2);
extern uintptr_t _wrap_new_SliceParts__SWIG_1_rocksdbswig_576e316b0df25a62(void);
extern void _wrap_SliceParts_parts_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_SliceParts_parts_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_SliceParts_num_parts_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_SliceParts_num_parts_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_delete_SliceParts_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern uintptr_t _wrap_new_Status__SWIG_0_rocksdbswig_576e316b0df25a62(void);
extern void _wrap_delete_Status_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern uintptr_t _wrap_new_Status__SWIG_1_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern uintptr_t _wrap_new_Status__SWIG_2_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern swig_intgo _wrap_kOk_Status_rocksdbswig_576e316b0df25a62(void);
extern swig_intgo _wrap_kNotFound_Status_rocksdbswig_576e316b0df25a62(void);
extern swig_intgo _wrap_kCorruption_Status_rocksdbswig_576e316b0df25a62(void);
extern swig_intgo _wrap_kNotSupported_Status_rocksdbswig_576e316b0df25a62(void);
extern swig_intgo _wrap_kInvalidArgument_Status_rocksdbswig_576e316b0df25a62(void);
extern swig_intgo _wrap_kIOError_Status_rocksdbswig_576e316b0df25a62(void);
extern swig_intgo _wrap_kMergeInProgress_Status_rocksdbswig_576e316b0df25a62(void);
extern swig_intgo _wrap_kIncomplete_Status_rocksdbswig_576e316b0df25a62(void);
extern swig_intgo _wrap_kShutdownInProgress_Status_rocksdbswig_576e316b0df25a62(void);
extern swig_intgo _wrap_kTimedOut_Status_rocksdbswig_576e316b0df25a62(void);
extern swig_intgo _wrap_kAborted_Status_rocksdbswig_576e316b0df25a62(void);
extern swig_intgo _wrap_kBusy_Status_rocksdbswig_576e316b0df25a62(void);
extern swig_intgo _wrap_kExpired_Status_rocksdbswig_576e316b0df25a62(void);
extern swig_intgo _wrap_kTryAgain_Status_rocksdbswig_576e316b0df25a62(void);
extern swig_intgo _wrap_Status_code_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern swig_intgo _wrap_kNone_Status_rocksdbswig_576e316b0df25a62(void);
extern swig_intgo _wrap_kMutexTimeout_Status_rocksdbswig_576e316b0df25a62(void);
extern swig_intgo _wrap_kLockTimeout_Status_rocksdbswig_576e316b0df25a62(void);
extern swig_intgo _wrap_kLockLimit_Status_rocksdbswig_576e316b0df25a62(void);
extern swig_intgo _wrap_kMaxSubCode_Status_rocksdbswig_576e316b0df25a62(void);
extern swig_intgo _wrap_Status_subcode_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern uintptr_t _wrap_Status_OK_rocksdbswig_576e316b0df25a62(void);
extern uintptr_t _wrap_Status_NotFound__SWIG_0_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Status_NotFound__SWIG_1_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern uintptr_t _wrap_Status_NotFound__SWIG_2_rocksdbswig_576e316b0df25a62(swig_intgo arg1);
extern uintptr_t _wrap_Status_NotFound__SWIG_3_rocksdbswig_576e316b0df25a62(void);
extern uintptr_t _wrap_Status_Corruption__SWIG_0_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Status_Corruption__SWIG_1_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern uintptr_t _wrap_Status_Corruption__SWIG_2_rocksdbswig_576e316b0df25a62(swig_intgo arg1);
extern uintptr_t _wrap_Status_Corruption__SWIG_3_rocksdbswig_576e316b0df25a62(void);
extern uintptr_t _wrap_Status_NotSupported__SWIG_0_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Status_NotSupported__SWIG_1_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern uintptr_t _wrap_Status_NotSupported__SWIG_2_rocksdbswig_576e316b0df25a62(swig_intgo arg1);
extern uintptr_t _wrap_Status_NotSupported__SWIG_3_rocksdbswig_576e316b0df25a62(void);
extern uintptr_t _wrap_Status_InvalidArgument__SWIG_0_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Status_InvalidArgument__SWIG_1_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern uintptr_t _wrap_Status_InvalidArgument__SWIG_2_rocksdbswig_576e316b0df25a62(swig_intgo arg1);
extern uintptr_t _wrap_Status_InvalidArgument__SWIG_3_rocksdbswig_576e316b0df25a62(void);
extern uintptr_t _wrap_Status_IOError__SWIG_0_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Status_IOError__SWIG_1_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern uintptr_t _wrap_Status_IOError__SWIG_2_rocksdbswig_576e316b0df25a62(swig_intgo arg1);
extern uintptr_t _wrap_Status_IOError__SWIG_3_rocksdbswig_576e316b0df25a62(void);
extern uintptr_t _wrap_Status_MergeInProgress__SWIG_0_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Status_MergeInProgress__SWIG_1_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern uintptr_t _wrap_Status_MergeInProgress__SWIG_2_rocksdbswig_576e316b0df25a62(swig_intgo arg1);
extern uintptr_t _wrap_Status_MergeInProgress__SWIG_3_rocksdbswig_576e316b0df25a62(void);
extern uintptr_t _wrap_Status_Incomplete__SWIG_0_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Status_Incomplete__SWIG_1_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern uintptr_t _wrap_Status_Incomplete__SWIG_2_rocksdbswig_576e316b0df25a62(swig_intgo arg1);
extern uintptr_t _wrap_Status_Incomplete__SWIG_3_rocksdbswig_576e316b0df25a62(void);
extern uintptr_t _wrap_Status_ShutdownInProgress__SWIG_0_rocksdbswig_576e316b0df25a62(swig_intgo arg1);
extern uintptr_t _wrap_Status_ShutdownInProgress__SWIG_1_rocksdbswig_576e316b0df25a62(void);
extern uintptr_t _wrap_Status_ShutdownInProgress__SWIG_2_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Status_ShutdownInProgress__SWIG_3_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern uintptr_t _wrap_Status_Aborted__SWIG_0_rocksdbswig_576e316b0df25a62(swig_intgo arg1);
extern uintptr_t _wrap_Status_Aborted__SWIG_1_rocksdbswig_576e316b0df25a62(void);
extern uintptr_t _wrap_Status_Aborted__SWIG_2_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Status_Aborted__SWIG_3_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern uintptr_t _wrap_Status_Busy__SWIG_0_rocksdbswig_576e316b0df25a62(swig_intgo arg1);
extern uintptr_t _wrap_Status_Busy__SWIG_1_rocksdbswig_576e316b0df25a62(void);
extern uintptr_t _wrap_Status_Busy__SWIG_2_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Status_Busy__SWIG_3_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern uintptr_t _wrap_Status_TimedOut__SWIG_0_rocksdbswig_576e316b0df25a62(swig_intgo arg1);
extern uintptr_t _wrap_Status_TimedOut__SWIG_1_rocksdbswig_576e316b0df25a62(void);
extern uintptr_t _wrap_Status_TimedOut__SWIG_2_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Status_TimedOut__SWIG_3_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern uintptr_t _wrap_Status_Expired__SWIG_0_rocksdbswig_576e316b0df25a62(swig_intgo arg1);
extern uintptr_t _wrap_Status_Expired__SWIG_1_rocksdbswig_576e316b0df25a62(void);
extern uintptr_t _wrap_Status_Expired__SWIG_2_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Status_Expired__SWIG_3_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern uintptr_t _wrap_Status_TryAgain__SWIG_0_rocksdbswig_576e316b0df25a62(swig_intgo arg1);
extern uintptr_t _wrap_Status_TryAgain__SWIG_1_rocksdbswig_576e316b0df25a62(void);
extern uintptr_t _wrap_Status_TryAgain__SWIG_2_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Status_TryAgain__SWIG_3_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern _Bool _wrap_Status_ok_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern _Bool _wrap_Status_IsNotFound_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern _Bool _wrap_Status_IsCorruption_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern _Bool _wrap_Status_IsNotSupported_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern _Bool _wrap_Status_IsInvalidArgument_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern _Bool _wrap_Status_IsIOError_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern _Bool _wrap_Status_IsMergeInProgress_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern _Bool _wrap_Status_IsIncomplete_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern _Bool _wrap_Status_IsShutdownInProgress_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern _Bool _wrap_Status_IsTimedOut_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern _Bool _wrap_Status_IsAborted_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern _Bool _wrap_Status_IsBusy_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern _Bool _wrap_Status_IsExpired_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern _Bool _wrap_Status_IsTryAgain_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern swig_type_16 _wrap_Status_ToString_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern swig_intgo _wrap_kNoCompression_rocksdbswig_576e316b0df25a62(void);
extern swig_intgo _wrap_kSnappyCompression_rocksdbswig_576e316b0df25a62(void);
extern swig_intgo _wrap_kZlibCompression_rocksdbswig_576e316b0df25a62(void);
extern swig_intgo _wrap_kBZip2Compression_rocksdbswig_576e316b0df25a62(void);
extern swig_intgo _wrap_kLZ4Compression_rocksdbswig_576e316b0df25a62(void);
extern swig_intgo _wrap_kLZ4HCCompression_rocksdbswig_576e316b0df25a62(void);
extern swig_intgo _wrap_kZSTDNotFinalCompression_rocksdbswig_576e316b0df25a62(void);
extern swig_intgo _wrap_kCompactionStyleLevel_rocksdbswig_576e316b0df25a62(void);
extern swig_intgo _wrap_kCompactionStyleUniversal_rocksdbswig_576e316b0df25a62(void);
extern swig_intgo _wrap_kCompactionStyleFIFO_rocksdbswig_576e316b0df25a62(void);
extern swig_intgo _wrap_kCompactionStyleNone_rocksdbswig_576e316b0df25a62(void);
extern swig_intgo _wrap_kByCompensatedSize_rocksdbswig_576e316b0df25a62(void);
extern swig_intgo _wrap_kOldestLargestSeqFirst_rocksdbswig_576e316b0df25a62(void);
extern swig_intgo _wrap_kOldestSmallestSeqFirst_rocksdbswig_576e316b0df25a62(void);
extern swig_intgo _wrap_kMinOverlappingRatio_rocksdbswig_576e316b0df25a62(void);
extern swig_intgo _wrap_WALRecoveryMode_kTolerateCorruptedTailRecords_rocksdbswig_576e316b0df25a62(void);
extern swig_intgo _wrap_WALRecoveryMode_kAbsoluteConsistency_rocksdbswig_576e316b0df25a62(void);
extern swig_intgo _wrap_WALRecoveryMode_kPointInTimeRecovery_rocksdbswig_576e316b0df25a62(void);
extern swig_intgo _wrap_WALRecoveryMode_kSkipAnyCorruptedRecords_rocksdbswig_576e316b0df25a62(void);
extern void _wrap_CompactionOptionsFIFO_max_table_files_size_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_CompactionOptionsFIFO_max_table_files_size_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern uintptr_t _wrap_new_CompactionOptionsFIFO_rocksdbswig_576e316b0df25a62(void);
extern void _wrap_delete_CompactionOptionsFIFO_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_CompressionOptions_window_bits_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_CompressionOptions_window_bits_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_CompressionOptions_level_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_CompressionOptions_level_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_CompressionOptions_strategy_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_CompressionOptions_strategy_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern uintptr_t _wrap_new_CompressionOptions__SWIG_0_rocksdbswig_576e316b0df25a62(void);
extern uintptr_t _wrap_new_CompressionOptions__SWIG_1_rocksdbswig_576e316b0df25a62(swig_intgo arg1, swig_intgo arg2, swig_intgo arg3);
extern void _wrap_delete_CompressionOptions_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern swig_intgo _wrap_UPDATE_FAILED_rocksdbswig_576e316b0df25a62(void);
extern swig_intgo _wrap_UPDATED_INPLACE_rocksdbswig_576e316b0df25a62(void);
extern swig_intgo _wrap_UPDATED_rocksdbswig_576e316b0df25a62(void);
extern void _wrap_DbPath_path_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, swig_type_17 arg2);
extern swig_type_18 _wrap_DbPath_path_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_DbPath_target_size_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_DbPath_target_size_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern uintptr_t _wrap_new_DbPath__SWIG_0_rocksdbswig_576e316b0df25a62(void);
extern uintptr_t _wrap_new_DbPath__SWIG_1_rocksdbswig_576e316b0df25a62(swig_type_19 arg1, uintptr_t arg2);
extern void _wrap_delete_DbPath_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern uintptr_t _wrap_ColumnFamilyOptions_OptimizeForPointLookup_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_ColumnFamilyOptions_OptimizeLevelStyleCompaction__SWIG_0_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_ColumnFamilyOptions_OptimizeLevelStyleCompaction__SWIG_1_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern uintptr_t _wrap_ColumnFamilyOptions_OptimizeUniversalStyleCompaction__SWIG_0_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_ColumnFamilyOptions_OptimizeUniversalStyleCompaction__SWIG_1_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_ColumnFamilyOptions_comparator_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_ColumnFamilyOptions_comparator_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_ColumnFamilyOptions_merge_operator_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_ColumnFamilyOptions_merge_operator_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_ColumnFamilyOptions_compaction_filter_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_ColumnFamilyOptions_compaction_filter_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_ColumnFamilyOptions_compaction_filter_factory_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_ColumnFamilyOptions_compaction_filter_factory_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_ColumnFamilyOptions_write_buffer_size_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, swig_type_20 arg2);
extern swig_type_21 _wrap_ColumnFamilyOptions_write_buffer_size_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_ColumnFamilyOptions_max_write_buffer_number_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_ColumnFamilyOptions_max_write_buffer_number_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_ColumnFamilyOptions_min_write_buffer_number_to_merge_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_ColumnFamilyOptions_min_write_buffer_number_to_merge_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_ColumnFamilyOptions_max_write_buffer_number_to_maintain_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_ColumnFamilyOptions_max_write_buffer_number_to_maintain_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_ColumnFamilyOptions_compression_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_ColumnFamilyOptions_compression_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_ColumnFamilyOptions_compression_per_level_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_ColumnFamilyOptions_compression_per_level_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_ColumnFamilyOptions_compression_opts_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_ColumnFamilyOptions_compression_opts_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_ColumnFamilyOptions_prefix_extractor_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_ColumnFamilyOptions_prefix_extractor_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_ColumnFamilyOptions_num_levels_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_ColumnFamilyOptions_num_levels_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_ColumnFamilyOptions_level0_file_num_compaction_trigger_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_ColumnFamilyOptions_level0_file_num_compaction_trigger_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_ColumnFamilyOptions_level0_slowdown_writes_trigger_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_ColumnFamilyOptions_level0_slowdown_writes_trigger_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_ColumnFamilyOptions_level0_stop_writes_trigger_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_ColumnFamilyOptions_level0_stop_writes_trigger_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_ColumnFamilyOptions_max_mem_compaction_level_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_ColumnFamilyOptions_max_mem_compaction_level_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_ColumnFamilyOptions_target_file_size_base_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_ColumnFamilyOptions_target_file_size_base_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_ColumnFamilyOptions_target_file_size_multiplier_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_ColumnFamilyOptions_target_file_size_multiplier_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_ColumnFamilyOptions_max_bytes_for_level_base_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_ColumnFamilyOptions_max_bytes_for_level_base_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_ColumnFamilyOptions_level_compaction_dynamic_level_bytes_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, _Bool arg2);
extern _Bool _wrap_ColumnFamilyOptions_level_compaction_dynamic_level_bytes_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_ColumnFamilyOptions_max_bytes_for_level_multiplier_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_ColumnFamilyOptions_max_bytes_for_level_multiplier_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_ColumnFamilyOptions_max_bytes_for_level_multiplier_additional_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_ColumnFamilyOptions_max_bytes_for_level_multiplier_additional_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_ColumnFamilyOptions_expanded_compaction_factor_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_ColumnFamilyOptions_expanded_compaction_factor_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_ColumnFamilyOptions_source_compaction_factor_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_ColumnFamilyOptions_source_compaction_factor_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_ColumnFamilyOptions_max_grandparent_overlap_factor_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_ColumnFamilyOptions_max_grandparent_overlap_factor_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_ColumnFamilyOptions_soft_rate_limit_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, double arg2);
extern double _wrap_ColumnFamilyOptions_soft_rate_limit_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_ColumnFamilyOptions_hard_rate_limit_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, double arg2);
extern double _wrap_ColumnFamilyOptions_hard_rate_limit_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_ColumnFamilyOptions_soft_pending_compaction_bytes_limit_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_ColumnFamilyOptions_soft_pending_compaction_bytes_limit_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_ColumnFamilyOptions_hard_pending_compaction_bytes_limit_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_ColumnFamilyOptions_hard_pending_compaction_bytes_limit_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_ColumnFamilyOptions_rate_limit_delay_max_milliseconds_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_ColumnFamilyOptions_rate_limit_delay_max_milliseconds_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_ColumnFamilyOptions_arena_block_size_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, swig_type_22 arg2);
extern swig_type_23 _wrap_ColumnFamilyOptions_arena_block_size_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_ColumnFamilyOptions_disable_auto_compactions_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, _Bool arg2);
extern _Bool _wrap_ColumnFamilyOptions_disable_auto_compactions_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_ColumnFamilyOptions_purge_redundant_kvs_while_flush_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, _Bool arg2);
extern _Bool _wrap_ColumnFamilyOptions_purge_redundant_kvs_while_flush_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_ColumnFamilyOptions_compaction_style_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_ColumnFamilyOptions_compaction_style_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_ColumnFamilyOptions_compaction_pri_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_ColumnFamilyOptions_compaction_pri_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_ColumnFamilyOptions_verify_checksums_in_compaction_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, _Bool arg2);
extern _Bool _wrap_ColumnFamilyOptions_verify_checksums_in_compaction_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_ColumnFamilyOptions_compaction_options_universal_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_ColumnFamilyOptions_compaction_options_universal_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_ColumnFamilyOptions_compaction_options_fifo_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_ColumnFamilyOptions_compaction_options_fifo_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_ColumnFamilyOptions_filter_deletes_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, _Bool arg2);
extern _Bool _wrap_ColumnFamilyOptions_filter_deletes_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_ColumnFamilyOptions_max_sequential_skip_in_iterations_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_ColumnFamilyOptions_max_sequential_skip_in_iterations_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_ColumnFamilyOptions_memtable_factory_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_ColumnFamilyOptions_memtable_factory_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_ColumnFamilyOptions_table_factory_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_ColumnFamilyOptions_table_factory_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_ColumnFamilyOptions_table_properties_collector_factories_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_ColumnFamilyOptions_table_properties_collector_factories_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_ColumnFamilyOptions_inplace_update_support_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, _Bool arg2);
extern _Bool _wrap_ColumnFamilyOptions_inplace_update_support_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_ColumnFamilyOptions_inplace_update_num_locks_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, swig_type_24 arg2);
extern swig_type_25 _wrap_ColumnFamilyOptions_inplace_update_num_locks_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_ColumnFamilyOptions_inplace_callback_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, swig_type_26 arg2);
extern swig_type_27 _wrap_ColumnFamilyOptions_inplace_callback_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_ColumnFamilyOptions_memtable_prefix_bloom_bits_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_ColumnFamilyOptions_memtable_prefix_bloom_bits_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_ColumnFamilyOptions_memtable_prefix_bloom_probes_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_ColumnFamilyOptions_memtable_prefix_bloom_probes_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_ColumnFamilyOptions_memtable_prefix_bloom_huge_page_tlb_size_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, swig_type_28 arg2);
extern swig_type_29 _wrap_ColumnFamilyOptions_memtable_prefix_bloom_huge_page_tlb_size_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_ColumnFamilyOptions_bloom_locality_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_ColumnFamilyOptions_bloom_locality_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_ColumnFamilyOptions_max_successive_merges_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, swig_type_30 arg2);
extern swig_type_31 _wrap_ColumnFamilyOptions_max_successive_merges_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_ColumnFamilyOptions_min_partial_merge_operands_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_ColumnFamilyOptions_min_partial_merge_operands_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_ColumnFamilyOptions_optimize_filters_for_hits_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, _Bool arg2);
extern _Bool _wrap_ColumnFamilyOptions_optimize_filters_for_hits_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_ColumnFamilyOptions_paranoid_file_checks_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, _Bool arg2);
extern _Bool _wrap_ColumnFamilyOptions_paranoid_file_checks_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_ColumnFamilyOptions_compaction_measure_io_stats_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, _Bool arg2);
extern _Bool _wrap_ColumnFamilyOptions_compaction_measure_io_stats_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern uintptr_t _wrap_new_ColumnFamilyOptions__SWIG_0_rocksdbswig_576e316b0df25a62(void);
extern uintptr_t _wrap_new_ColumnFamilyOptions__SWIG_1_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_ColumnFamilyOptions_Dump_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_delete_ColumnFamilyOptions_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern uintptr_t _wrap_DBOptions_IncreaseParallelism__SWIG_0_rocksdbswig_576e316b0df25a62(uintptr_t arg1, swig_intgo arg2);
extern uintptr_t _wrap_DBOptions_IncreaseParallelism__SWIG_1_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_DBOptions_create_if_missing_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, _Bool arg2);
extern _Bool _wrap_DBOptions_create_if_missing_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_DBOptions_create_missing_column_families_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, _Bool arg2);
extern _Bool _wrap_DBOptions_create_missing_column_families_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_DBOptions_error_if_exists_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, _Bool arg2);
extern _Bool _wrap_DBOptions_error_if_exists_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_DBOptions_paranoid_checks_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, _Bool arg2);
extern _Bool _wrap_DBOptions_paranoid_checks_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_DBOptions_env_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_DBOptions_env_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_DBOptions_rate_limiter_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_DBOptions_rate_limiter_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_DBOptions_sst_file_manager_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_DBOptions_sst_file_manager_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_DBOptions_info_log_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_DBOptions_info_log_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_DBOptions_info_log_level_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_DBOptions_info_log_level_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_DBOptions_max_open_files_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_DBOptions_max_open_files_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_DBOptions_max_file_opening_threads_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_DBOptions_max_file_opening_threads_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_DBOptions_max_total_wal_size_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_DBOptions_max_total_wal_size_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_DBOptions_statistics_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_DBOptions_statistics_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_DBOptions_disableDataSync_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, _Bool arg2);
extern _Bool _wrap_DBOptions_disableDataSync_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_DBOptions_use_fsync_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, _Bool arg2);
extern _Bool _wrap_DBOptions_use_fsync_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_DBOptions_db_paths_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_DBOptions_db_paths_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_DBOptions_db_log_dir_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, swig_type_32 arg2);
extern swig_type_33 _wrap_DBOptions_db_log_dir_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_DBOptions_wal_dir_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, swig_type_34 arg2);
extern swig_type_35 _wrap_DBOptions_wal_dir_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_DBOptions_delete_obsolete_files_period_micros_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_DBOptions_delete_obsolete_files_period_micros_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_DBOptions_base_background_compactions_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_DBOptions_base_background_compactions_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_DBOptions_max_background_compactions_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_DBOptions_max_background_compactions_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_DBOptions_max_subcompactions_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_DBOptions_max_subcompactions_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_DBOptions_max_background_flushes_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_DBOptions_max_background_flushes_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_DBOptions_max_log_file_size_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, swig_type_36 arg2);
extern swig_type_37 _wrap_DBOptions_max_log_file_size_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_DBOptions_log_file_time_to_roll_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, swig_type_38 arg2);
extern swig_type_39 _wrap_DBOptions_log_file_time_to_roll_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_DBOptions_keep_log_file_num_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, swig_type_40 arg2);
extern swig_type_41 _wrap_DBOptions_keep_log_file_num_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_DBOptions_recycle_log_file_num_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, swig_type_42 arg2);
extern swig_type_43 _wrap_DBOptions_recycle_log_file_num_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_DBOptions_max_manifest_file_size_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_DBOptions_max_manifest_file_size_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_DBOptions_table_cache_numshardbits_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_DBOptions_table_cache_numshardbits_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_DBOptions_WAL_ttl_seconds_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_DBOptions_WAL_ttl_seconds_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_DBOptions_WAL_size_limit_MB_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_DBOptions_WAL_size_limit_MB_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_DBOptions_manifest_preallocation_size_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, swig_type_44 arg2);
extern swig_type_45 _wrap_DBOptions_manifest_preallocation_size_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_DBOptions_allow_os_buffer_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, _Bool arg2);
extern _Bool _wrap_DBOptions_allow_os_buffer_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_DBOptions_allow_mmap_reads_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, _Bool arg2);
extern _Bool _wrap_DBOptions_allow_mmap_reads_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_DBOptions_allow_mmap_writes_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, _Bool arg2);
extern _Bool _wrap_DBOptions_allow_mmap_writes_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_DBOptions_allow_fallocate_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, _Bool arg2);
extern _Bool _wrap_DBOptions_allow_fallocate_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_DBOptions_is_fd_close_on_exec_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, _Bool arg2);
extern _Bool _wrap_DBOptions_is_fd_close_on_exec_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_DBOptions_skip_log_error_on_recovery_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, _Bool arg2);
extern _Bool _wrap_DBOptions_skip_log_error_on_recovery_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_DBOptions_stats_dump_period_sec_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_DBOptions_stats_dump_period_sec_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_DBOptions_advise_random_on_open_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, _Bool arg2);
extern _Bool _wrap_DBOptions_advise_random_on_open_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_DBOptions_db_write_buffer_size_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, swig_type_46 arg2);
extern swig_type_47 _wrap_DBOptions_db_write_buffer_size_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern swig_intgo _wrap_NONE_DBOptions_rocksdbswig_576e316b0df25a62(void);
extern swig_intgo _wrap_NORMAL_DBOptions_rocksdbswig_576e316b0df25a62(void);
extern swig_intgo _wrap_SEQUENTIAL_DBOptions_rocksdbswig_576e316b0df25a62(void);
extern swig_intgo _wrap_WILLNEED_DBOptions_rocksdbswig_576e316b0df25a62(void);
extern void _wrap_DBOptions_access_hint_on_compaction_start_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_DBOptions_access_hint_on_compaction_start_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_DBOptions_new_table_reader_for_compaction_inputs_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, _Bool arg2);
extern _Bool _wrap_DBOptions_new_table_reader_for_compaction_inputs_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_DBOptions_compaction_readahead_size_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, swig_type_48 arg2);
extern swig_type_49 _wrap_DBOptions_compaction_readahead_size_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_DBOptions_random_access_max_buffer_size_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, swig_type_50 arg2);
extern swig_type_51 _wrap_DBOptions_random_access_max_buffer_size_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_DBOptions_writable_file_max_buffer_size_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, swig_type_52 arg2);
extern swig_type_53 _wrap_DBOptions_writable_file_max_buffer_size_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_DBOptions_use_adaptive_mutex_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, _Bool arg2);
extern _Bool _wrap_DBOptions_use_adaptive_mutex_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern uintptr_t _wrap_new_DBOptions__SWIG_0_rocksdbswig_576e316b0df25a62(void);
extern uintptr_t _wrap_new_DBOptions__SWIG_1_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_DBOptions_Dump_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_DBOptions_bytes_per_sync_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_DBOptions_bytes_per_sync_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_DBOptions_wal_bytes_per_sync_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_DBOptions_wal_bytes_per_sync_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_DBOptions_listeners_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_DBOptions_listeners_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_DBOptions_enable_thread_tracking_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, _Bool arg2);
extern _Bool _wrap_DBOptions_enable_thread_tracking_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_DBOptions_delayed_write_rate_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_DBOptions_delayed_write_rate_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_DBOptions_allow_concurrent_memtable_write_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, _Bool arg2);
extern _Bool _wrap_DBOptions_allow_concurrent_memtable_write_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_DBOptions_enable_write_thread_adaptive_yield_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, _Bool arg2);
extern _Bool _wrap_DBOptions_enable_write_thread_adaptive_yield_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_DBOptions_write_thread_max_yield_usec_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_DBOptions_write_thread_max_yield_usec_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_DBOptions_write_thread_slow_yield_usec_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_DBOptions_write_thread_slow_yield_usec_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_DBOptions_skip_stats_update_on_db_open_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, _Bool arg2);
extern _Bool _wrap_DBOptions_skip_stats_update_on_db_open_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_DBOptions_wal_recovery_mode_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_DBOptions_wal_recovery_mode_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_DBOptions_row_cache_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_DBOptions_row_cache_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_DBOptions_wal_filter_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_DBOptions_wal_filter_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_DBOptions_fail_if_options_file_error_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, _Bool arg2);
extern _Bool _wrap_DBOptions_fail_if_options_file_error_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_delete_DBOptions_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern uintptr_t _wrap_new_Options__SWIG_0_rocksdbswig_576e316b0df25a62(void);
extern uintptr_t _wrap_new_Options__SWIG_1_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_Options_Dump_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_Options_DumpCFOptions_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Options_PrepareForBulkLoad_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_delete_Options_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern uintptr_t _wrap_Options_IncreaseParallelism__SWIG_0_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, swig_intgo arg1);
extern uintptr_t _wrap_Options_IncreaseParallelism__SWIG_1_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Create_if_missing_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, _Bool arg1);
extern _Bool _wrap_GetOptions_Create_if_missing_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Create_missing_column_families_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, _Bool arg1);
extern _Bool _wrap_GetOptions_Create_missing_column_families_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Error_if_exists_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, _Bool arg1);
extern _Bool _wrap_GetOptions_Error_if_exists_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Paranoid_checks_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, _Bool arg1);
extern _Bool _wrap_GetOptions_Paranoid_checks_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Env_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, uintptr_t arg1);
extern uintptr_t _wrap_GetOptions_Env_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Rate_limiter_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, uintptr_t arg1);
extern uintptr_t _wrap_GetOptions_Rate_limiter_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Sst_file_manager_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, uintptr_t arg1);
extern uintptr_t _wrap_GetOptions_Sst_file_manager_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Info_log_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, uintptr_t arg1);
extern uintptr_t _wrap_GetOptions_Info_log_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Info_log_level_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, swig_intgo arg1);
extern swig_intgo _wrap_GetOptions_Info_log_level_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Max_open_files_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, swig_intgo arg1);
extern swig_intgo _wrap_GetOptions_Max_open_files_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Max_file_opening_threads_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, swig_intgo arg1);
extern swig_intgo _wrap_GetOptions_Max_file_opening_threads_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Max_total_wal_size_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, uintptr_t arg1);
extern uintptr_t _wrap_GetOptions_Max_total_wal_size_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Statistics_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, uintptr_t arg1);
extern uintptr_t _wrap_GetOptions_Statistics_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_DisableDataSync_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, _Bool arg1);
extern _Bool _wrap_GetOptions_DisableDataSync_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Use_fsync_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, _Bool arg1);
extern _Bool _wrap_GetOptions_Use_fsync_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Db_paths_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, uintptr_t arg1);
extern uintptr_t _wrap_GetOptions_Db_paths_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Db_log_dir_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, swig_type_54 arg1);
extern swig_type_55 _wrap_GetOptions_Db_log_dir_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Wal_dir_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, swig_type_56 arg1);
extern swig_type_57 _wrap_GetOptions_Wal_dir_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Delete_obsolete_files_period_micros_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, uintptr_t arg1);
extern uintptr_t _wrap_GetOptions_Delete_obsolete_files_period_micros_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Base_background_compactions_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, swig_intgo arg1);
extern swig_intgo _wrap_GetOptions_Base_background_compactions_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Max_background_compactions_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, swig_intgo arg1);
extern swig_intgo _wrap_GetOptions_Max_background_compactions_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Max_subcompactions_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, uintptr_t arg1);
extern uintptr_t _wrap_GetOptions_Max_subcompactions_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Max_background_flushes_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, swig_intgo arg1);
extern swig_intgo _wrap_GetOptions_Max_background_flushes_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Max_log_file_size_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, swig_type_58 arg1);
extern swig_type_59 _wrap_GetOptions_Max_log_file_size_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Log_file_time_to_roll_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, swig_type_60 arg1);
extern swig_type_61 _wrap_GetOptions_Log_file_time_to_roll_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Keep_log_file_num_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, swig_type_62 arg1);
extern swig_type_63 _wrap_GetOptions_Keep_log_file_num_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Recycle_log_file_num_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, swig_type_64 arg1);
extern swig_type_65 _wrap_GetOptions_Recycle_log_file_num_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Max_manifest_file_size_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, uintptr_t arg1);
extern uintptr_t _wrap_GetOptions_Max_manifest_file_size_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Table_cache_numshardbits_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, swig_intgo arg1);
extern swig_intgo _wrap_GetOptions_Table_cache_numshardbits_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_WAL_ttl_seconds_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, uintptr_t arg1);
extern uintptr_t _wrap_GetOptions_WAL_ttl_seconds_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_WAL_size_limit_MB_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, uintptr_t arg1);
extern uintptr_t _wrap_GetOptions_WAL_size_limit_MB_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Manifest_preallocation_size_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, swig_type_66 arg1);
extern swig_type_67 _wrap_GetOptions_Manifest_preallocation_size_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Allow_os_buffer_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, _Bool arg1);
extern _Bool _wrap_GetOptions_Allow_os_buffer_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Allow_mmap_reads_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, _Bool arg1);
extern _Bool _wrap_GetOptions_Allow_mmap_reads_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Allow_mmap_writes_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, _Bool arg1);
extern _Bool _wrap_GetOptions_Allow_mmap_writes_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Allow_fallocate_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, _Bool arg1);
extern _Bool _wrap_GetOptions_Allow_fallocate_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Is_fd_close_on_exec_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, _Bool arg1);
extern _Bool _wrap_GetOptions_Is_fd_close_on_exec_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Skip_log_error_on_recovery_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, _Bool arg1);
extern _Bool _wrap_GetOptions_Skip_log_error_on_recovery_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Stats_dump_period_sec_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, swig_intgo arg1);
extern swig_intgo _wrap_GetOptions_Stats_dump_period_sec_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Advise_random_on_open_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, _Bool arg1);
extern _Bool _wrap_GetOptions_Advise_random_on_open_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Db_write_buffer_size_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, swig_type_68 arg1);
extern swig_type_69 _wrap_GetOptions_Db_write_buffer_size_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Access_hint_on_compaction_start_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, swig_intgo arg1);
extern swig_intgo _wrap_GetOptions_Access_hint_on_compaction_start_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_New_table_reader_for_compaction_inputs_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, _Bool arg1);
extern _Bool _wrap_GetOptions_New_table_reader_for_compaction_inputs_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Compaction_readahead_size_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, swig_type_70 arg1);
extern swig_type_71 _wrap_GetOptions_Compaction_readahead_size_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Random_access_max_buffer_size_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, swig_type_72 arg1);
extern swig_type_73 _wrap_GetOptions_Random_access_max_buffer_size_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Writable_file_max_buffer_size_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, swig_type_74 arg1);
extern swig_type_75 _wrap_GetOptions_Writable_file_max_buffer_size_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Use_adaptive_mutex_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, _Bool arg1);
extern _Bool _wrap_GetOptions_Use_adaptive_mutex_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Bytes_per_sync_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, uintptr_t arg1);
extern uintptr_t _wrap_GetOptions_Bytes_per_sync_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Wal_bytes_per_sync_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, uintptr_t arg1);
extern uintptr_t _wrap_GetOptions_Wal_bytes_per_sync_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Listeners_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, uintptr_t arg1);
extern uintptr_t _wrap_GetOptions_Listeners_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Enable_thread_tracking_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, _Bool arg1);
extern _Bool _wrap_GetOptions_Enable_thread_tracking_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Delayed_write_rate_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, uintptr_t arg1);
extern uintptr_t _wrap_GetOptions_Delayed_write_rate_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Allow_concurrent_memtable_write_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, _Bool arg1);
extern _Bool _wrap_GetOptions_Allow_concurrent_memtable_write_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Enable_write_thread_adaptive_yield_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, _Bool arg1);
extern _Bool _wrap_GetOptions_Enable_write_thread_adaptive_yield_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Write_thread_max_yield_usec_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, uintptr_t arg1);
extern uintptr_t _wrap_GetOptions_Write_thread_max_yield_usec_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Write_thread_slow_yield_usec_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, uintptr_t arg1);
extern uintptr_t _wrap_GetOptions_Write_thread_slow_yield_usec_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Skip_stats_update_on_db_open_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, _Bool arg1);
extern _Bool _wrap_GetOptions_Skip_stats_update_on_db_open_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Wal_recovery_mode_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, swig_intgo arg1);
extern swig_intgo _wrap_GetOptions_Wal_recovery_mode_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Row_cache_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, uintptr_t arg1);
extern uintptr_t _wrap_GetOptions_Row_cache_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Wal_filter_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, uintptr_t arg1);
extern uintptr_t _wrap_GetOptions_Wal_filter_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Fail_if_options_file_error_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, _Bool arg1);
extern _Bool _wrap_GetOptions_Fail_if_options_file_error_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern uintptr_t _wrap_Options_OptimizeForPointLookup_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, uintptr_t arg1);
extern uintptr_t _wrap_Options_OptimizeLevelStyleCompaction__SWIG_0_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, uintptr_t arg1);
extern uintptr_t _wrap_Options_OptimizeLevelStyleCompaction__SWIG_1_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern uintptr_t _wrap_Options_OptimizeUniversalStyleCompaction__SWIG_0_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, uintptr_t arg1);
extern uintptr_t _wrap_Options_OptimizeUniversalStyleCompaction__SWIG_1_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Comparator_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, uintptr_t arg1);
extern uintptr_t _wrap_GetOptions_Comparator_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Merge_operator_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, uintptr_t arg1);
extern uintptr_t _wrap_GetOptions_Merge_operator_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Compaction_filter_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, uintptr_t arg1);
extern uintptr_t _wrap_GetOptions_Compaction_filter_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Compaction_filter_factory_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, uintptr_t arg1);
extern uintptr_t _wrap_GetOptions_Compaction_filter_factory_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Write_buffer_size_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, swig_type_76 arg1);
extern swig_type_77 _wrap_GetOptions_Write_buffer_size_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Max_write_buffer_number_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, swig_intgo arg1);
extern swig_intgo _wrap_GetOptions_Max_write_buffer_number_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Min_write_buffer_number_to_merge_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, swig_intgo arg1);
extern swig_intgo _wrap_GetOptions_Min_write_buffer_number_to_merge_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Max_write_buffer_number_to_maintain_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, swig_intgo arg1);
extern swig_intgo _wrap_GetOptions_Max_write_buffer_number_to_maintain_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Compression_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, swig_intgo arg1);
extern swig_intgo _wrap_GetOptions_Compression_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Compression_per_level_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, uintptr_t arg1);
extern uintptr_t _wrap_GetOptions_Compression_per_level_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Compression_opts_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, uintptr_t arg1);
extern uintptr_t _wrap_GetOptions_Compression_opts_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Prefix_extractor_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, uintptr_t arg1);
extern uintptr_t _wrap_GetOptions_Prefix_extractor_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Num_levels_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, swig_intgo arg1);
extern swig_intgo _wrap_GetOptions_Num_levels_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Level0_file_num_compaction_trigger_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, swig_intgo arg1);
extern swig_intgo _wrap_GetOptions_Level0_file_num_compaction_trigger_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Level0_slowdown_writes_trigger_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, swig_intgo arg1);
extern swig_intgo _wrap_GetOptions_Level0_slowdown_writes_trigger_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Level0_stop_writes_trigger_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, swig_intgo arg1);
extern swig_intgo _wrap_GetOptions_Level0_stop_writes_trigger_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Max_mem_compaction_level_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, swig_intgo arg1);
extern swig_intgo _wrap_GetOptions_Max_mem_compaction_level_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Target_file_size_base_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, uintptr_t arg1);
extern uintptr_t _wrap_GetOptions_Target_file_size_base_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Target_file_size_multiplier_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, swig_intgo arg1);
extern swig_intgo _wrap_GetOptions_Target_file_size_multiplier_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Max_bytes_for_level_base_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, uintptr_t arg1);
extern uintptr_t _wrap_GetOptions_Max_bytes_for_level_base_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Level_compaction_dynamic_level_bytes_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, _Bool arg1);
extern _Bool _wrap_GetOptions_Level_compaction_dynamic_level_bytes_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Max_bytes_for_level_multiplier_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, swig_intgo arg1);
extern swig_intgo _wrap_GetOptions_Max_bytes_for_level_multiplier_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Max_bytes_for_level_multiplier_additional_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, uintptr_t arg1);
extern uintptr_t _wrap_GetOptions_Max_bytes_for_level_multiplier_additional_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Expanded_compaction_factor_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, swig_intgo arg1);
extern swig_intgo _wrap_GetOptions_Expanded_compaction_factor_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Source_compaction_factor_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, swig_intgo arg1);
extern swig_intgo _wrap_GetOptions_Source_compaction_factor_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Max_grandparent_overlap_factor_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, swig_intgo arg1);
extern swig_intgo _wrap_GetOptions_Max_grandparent_overlap_factor_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Soft_rate_limit_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, double arg1);
extern double _wrap_GetOptions_Soft_rate_limit_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Hard_rate_limit_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, double arg1);
extern double _wrap_GetOptions_Hard_rate_limit_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Soft_pending_compaction_bytes_limit_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, uintptr_t arg1);
extern uintptr_t _wrap_GetOptions_Soft_pending_compaction_bytes_limit_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Hard_pending_compaction_bytes_limit_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, uintptr_t arg1);
extern uintptr_t _wrap_GetOptions_Hard_pending_compaction_bytes_limit_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Rate_limit_delay_max_milliseconds_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, swig_intgo arg1);
extern swig_intgo _wrap_GetOptions_Rate_limit_delay_max_milliseconds_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Arena_block_size_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, swig_type_78 arg1);
extern swig_type_79 _wrap_GetOptions_Arena_block_size_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Disable_auto_compactions_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, _Bool arg1);
extern _Bool _wrap_GetOptions_Disable_auto_compactions_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Purge_redundant_kvs_while_flush_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, _Bool arg1);
extern _Bool _wrap_GetOptions_Purge_redundant_kvs_while_flush_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Compaction_style_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, swig_intgo arg1);
extern swig_intgo _wrap_GetOptions_Compaction_style_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Compaction_pri_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, swig_intgo arg1);
extern swig_intgo _wrap_GetOptions_Compaction_pri_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Verify_checksums_in_compaction_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, _Bool arg1);
extern _Bool _wrap_GetOptions_Verify_checksums_in_compaction_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Compaction_options_universal_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, uintptr_t arg1);
extern uintptr_t _wrap_GetOptions_Compaction_options_universal_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Compaction_options_fifo_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, uintptr_t arg1);
extern uintptr_t _wrap_GetOptions_Compaction_options_fifo_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Filter_deletes_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, _Bool arg1);
extern _Bool _wrap_GetOptions_Filter_deletes_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Max_sequential_skip_in_iterations_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, uintptr_t arg1);
extern uintptr_t _wrap_GetOptions_Max_sequential_skip_in_iterations_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Memtable_factory_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, uintptr_t arg1);
extern uintptr_t _wrap_GetOptions_Memtable_factory_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Table_factory_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, uintptr_t arg1);
extern uintptr_t _wrap_GetOptions_Table_factory_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Table_properties_collector_factories_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, uintptr_t arg1);
extern uintptr_t _wrap_GetOptions_Table_properties_collector_factories_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Inplace_update_support_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, _Bool arg1);
extern _Bool _wrap_GetOptions_Inplace_update_support_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Inplace_update_num_locks_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, swig_type_80 arg1);
extern swig_type_81 _wrap_GetOptions_Inplace_update_num_locks_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Inplace_callback_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, swig_type_82 arg1);
extern swig_type_83 _wrap_GetOptions_Inplace_callback_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Memtable_prefix_bloom_bits_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, uintptr_t arg1);
extern uintptr_t _wrap_GetOptions_Memtable_prefix_bloom_bits_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Memtable_prefix_bloom_probes_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, uintptr_t arg1);
extern uintptr_t _wrap_GetOptions_Memtable_prefix_bloom_probes_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Memtable_prefix_bloom_huge_page_tlb_size_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, swig_type_84 arg1);
extern swig_type_85 _wrap_GetOptions_Memtable_prefix_bloom_huge_page_tlb_size_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Bloom_locality_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, uintptr_t arg1);
extern uintptr_t _wrap_GetOptions_Bloom_locality_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Max_successive_merges_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, swig_type_86 arg1);
extern swig_type_87 _wrap_GetOptions_Max_successive_merges_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Min_partial_merge_operands_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, uintptr_t arg1);
extern uintptr_t _wrap_GetOptions_Min_partial_merge_operands_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Optimize_filters_for_hits_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, _Bool arg1);
extern _Bool _wrap_GetOptions_Optimize_filters_for_hits_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Paranoid_file_checks_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, _Bool arg1);
extern _Bool _wrap_GetOptions_Paranoid_file_checks_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern void _wrap_SetOptions_Compaction_measure_io_stats_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base, _Bool arg1);
extern _Bool _wrap_GetOptions_Compaction_measure_io_stats_rocksdbswig_576e316b0df25a62(uintptr_t _swig_base);
extern uintptr_t _wrap_Options_SwigGetColumnFamilyOptions_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern swig_intgo _wrap_kReadAllTier_rocksdbswig_576e316b0df25a62(void);
extern swig_intgo _wrap_kBlockCacheTier_rocksdbswig_576e316b0df25a62(void);
extern swig_intgo _wrap_kPersistedTier_rocksdbswig_576e316b0df25a62(void);
extern void _wrap_ReadOptions_verify_checksums_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, _Bool arg2);
extern _Bool _wrap_ReadOptions_verify_checksums_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_ReadOptions_fill_cache_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, _Bool arg2);
extern _Bool _wrap_ReadOptions_fill_cache_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_ReadOptions_snapshot_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_ReadOptions_snapshot_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_ReadOptions_iterate_upper_bound_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_ReadOptions_iterate_upper_bound_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_ReadOptions_read_tier_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_ReadOptions_read_tier_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_ReadOptions_tailing_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, _Bool arg2);
extern _Bool _wrap_ReadOptions_tailing_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_ReadOptions_managed_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, _Bool arg2);
extern _Bool _wrap_ReadOptions_managed_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_ReadOptions_total_order_seek_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, _Bool arg2);
extern _Bool _wrap_ReadOptions_total_order_seek_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_ReadOptions_prefix_same_as_start_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, _Bool arg2);
extern _Bool _wrap_ReadOptions_prefix_same_as_start_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_ReadOptions_pin_data_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, _Bool arg2);
extern _Bool _wrap_ReadOptions_pin_data_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern uintptr_t _wrap_new_ReadOptions__SWIG_0_rocksdbswig_576e316b0df25a62(void);
extern uintptr_t _wrap_new_ReadOptions__SWIG_1_rocksdbswig_576e316b0df25a62(_Bool arg1, _Bool arg2);
extern void _wrap_delete_ReadOptions_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_WriteOptions_sync_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, _Bool arg2);
extern _Bool _wrap_WriteOptions_sync_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_WriteOptions_disableWAL_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, _Bool arg2);
extern _Bool _wrap_WriteOptions_disableWAL_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_WriteOptions_timeout_hint_us_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_WriteOptions_timeout_hint_us_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_WriteOptions_ignore_missing_column_families_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, _Bool arg2);
extern _Bool _wrap_WriteOptions_ignore_missing_column_families_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern uintptr_t _wrap_new_WriteOptions_rocksdbswig_576e316b0df25a62(void);
extern void _wrap_delete_WriteOptions_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_FlushOptions_wait_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, _Bool arg2);
extern _Bool _wrap_FlushOptions_wait_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern uintptr_t _wrap_new_FlushOptions_rocksdbswig_576e316b0df25a62(void);
extern void _wrap_delete_FlushOptions_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern uintptr_t _wrap_GetOptions__SWIG_0_rocksdbswig_576e316b0df25a62(swig_type_88 arg1, swig_intgo arg2, swig_intgo arg3, uintptr_t arg4);
extern uintptr_t _wrap_GetOptions__SWIG_1_rocksdbswig_576e316b0df25a62(swig_type_89 arg1, swig_intgo arg2, swig_intgo arg3);
extern uintptr_t _wrap_GetOptions__SWIG_2_rocksdbswig_576e316b0df25a62(swig_type_90 arg1, swig_intgo arg2);
extern uintptr_t _wrap_GetOptions__SWIG_3_rocksdbswig_576e316b0df25a62(swig_type_91 arg1);
extern uintptr_t _wrap_CreateLoggerFromOptions_rocksdbswig_576e316b0df25a62(swig_type_92 arg1, uintptr_t arg2, uintptr_t arg3);
extern void _wrap_CompactionOptions_compression_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_CompactionOptions_compression_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_CompactionOptions_output_file_size_limit_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_CompactionOptions_output_file_size_limit_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern uintptr_t _wrap_new_CompactionOptions_rocksdbswig_576e316b0df25a62(void);
extern void _wrap_delete_CompactionOptions_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern swig_intgo _wrap_BottommostLevelCompaction_kSkip_rocksdbswig_576e316b0df25a62(void);
extern swig_intgo _wrap_BottommostLevelCompaction_kIfHaveCompactionFilter_rocksdbswig_576e316b0df25a62(void);
extern swig_intgo _wrap_BottommostLevelCompaction_kForce_rocksdbswig_576e316b0df25a62(void);
extern void _wrap_CompactRangeOptions_exclusive_manual_compaction_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, _Bool arg2);
extern _Bool _wrap_CompactRangeOptions_exclusive_manual_compaction_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_CompactRangeOptions_change_level_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, _Bool arg2);
extern _Bool _wrap_CompactRangeOptions_change_level_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_CompactRangeOptions_target_level_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_CompactRangeOptions_target_level_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_CompactRangeOptions_target_path_id_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_CompactRangeOptions_target_path_id_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_CompactRangeOptions_bottommost_level_compaction_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_CompactRangeOptions_bottommost_level_compaction_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern uintptr_t _wrap_new_CompactRangeOptions_rocksdbswig_576e316b0df25a62(void);
extern void _wrap_delete_CompactRangeOptions_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern swig_type_93 _wrap_kDefaultColumnFamilyName_get_rocksdbswig_576e316b0df25a62(void);
extern void _wrap_ColumnFamilyDescriptor_name_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, swig_type_94 arg2);
extern swig_type_95 _wrap_ColumnFamilyDescriptor_name_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_ColumnFamilyDescriptor_options_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_ColumnFamilyDescriptor_options_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern uintptr_t _wrap_new_ColumnFamilyDescriptor__SWIG_0_rocksdbswig_576e316b0df25a62(void);
extern uintptr_t _wrap_new_ColumnFamilyDescriptor__SWIG_1_rocksdbswig_576e316b0df25a62(swig_type_96 arg1, uintptr_t arg2);
extern void _wrap_delete_ColumnFamilyDescriptor_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_delete_ColumnFamilyHandle_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern swig_type_97 _wrap_ColumnFamilyHandle_GetName_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern uintptr_t _wrap_ColumnFamilyHandle_GetID_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern uintptr_t _wrap_ColumnFamilyHandle_GetDescriptor_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2);
extern swig_intgo _wrap_kMajorVersion_get_rocksdbswig_576e316b0df25a62(void);
extern swig_intgo _wrap_kMinorVersion_get_rocksdbswig_576e316b0df25a62(void);
extern void _wrap_Range_start_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Range_start_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_Range_limit_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Range_limit_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern uintptr_t _wrap_new_Range__SWIG_0_rocksdbswig_576e316b0df25a62(void);
extern uintptr_t _wrap_new_Range__SWIG_1_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_delete_Range_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern uintptr_t _wrap_DB_Open__SWIG_0_rocksdbswig_576e316b0df25a62(uintptr_t arg1, swig_type_98 arg2, uintptr_t arg3);
extern uintptr_t _wrap_DB_OpenForReadOnly__SWIG_0_rocksdbswig_576e316b0df25a62(uintptr_t arg1, swig_type_99 arg2, uintptr_t arg3, _Bool arg4);
extern uintptr_t _wrap_DB_OpenForReadOnly__SWIG_1_rocksdbswig_576e316b0df25a62(uintptr_t arg1, swig_type_100 arg2, uintptr_t arg3);
extern uintptr_t _wrap_DB_OpenForReadOnly__SWIG_2_rocksdbswig_576e316b0df25a62(uintptr_t arg1, swig_type_101 arg2, uintptr_t arg3, uintptr_t arg4, uintptr_t arg5, _Bool arg6);
extern uintptr_t _wrap_DB_OpenForReadOnly__SWIG_3_rocksdbswig_576e316b0df25a62(uintptr_t arg1, swig_type_102 arg2, uintptr_t arg3, uintptr_t arg4, uintptr_t arg5);
extern uintptr_t _wrap_DB_Open__SWIG_1_rocksdbswig_576e316b0df25a62(uintptr_t arg1, swig_type_103 arg2, uintptr_t arg3, uintptr_t arg4, uintptr_t arg5);
extern uintptr_t _wrap_DB_ListColumnFamilies_rocksdbswig_576e316b0df25a62(uintptr_t arg1, swig_type_104 arg2, uintptr_t arg3);
extern void _wrap_delete_DB_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern uintptr_t _wrap_DB_CreateColumnFamily_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2, swig_type_105 arg3, uintptr_t arg4);
extern uintptr_t _wrap_DB_DropColumnFamily_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_DB_Put__SWIG_0_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, uintptr_t arg5);
extern uintptr_t _wrap_DB_Put__SWIG_1_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4);
extern uintptr_t _wrap_DB_Delete__SWIG_0_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4);
extern uintptr_t _wrap_DB_Delete__SWIG_1_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern uintptr_t _wrap_DB_SingleDelete__SWIG_0_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4);
extern uintptr_t _wrap_DB_SingleDelete__SWIG_1_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern uintptr_t _wrap_DB_Merge__SWIG_0_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, uintptr_t arg5);
extern uintptr_t _wrap_DB_Merge__SWIG_1_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4);
extern uintptr_t _wrap_DB_Write_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern uintptr_t _wrap_DB_Get__SWIG_0_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, swig_voidp arg5);
extern uintptr_t _wrap_DB_Get__SWIG_1_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, swig_voidp arg4);
extern uintptr_t _wrap_DB_MultiGet__SWIG_0_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, uintptr_t arg5);
extern uintptr_t _wrap_DB_MultiGet__SWIG_1_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4);
extern _Bool _wrap_DB_KeyMayExist__SWIG_0_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, swig_voidp arg5, swig_voidp arg6);
extern _Bool _wrap_DB_KeyMayExist__SWIG_1_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, swig_voidp arg5);
extern _Bool _wrap_DB_KeyMayExist__SWIG_2_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, swig_voidp arg4, swig_voidp arg5);
extern _Bool _wrap_DB_KeyMayExist__SWIG_3_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, swig_voidp arg4);
extern uintptr_t _wrap_DB_NewIterator__SWIG_0_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern uintptr_t _wrap_DB_NewIterator__SWIG_1_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_DB_NewIterators_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4);
extern uintptr_t _wrap_DB_GetSnapshot_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_DB_ReleaseSnapshot_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2);
extern _Bool _wrap_DB_GetProperty__SWIG_0_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, swig_voidp arg4);
extern _Bool _wrap_DB_GetProperty__SWIG_1_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2, swig_voidp arg3);
extern _Bool _wrap_DB_GetIntProperty__SWIG_0_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4);
extern _Bool _wrap_DB_GetIntProperty__SWIG_1_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern _Bool _wrap_DB_GetAggregatedIntProperty_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern void _wrap_DB_GetApproximateSizes__SWIG_0_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, swig_intgo arg4, uintptr_t arg5, _Bool arg6);
extern void _wrap_DB_GetApproximateSizes__SWIG_1_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, swig_intgo arg4, uintptr_t arg5);
extern void _wrap_DB_GetApproximateSizes__SWIG_2_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, uintptr_t arg4, _Bool arg5);
extern void _wrap_DB_GetApproximateSizes__SWIG_3_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, uintptr_t arg4);
extern uintptr_t _wrap_DB_CompactRange__SWIG_0_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, uintptr_t arg5);
extern uintptr_t _wrap_DB_CompactRange__SWIG_1_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4);
extern uintptr_t _wrap_DB_CompactRange__SWIG_2_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, _Bool arg5, swig_intgo arg6, uintptr_t arg7);
extern uintptr_t _wrap_DB_CompactRange__SWIG_3_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, _Bool arg5, swig_intgo arg6);
extern uintptr_t _wrap_DB_CompactRange__SWIG_4_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, _Bool arg5);
extern uintptr_t _wrap_DB_CompactRange__SWIG_5_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4);
extern uintptr_t _wrap_DB_CompactRange__SWIG_6_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, _Bool arg4, swig_intgo arg5, uintptr_t arg6);
extern uintptr_t _wrap_DB_CompactRange__SWIG_7_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, _Bool arg4, swig_intgo arg5);
extern uintptr_t _wrap_DB_CompactRange__SWIG_8_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, _Bool arg4);
extern uintptr_t _wrap_DB_CompactRange__SWIG_9_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern uintptr_t _wrap_DB_SetOptions__SWIG_0_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern uintptr_t _wrap_DB_SetOptions__SWIG_1_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_DB_CompactFiles__SWIG_0_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, swig_intgo arg5, swig_intgo arg6);
extern uintptr_t _wrap_DB_CompactFiles__SWIG_1_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, swig_intgo arg5);
extern uintptr_t _wrap_DB_CompactFiles__SWIG_2_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, swig_intgo arg4, swig_intgo arg5);
extern uintptr_t _wrap_DB_CompactFiles__SWIG_3_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, swig_intgo arg4);
extern uintptr_t _wrap_DB_PauseBackgroundWork_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern uintptr_t _wrap_DB_ContinueBackgroundWork_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern uintptr_t _wrap_DB_EnableAutoCompaction_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2);
extern swig_intgo _wrap_DB_NumberLevels__SWIG_0_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2);
extern swig_intgo _wrap_DB_NumberLevels__SWIG_1_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern swig_intgo _wrap_DB_MaxMemCompactionLevel__SWIG_0_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2);
extern swig_intgo _wrap_DB_MaxMemCompactionLevel__SWIG_1_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern swig_intgo _wrap_DB_Level0StopWriteTrigger__SWIG_0_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2);
extern swig_intgo _wrap_DB_Level0StopWriteTrigger__SWIG_1_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern swig_type_106 _wrap_DB_GetName_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern uintptr_t _wrap_DB_GetEnv_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern uintptr_t _wrap_DB_GetOptions__SWIG_0_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_DB_GetOptions__SWIG_1_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern uintptr_t _wrap_DB_GetDBOptions_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern uintptr_t _wrap_DB_Flush__SWIG_0_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern uintptr_t _wrap_DB_Flush__SWIG_1_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_DB_SyncWAL_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern uintptr_t _wrap_DB_GetLatestSequenceNumber_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern uintptr_t _wrap_DB_DisableFileDeletions_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern uintptr_t _wrap_DB_EnableFileDeletions__SWIG_0_rocksdbswig_576e316b0df25a62(uintptr_t arg1, _Bool arg2);
extern uintptr_t _wrap_DB_EnableFileDeletions__SWIG_1_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern uintptr_t _wrap_DB_GetLiveFiles__SWIG_0_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, _Bool arg4);
extern uintptr_t _wrap_DB_GetLiveFiles__SWIG_1_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern uintptr_t _wrap_DB_GetSortedWalFiles_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_DB_GetUpdatesSince__SWIG_0_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4);
extern uintptr_t _wrap_DB_GetUpdatesSince__SWIG_1_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern uintptr_t _wrap_DB_DeleteFile_rocksdbswig_576e316b0df25a62(uintptr_t arg1, swig_type_107 arg2);
extern void _wrap_DB_GetLiveFilesMetaData_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_DB_GetColumnFamilyMetaData__SWIG_0_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern void _wrap_DB_GetColumnFamilyMetaData__SWIG_1_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_DB_AddFile__SWIG_0_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2, swig_type_108 arg3, _Bool arg4);
extern uintptr_t _wrap_DB_AddFile__SWIG_1_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2, swig_type_109 arg3);
extern uintptr_t _wrap_DB_AddFile__SWIG_2_rocksdbswig_576e316b0df25a62(uintptr_t arg1, swig_type_110 arg2, _Bool arg3);
extern uintptr_t _wrap_DB_AddFile__SWIG_3_rocksdbswig_576e316b0df25a62(uintptr_t arg1, swig_type_111 arg2);
extern uintptr_t _wrap_DB_AddFile__SWIG_4_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, _Bool arg4);
extern uintptr_t _wrap_DB_AddFile__SWIG_5_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern uintptr_t _wrap_DB_AddFile__SWIG_6_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2, _Bool arg3);
extern uintptr_t _wrap_DB_AddFile__SWIG_7_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_DB_GetDbIdentity_rocksdbswig_576e316b0df25a62(uintptr_t arg1, swig_voidp arg2);
extern uintptr_t _wrap_DB_DefaultColumnFamily_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern uintptr_t _wrap_DB_GetPropertiesOfAllTables__SWIG_0_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern uintptr_t _wrap_DB_GetPropertiesOfAllTables__SWIG_1_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_DB_GetPropertiesOfTablesInRange_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, uintptr_t arg5);
extern uintptr_t _wrap_DB_GetRootDB_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern uintptr_t _wrap_DestroyDB_rocksdbswig_576e316b0df25a62(swig_type_112 arg1, uintptr_t arg2);
extern uintptr_t _wrap_RepairDB_rocksdbswig_576e316b0df25a62(swig_type_113 arg1, uintptr_t arg2);
extern void _wrap_StatusDBPair_status_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_StatusDBPair_status_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_StatusDBPair_db_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_StatusDBPair_db_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern uintptr_t _wrap_new_StatusDBPair_rocksdbswig_576e316b0df25a62(void);
extern void _wrap_delete_StatusDBPair_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern uintptr_t _wrap_MyDBOpen_rocksdbswig_576e316b0df25a62(uintptr_t arg1, swig_type_114 arg2);
extern void _wrap_StatusStringPair_status_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_StatusStringPair_status_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern void _wrap_StatusStringPair_value_set_rocksdbswig_576e316b0df25a62(uintptr_t arg1, swig_type_115 arg2);
extern swig_type_116 _wrap_StatusStringPair_value_get_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern uintptr_t _wrap_new_StatusStringPair_rocksdbswig_576e316b0df25a62(void);
extern void _wrap_delete_StatusStringPair_rocksdbswig_576e316b0df25a62(uintptr_t arg1);
extern uintptr_t _wrap_MyDBGet_rocksdbswig_576e316b0df25a62(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
#undef intgo

#cgo LDFLAGS: -L${SRCDIR}/cc -lrocksdbswigwrap -lrocksdb -lstdc++

*/
import "C"

import "unsafe"
import _ "runtime/cgo"
import "sync"


type _ unsafe.Pointer



var Swig_escape_always_false bool
var Swig_escape_val interface{}


type _swig_fnptr *byte
type _swig_memberptr *byte


type _ sync.Mutex


type swig_gostring struct { p uintptr; n int }
func swigCopyString(s string) string {
  p := *(*swig_gostring)(unsafe.Pointer(&s))
  r := string((*[0x7fffffff]byte)(unsafe.Pointer(p.p))[:p.n])
  Swig_free(p.p)
  return r
}

func Swig_free(arg1 uintptr) {
	_swig_i_0 := arg1
	C._wrap_Swig_free_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))
}

type SwigcptrSlice uintptr

func (p SwigcptrSlice) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrSlice) SwigIsSlice() {
}

func NewSlice__SWIG_0() (_swig_ret Slice) {
	var swig_r Slice
	swig_r = (Slice)(SwigcptrSlice(C._wrap_new_Slice__SWIG_0_rocksdbswig_576e316b0df25a62()))
	return swig_r
}

func NewSlice__SWIG_1(arg1 string, arg2 int64) (_swig_ret Slice) {
	var swig_r Slice
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (Slice)(SwigcptrSlice(C._wrap_new_Slice__SWIG_1_rocksdbswig_576e316b0df25a62(*(*C.swig_type_1)(unsafe.Pointer(&_swig_i_0)), C.swig_type_2(_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func NewSlice__SWIG_2(arg1 string) (_swig_ret Slice) {
	var swig_r Slice
	_swig_i_0 := arg1
	swig_r = (Slice)(SwigcptrSlice(C._wrap_new_Slice__SWIG_2_rocksdbswig_576e316b0df25a62(*(*C.swig_type_3)(unsafe.Pointer(&_swig_i_0)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func NewSlice__SWIG_3(arg1 string) (_swig_ret Slice) {
	var swig_r Slice
	_swig_i_0 := arg1
	swig_r = (Slice)(SwigcptrSlice(C._wrap_new_Slice__SWIG_3_rocksdbswig_576e316b0df25a62(*(*C.swig_type_4)(unsafe.Pointer(&_swig_i_0)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func NewSlice__SWIG_4(arg1 SliceParts, arg2 *string) (_swig_ret Slice) {
	var swig_r Slice
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2
	swig_r = (Slice)(SwigcptrSlice(C._wrap_new_Slice__SWIG_4_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.swig_voidp(_swig_i_1))))
	return swig_r
}

func NewSlice(a ...interface{}) Slice {
	argc := len(a)
	if argc == 0 {
		return NewSlice__SWIG_0()
	}
	if argc == 1 {
		return NewSlice__SWIG_2(a[0].(string))
	}
	if argc == 1 {
		return NewSlice__SWIG_3(a[0].(string))
	}
	if argc == 2 {
		if _, ok := a[0].(SwigcptrSliceParts); !ok {
			goto check_4
		}
		if _, ok := a[1].(*string); !ok {
			goto check_4
		}
		return NewSlice__SWIG_4(a[0].(SliceParts), a[1].(*string))
	}
check_4:
	if argc == 2 {
		return NewSlice__SWIG_1(a[0].(string), a[1].(int64))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSlice) Data() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Slice_data_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrSlice) Size() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_Slice_size_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSlice) Empty() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_Slice_empty_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSlice) Clear() {
	_swig_i_0 := arg1
	C._wrap_Slice_clear_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrSlice) Remove_prefix(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Slice_remove_prefix_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.swig_type_7(_swig_i_1))
}

func (arg1 SwigcptrSlice) Remove_suffix(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Slice_remove_suffix_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.swig_type_8(_swig_i_1))
}

func (arg1 SwigcptrSlice) ToString__SWIG_0(arg2 bool) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r_p := C._wrap_Slice_ToString__SWIG_0_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrSlice) ToString__SWIG_1() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Slice_ToString__SWIG_1_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (p SwigcptrSlice) ToString(a ...interface{}) string {
	argc := len(a)
	if argc == 0 {
		return p.ToString__SWIG_1()
	}
	if argc == 1 {
		return p.ToString__SWIG_0(a[0].(bool))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSlice) Compare(arg2 Slice) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (int)(C._wrap_Slice_compare_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrSlice) Starts_with(arg2 Slice) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (bool)(C._wrap_Slice_starts_with_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrSlice) Ends_with(arg2 Slice) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (bool)(C._wrap_Slice_ends_with_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrSlice) Difference_offset(arg2 Slice) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (int64)(C._wrap_Slice_difference_offset_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrSlice) SetData_(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Slice_data__set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), *(*C.swig_type_12)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrSlice) GetData_() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Slice_data__get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrSlice) SetSize_(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Slice_size__set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.swig_type_14(_swig_i_1))
}

func (arg1 SwigcptrSlice) GetSize_() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_Slice_size__get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func DeleteSlice(arg1 Slice) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_Slice_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))
}

type Slice interface {
	Swigcptr() uintptr
	SwigIsSlice()
	Data() (_swig_ret string)
	Size() (_swig_ret int64)
	Empty() (_swig_ret bool)
	Clear()
	Remove_prefix(arg2 int64)
	Remove_suffix(arg2 int64)
	ToString(a ...interface{}) string
	Compare(arg2 Slice) (_swig_ret int)
	Starts_with(arg2 Slice) (_swig_ret bool)
	Ends_with(arg2 Slice) (_swig_ret bool)
	Difference_offset(arg2 Slice) (_swig_ret int64)
	SetData_(arg2 string)
	GetData_() (_swig_ret string)
	SetSize_(arg2 int64)
	GetSize_() (_swig_ret int64)
}

type SwigcptrSliceParts uintptr

func (p SwigcptrSliceParts) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrSliceParts) SwigIsSliceParts() {
}

func NewSliceParts__SWIG_0(arg1 Slice, arg2 int) (_swig_ret SliceParts) {
	var swig_r SliceParts
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2
	swig_r = (SliceParts)(SwigcptrSliceParts(C._wrap_new_SliceParts__SWIG_0_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))))
	return swig_r
}

func NewSliceParts__SWIG_1() (_swig_ret SliceParts) {
	var swig_r SliceParts
	swig_r = (SliceParts)(SwigcptrSliceParts(C._wrap_new_SliceParts__SWIG_1_rocksdbswig_576e316b0df25a62()))
	return swig_r
}

func NewSliceParts(a ...interface{}) SliceParts {
	argc := len(a)
	if argc == 0 {
		return NewSliceParts__SWIG_1()
	}
	if argc == 2 {
		return NewSliceParts__SWIG_0(a[0].(Slice), a[1].(int))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSliceParts) SetParts(arg2 Slice) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_SliceParts_parts_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrSliceParts) GetParts() (_swig_ret Slice) {
	var swig_r Slice
	_swig_i_0 := arg1
	swig_r = (Slice)(SwigcptrSlice(C._wrap_SliceParts_parts_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrSliceParts) SetNum_parts(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_SliceParts_num_parts_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrSliceParts) GetNum_parts() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_SliceParts_num_parts_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func DeleteSliceParts(arg1 SliceParts) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_SliceParts_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))
}

type SliceParts interface {
	Swigcptr() uintptr
	SwigIsSliceParts()
	SetParts(arg2 Slice)
	GetParts() (_swig_ret Slice)
	SetNum_parts(arg2 int)
	GetNum_parts() (_swig_ret int)
}

type SwigcptrStatus uintptr

func (p SwigcptrStatus) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrStatus) SwigIsStatus() {
}

func NewStatus__SWIG_0() (_swig_ret Status) {
	var swig_r Status
	swig_r = (Status)(SwigcptrStatus(C._wrap_new_Status__SWIG_0_rocksdbswig_576e316b0df25a62()))
	return swig_r
}

func DeleteStatus(arg1 Status) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_Status_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))
}

func NewStatus__SWIG_1(arg1 Status) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (Status)(SwigcptrStatus(C._wrap_new_Status__SWIG_1_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewStatus__SWIG_2(arg1 uintptr) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	swig_r = (Status)(SwigcptrStatus(C._wrap_new_Status__SWIG_2_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewStatus(a ...interface{}) Status {
	argc := len(a)
	if argc == 0 {
		return NewStatus__SWIG_0()
	}
	if argc == 1 {
		if _, ok := a[0].(SwigcptrStatus); !ok {
			goto check_2
		}
		return NewStatus__SWIG_1(a[0].(Status))
	}
check_2:
	if argc == 1 {
		return NewStatus__SWIG_2(a[0].(uintptr))
	}
	panic("No match for overloaded function call")
}

type RocksdbStatusCode int
func _swig_getStatus_kOk_Status() (_swig_ret RocksdbStatusCode) {
	var swig_r RocksdbStatusCode
	swig_r = (RocksdbStatusCode)(C._wrap_kOk_Status_rocksdbswig_576e316b0df25a62())
	return swig_r
}

var StatusKOk RocksdbStatusCode = _swig_getStatus_kOk_Status()
func _swig_getStatus_kNotFound_Status() (_swig_ret RocksdbStatusCode) {
	var swig_r RocksdbStatusCode
	swig_r = (RocksdbStatusCode)(C._wrap_kNotFound_Status_rocksdbswig_576e316b0df25a62())
	return swig_r
}

var StatusKNotFound RocksdbStatusCode = _swig_getStatus_kNotFound_Status()
func _swig_getStatus_kCorruption_Status() (_swig_ret RocksdbStatusCode) {
	var swig_r RocksdbStatusCode
	swig_r = (RocksdbStatusCode)(C._wrap_kCorruption_Status_rocksdbswig_576e316b0df25a62())
	return swig_r
}

var StatusKCorruption RocksdbStatusCode = _swig_getStatus_kCorruption_Status()
func _swig_getStatus_kNotSupported_Status() (_swig_ret RocksdbStatusCode) {
	var swig_r RocksdbStatusCode
	swig_r = (RocksdbStatusCode)(C._wrap_kNotSupported_Status_rocksdbswig_576e316b0df25a62())
	return swig_r
}

var StatusKNotSupported RocksdbStatusCode = _swig_getStatus_kNotSupported_Status()
func _swig_getStatus_kInvalidArgument_Status() (_swig_ret RocksdbStatusCode) {
	var swig_r RocksdbStatusCode
	swig_r = (RocksdbStatusCode)(C._wrap_kInvalidArgument_Status_rocksdbswig_576e316b0df25a62())
	return swig_r
}

var StatusKInvalidArgument RocksdbStatusCode = _swig_getStatus_kInvalidArgument_Status()
func _swig_getStatus_kIOError_Status() (_swig_ret RocksdbStatusCode) {
	var swig_r RocksdbStatusCode
	swig_r = (RocksdbStatusCode)(C._wrap_kIOError_Status_rocksdbswig_576e316b0df25a62())
	return swig_r
}

var StatusKIOError RocksdbStatusCode = _swig_getStatus_kIOError_Status()
func _swig_getStatus_kMergeInProgress_Status() (_swig_ret RocksdbStatusCode) {
	var swig_r RocksdbStatusCode
	swig_r = (RocksdbStatusCode)(C._wrap_kMergeInProgress_Status_rocksdbswig_576e316b0df25a62())
	return swig_r
}

var StatusKMergeInProgress RocksdbStatusCode = _swig_getStatus_kMergeInProgress_Status()
func _swig_getStatus_kIncomplete_Status() (_swig_ret RocksdbStatusCode) {
	var swig_r RocksdbStatusCode
	swig_r = (RocksdbStatusCode)(C._wrap_kIncomplete_Status_rocksdbswig_576e316b0df25a62())
	return swig_r
}

var StatusKIncomplete RocksdbStatusCode = _swig_getStatus_kIncomplete_Status()
func _swig_getStatus_kShutdownInProgress_Status() (_swig_ret RocksdbStatusCode) {
	var swig_r RocksdbStatusCode
	swig_r = (RocksdbStatusCode)(C._wrap_kShutdownInProgress_Status_rocksdbswig_576e316b0df25a62())
	return swig_r
}

var StatusKShutdownInProgress RocksdbStatusCode = _swig_getStatus_kShutdownInProgress_Status()
func _swig_getStatus_kTimedOut_Status() (_swig_ret RocksdbStatusCode) {
	var swig_r RocksdbStatusCode
	swig_r = (RocksdbStatusCode)(C._wrap_kTimedOut_Status_rocksdbswig_576e316b0df25a62())
	return swig_r
}

var StatusKTimedOut RocksdbStatusCode = _swig_getStatus_kTimedOut_Status()
func _swig_getStatus_kAborted_Status() (_swig_ret RocksdbStatusCode) {
	var swig_r RocksdbStatusCode
	swig_r = (RocksdbStatusCode)(C._wrap_kAborted_Status_rocksdbswig_576e316b0df25a62())
	return swig_r
}

var StatusKAborted RocksdbStatusCode = _swig_getStatus_kAborted_Status()
func _swig_getStatus_kBusy_Status() (_swig_ret RocksdbStatusCode) {
	var swig_r RocksdbStatusCode
	swig_r = (RocksdbStatusCode)(C._wrap_kBusy_Status_rocksdbswig_576e316b0df25a62())
	return swig_r
}

var StatusKBusy RocksdbStatusCode = _swig_getStatus_kBusy_Status()
func _swig_getStatus_kExpired_Status() (_swig_ret RocksdbStatusCode) {
	var swig_r RocksdbStatusCode
	swig_r = (RocksdbStatusCode)(C._wrap_kExpired_Status_rocksdbswig_576e316b0df25a62())
	return swig_r
}

var StatusKExpired RocksdbStatusCode = _swig_getStatus_kExpired_Status()
func _swig_getStatus_kTryAgain_Status() (_swig_ret RocksdbStatusCode) {
	var swig_r RocksdbStatusCode
	swig_r = (RocksdbStatusCode)(C._wrap_kTryAgain_Status_rocksdbswig_576e316b0df25a62())
	return swig_r
}

var StatusKTryAgain RocksdbStatusCode = _swig_getStatus_kTryAgain_Status()
func (arg1 SwigcptrStatus) Code() (_swig_ret RocksdbStatusCode) {
	var swig_r RocksdbStatusCode
	_swig_i_0 := arg1
	swig_r = (RocksdbStatusCode)(C._wrap_Status_code_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

type RocksdbStatusSubCode int
func _swig_getStatus_kNone_Status() (_swig_ret RocksdbStatusSubCode) {
	var swig_r RocksdbStatusSubCode
	swig_r = (RocksdbStatusSubCode)(C._wrap_kNone_Status_rocksdbswig_576e316b0df25a62())
	return swig_r
}

var StatusKNone RocksdbStatusSubCode = _swig_getStatus_kNone_Status()
func _swig_getStatus_kMutexTimeout_Status() (_swig_ret RocksdbStatusSubCode) {
	var swig_r RocksdbStatusSubCode
	swig_r = (RocksdbStatusSubCode)(C._wrap_kMutexTimeout_Status_rocksdbswig_576e316b0df25a62())
	return swig_r
}

var StatusKMutexTimeout RocksdbStatusSubCode = _swig_getStatus_kMutexTimeout_Status()
func _swig_getStatus_kLockTimeout_Status() (_swig_ret RocksdbStatusSubCode) {
	var swig_r RocksdbStatusSubCode
	swig_r = (RocksdbStatusSubCode)(C._wrap_kLockTimeout_Status_rocksdbswig_576e316b0df25a62())
	return swig_r
}

var StatusKLockTimeout RocksdbStatusSubCode = _swig_getStatus_kLockTimeout_Status()
func _swig_getStatus_kLockLimit_Status() (_swig_ret RocksdbStatusSubCode) {
	var swig_r RocksdbStatusSubCode
	swig_r = (RocksdbStatusSubCode)(C._wrap_kLockLimit_Status_rocksdbswig_576e316b0df25a62())
	return swig_r
}

var StatusKLockLimit RocksdbStatusSubCode = _swig_getStatus_kLockLimit_Status()
func _swig_getStatus_kMaxSubCode_Status() (_swig_ret RocksdbStatusSubCode) {
	var swig_r RocksdbStatusSubCode
	swig_r = (RocksdbStatusSubCode)(C._wrap_kMaxSubCode_Status_rocksdbswig_576e316b0df25a62())
	return swig_r
}

var StatusKMaxSubCode RocksdbStatusSubCode = _swig_getStatus_kMaxSubCode_Status()
func (arg1 SwigcptrStatus) Subcode() (_swig_ret RocksdbStatusSubCode) {
	var swig_r RocksdbStatusSubCode
	_swig_i_0 := arg1
	swig_r = (RocksdbStatusSubCode)(C._wrap_Status_subcode_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func StatusOK() (_swig_ret Status) {
	var swig_r Status
	swig_r = (Status)(SwigcptrStatus(C._wrap_Status_OK_rocksdbswig_576e316b0df25a62()))
	return swig_r
}

func StatusNotFound__SWIG_0(arg1 Slice, arg2 Slice) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (Status)(SwigcptrStatus(C._wrap_Status_NotFound__SWIG_0_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func StatusNotFound__SWIG_1(arg1 Slice) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (Status)(SwigcptrStatus(C._wrap_Status_NotFound__SWIG_1_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func StatusNotFound__SWIG_2(arg1 RocksdbStatusSubCode) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	swig_r = (Status)(SwigcptrStatus(C._wrap_Status_NotFound__SWIG_2_rocksdbswig_576e316b0df25a62(C.swig_intgo(_swig_i_0))))
	return swig_r
}

func StatusNotFound__SWIG_3() (_swig_ret Status) {
	var swig_r Status
	swig_r = (Status)(SwigcptrStatus(C._wrap_Status_NotFound__SWIG_3_rocksdbswig_576e316b0df25a62()))
	return swig_r
}

func StatusNotFound(a ...interface{}) Status {
	argc := len(a)
	if argc == 0 {
		return StatusNotFound__SWIG_3()
	}
	if argc == 1 {
		if _, ok := a[0].(RocksdbStatusSubCode); !ok {
			goto check_2
		}
		return StatusNotFound__SWIG_2(a[0].(RocksdbStatusSubCode))
	}
check_2:
	if argc == 1 {
		return StatusNotFound__SWIG_1(a[0].(Slice))
	}
	if argc == 2 {
		return StatusNotFound__SWIG_0(a[0].(Slice), a[1].(Slice))
	}
	panic("No match for overloaded function call")
}

func StatusCorruption__SWIG_0(arg1 Slice, arg2 Slice) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (Status)(SwigcptrStatus(C._wrap_Status_Corruption__SWIG_0_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func StatusCorruption__SWIG_1(arg1 Slice) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (Status)(SwigcptrStatus(C._wrap_Status_Corruption__SWIG_1_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func StatusCorruption__SWIG_2(arg1 RocksdbStatusSubCode) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	swig_r = (Status)(SwigcptrStatus(C._wrap_Status_Corruption__SWIG_2_rocksdbswig_576e316b0df25a62(C.swig_intgo(_swig_i_0))))
	return swig_r
}

func StatusCorruption__SWIG_3() (_swig_ret Status) {
	var swig_r Status
	swig_r = (Status)(SwigcptrStatus(C._wrap_Status_Corruption__SWIG_3_rocksdbswig_576e316b0df25a62()))
	return swig_r
}

func StatusCorruption(a ...interface{}) Status {
	argc := len(a)
	if argc == 0 {
		return StatusCorruption__SWIG_3()
	}
	if argc == 1 {
		if _, ok := a[0].(RocksdbStatusSubCode); !ok {
			goto check_2
		}
		return StatusCorruption__SWIG_2(a[0].(RocksdbStatusSubCode))
	}
check_2:
	if argc == 1 {
		return StatusCorruption__SWIG_1(a[0].(Slice))
	}
	if argc == 2 {
		return StatusCorruption__SWIG_0(a[0].(Slice), a[1].(Slice))
	}
	panic("No match for overloaded function call")
}

func StatusNotSupported__SWIG_0(arg1 Slice, arg2 Slice) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (Status)(SwigcptrStatus(C._wrap_Status_NotSupported__SWIG_0_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func StatusNotSupported__SWIG_1(arg1 Slice) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (Status)(SwigcptrStatus(C._wrap_Status_NotSupported__SWIG_1_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func StatusNotSupported__SWIG_2(arg1 RocksdbStatusSubCode) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	swig_r = (Status)(SwigcptrStatus(C._wrap_Status_NotSupported__SWIG_2_rocksdbswig_576e316b0df25a62(C.swig_intgo(_swig_i_0))))
	return swig_r
}

func StatusNotSupported__SWIG_3() (_swig_ret Status) {
	var swig_r Status
	swig_r = (Status)(SwigcptrStatus(C._wrap_Status_NotSupported__SWIG_3_rocksdbswig_576e316b0df25a62()))
	return swig_r
}

func StatusNotSupported(a ...interface{}) Status {
	argc := len(a)
	if argc == 0 {
		return StatusNotSupported__SWIG_3()
	}
	if argc == 1 {
		if _, ok := a[0].(RocksdbStatusSubCode); !ok {
			goto check_2
		}
		return StatusNotSupported__SWIG_2(a[0].(RocksdbStatusSubCode))
	}
check_2:
	if argc == 1 {
		return StatusNotSupported__SWIG_1(a[0].(Slice))
	}
	if argc == 2 {
		return StatusNotSupported__SWIG_0(a[0].(Slice), a[1].(Slice))
	}
	panic("No match for overloaded function call")
}

func StatusInvalidArgument__SWIG_0(arg1 Slice, arg2 Slice) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (Status)(SwigcptrStatus(C._wrap_Status_InvalidArgument__SWIG_0_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func StatusInvalidArgument__SWIG_1(arg1 Slice) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (Status)(SwigcptrStatus(C._wrap_Status_InvalidArgument__SWIG_1_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func StatusInvalidArgument__SWIG_2(arg1 RocksdbStatusSubCode) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	swig_r = (Status)(SwigcptrStatus(C._wrap_Status_InvalidArgument__SWIG_2_rocksdbswig_576e316b0df25a62(C.swig_intgo(_swig_i_0))))
	return swig_r
}

func StatusInvalidArgument__SWIG_3() (_swig_ret Status) {
	var swig_r Status
	swig_r = (Status)(SwigcptrStatus(C._wrap_Status_InvalidArgument__SWIG_3_rocksdbswig_576e316b0df25a62()))
	return swig_r
}

func StatusInvalidArgument(a ...interface{}) Status {
	argc := len(a)
	if argc == 0 {
		return StatusInvalidArgument__SWIG_3()
	}
	if argc == 1 {
		if _, ok := a[0].(RocksdbStatusSubCode); !ok {
			goto check_2
		}
		return StatusInvalidArgument__SWIG_2(a[0].(RocksdbStatusSubCode))
	}
check_2:
	if argc == 1 {
		return StatusInvalidArgument__SWIG_1(a[0].(Slice))
	}
	if argc == 2 {
		return StatusInvalidArgument__SWIG_0(a[0].(Slice), a[1].(Slice))
	}
	panic("No match for overloaded function call")
}

func StatusIOError__SWIG_0(arg1 Slice, arg2 Slice) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (Status)(SwigcptrStatus(C._wrap_Status_IOError__SWIG_0_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func StatusIOError__SWIG_1(arg1 Slice) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (Status)(SwigcptrStatus(C._wrap_Status_IOError__SWIG_1_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func StatusIOError__SWIG_2(arg1 RocksdbStatusSubCode) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	swig_r = (Status)(SwigcptrStatus(C._wrap_Status_IOError__SWIG_2_rocksdbswig_576e316b0df25a62(C.swig_intgo(_swig_i_0))))
	return swig_r
}

func StatusIOError__SWIG_3() (_swig_ret Status) {
	var swig_r Status
	swig_r = (Status)(SwigcptrStatus(C._wrap_Status_IOError__SWIG_3_rocksdbswig_576e316b0df25a62()))
	return swig_r
}

func StatusIOError(a ...interface{}) Status {
	argc := len(a)
	if argc == 0 {
		return StatusIOError__SWIG_3()
	}
	if argc == 1 {
		if _, ok := a[0].(RocksdbStatusSubCode); !ok {
			goto check_2
		}
		return StatusIOError__SWIG_2(a[0].(RocksdbStatusSubCode))
	}
check_2:
	if argc == 1 {
		return StatusIOError__SWIG_1(a[0].(Slice))
	}
	if argc == 2 {
		return StatusIOError__SWIG_0(a[0].(Slice), a[1].(Slice))
	}
	panic("No match for overloaded function call")
}

func StatusMergeInProgress__SWIG_0(arg1 Slice, arg2 Slice) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (Status)(SwigcptrStatus(C._wrap_Status_MergeInProgress__SWIG_0_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func StatusMergeInProgress__SWIG_1(arg1 Slice) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (Status)(SwigcptrStatus(C._wrap_Status_MergeInProgress__SWIG_1_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func StatusMergeInProgress__SWIG_2(arg1 RocksdbStatusSubCode) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	swig_r = (Status)(SwigcptrStatus(C._wrap_Status_MergeInProgress__SWIG_2_rocksdbswig_576e316b0df25a62(C.swig_intgo(_swig_i_0))))
	return swig_r
}

func StatusMergeInProgress__SWIG_3() (_swig_ret Status) {
	var swig_r Status
	swig_r = (Status)(SwigcptrStatus(C._wrap_Status_MergeInProgress__SWIG_3_rocksdbswig_576e316b0df25a62()))
	return swig_r
}

func StatusMergeInProgress(a ...interface{}) Status {
	argc := len(a)
	if argc == 0 {
		return StatusMergeInProgress__SWIG_3()
	}
	if argc == 1 {
		if _, ok := a[0].(RocksdbStatusSubCode); !ok {
			goto check_2
		}
		return StatusMergeInProgress__SWIG_2(a[0].(RocksdbStatusSubCode))
	}
check_2:
	if argc == 1 {
		return StatusMergeInProgress__SWIG_1(a[0].(Slice))
	}
	if argc == 2 {
		return StatusMergeInProgress__SWIG_0(a[0].(Slice), a[1].(Slice))
	}
	panic("No match for overloaded function call")
}

func StatusIncomplete__SWIG_0(arg1 Slice, arg2 Slice) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (Status)(SwigcptrStatus(C._wrap_Status_Incomplete__SWIG_0_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func StatusIncomplete__SWIG_1(arg1 Slice) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (Status)(SwigcptrStatus(C._wrap_Status_Incomplete__SWIG_1_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func StatusIncomplete__SWIG_2(arg1 RocksdbStatusSubCode) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	swig_r = (Status)(SwigcptrStatus(C._wrap_Status_Incomplete__SWIG_2_rocksdbswig_576e316b0df25a62(C.swig_intgo(_swig_i_0))))
	return swig_r
}

func StatusIncomplete__SWIG_3() (_swig_ret Status) {
	var swig_r Status
	swig_r = (Status)(SwigcptrStatus(C._wrap_Status_Incomplete__SWIG_3_rocksdbswig_576e316b0df25a62()))
	return swig_r
}

func StatusIncomplete(a ...interface{}) Status {
	argc := len(a)
	if argc == 0 {
		return StatusIncomplete__SWIG_3()
	}
	if argc == 1 {
		if _, ok := a[0].(RocksdbStatusSubCode); !ok {
			goto check_2
		}
		return StatusIncomplete__SWIG_2(a[0].(RocksdbStatusSubCode))
	}
check_2:
	if argc == 1 {
		return StatusIncomplete__SWIG_1(a[0].(Slice))
	}
	if argc == 2 {
		return StatusIncomplete__SWIG_0(a[0].(Slice), a[1].(Slice))
	}
	panic("No match for overloaded function call")
}

func StatusShutdownInProgress__SWIG_0(arg1 RocksdbStatusSubCode) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	swig_r = (Status)(SwigcptrStatus(C._wrap_Status_ShutdownInProgress__SWIG_0_rocksdbswig_576e316b0df25a62(C.swig_intgo(_swig_i_0))))
	return swig_r
}

func StatusShutdownInProgress__SWIG_1() (_swig_ret Status) {
	var swig_r Status
	swig_r = (Status)(SwigcptrStatus(C._wrap_Status_ShutdownInProgress__SWIG_1_rocksdbswig_576e316b0df25a62()))
	return swig_r
}

func StatusShutdownInProgress__SWIG_2(arg1 Slice, arg2 Slice) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (Status)(SwigcptrStatus(C._wrap_Status_ShutdownInProgress__SWIG_2_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func StatusShutdownInProgress__SWIG_3(arg1 Slice) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (Status)(SwigcptrStatus(C._wrap_Status_ShutdownInProgress__SWIG_3_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func StatusShutdownInProgress(a ...interface{}) Status {
	argc := len(a)
	if argc == 0 {
		return StatusShutdownInProgress__SWIG_1()
	}
	if argc == 1 {
		if _, ok := a[0].(RocksdbStatusSubCode); !ok {
			goto check_2
		}
		return StatusShutdownInProgress__SWIG_0(a[0].(RocksdbStatusSubCode))
	}
check_2:
	if argc == 1 {
		return StatusShutdownInProgress__SWIG_3(a[0].(Slice))
	}
	if argc == 2 {
		return StatusShutdownInProgress__SWIG_2(a[0].(Slice), a[1].(Slice))
	}
	panic("No match for overloaded function call")
}

func StatusAborted__SWIG_0(arg1 RocksdbStatusSubCode) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	swig_r = (Status)(SwigcptrStatus(C._wrap_Status_Aborted__SWIG_0_rocksdbswig_576e316b0df25a62(C.swig_intgo(_swig_i_0))))
	return swig_r
}

func StatusAborted__SWIG_1() (_swig_ret Status) {
	var swig_r Status
	swig_r = (Status)(SwigcptrStatus(C._wrap_Status_Aborted__SWIG_1_rocksdbswig_576e316b0df25a62()))
	return swig_r
}

func StatusAborted__SWIG_2(arg1 Slice, arg2 Slice) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (Status)(SwigcptrStatus(C._wrap_Status_Aborted__SWIG_2_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func StatusAborted__SWIG_3(arg1 Slice) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (Status)(SwigcptrStatus(C._wrap_Status_Aborted__SWIG_3_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func StatusAborted(a ...interface{}) Status {
	argc := len(a)
	if argc == 0 {
		return StatusAborted__SWIG_1()
	}
	if argc == 1 {
		if _, ok := a[0].(RocksdbStatusSubCode); !ok {
			goto check_2
		}
		return StatusAborted__SWIG_0(a[0].(RocksdbStatusSubCode))
	}
check_2:
	if argc == 1 {
		return StatusAborted__SWIG_3(a[0].(Slice))
	}
	if argc == 2 {
		return StatusAborted__SWIG_2(a[0].(Slice), a[1].(Slice))
	}
	panic("No match for overloaded function call")
}

func StatusBusy__SWIG_0(arg1 RocksdbStatusSubCode) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	swig_r = (Status)(SwigcptrStatus(C._wrap_Status_Busy__SWIG_0_rocksdbswig_576e316b0df25a62(C.swig_intgo(_swig_i_0))))
	return swig_r
}

func StatusBusy__SWIG_1() (_swig_ret Status) {
	var swig_r Status
	swig_r = (Status)(SwigcptrStatus(C._wrap_Status_Busy__SWIG_1_rocksdbswig_576e316b0df25a62()))
	return swig_r
}

func StatusBusy__SWIG_2(arg1 Slice, arg2 Slice) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (Status)(SwigcptrStatus(C._wrap_Status_Busy__SWIG_2_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func StatusBusy__SWIG_3(arg1 Slice) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (Status)(SwigcptrStatus(C._wrap_Status_Busy__SWIG_3_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func StatusBusy(a ...interface{}) Status {
	argc := len(a)
	if argc == 0 {
		return StatusBusy__SWIG_1()
	}
	if argc == 1 {
		if _, ok := a[0].(RocksdbStatusSubCode); !ok {
			goto check_2
		}
		return StatusBusy__SWIG_0(a[0].(RocksdbStatusSubCode))
	}
check_2:
	if argc == 1 {
		return StatusBusy__SWIG_3(a[0].(Slice))
	}
	if argc == 2 {
		return StatusBusy__SWIG_2(a[0].(Slice), a[1].(Slice))
	}
	panic("No match for overloaded function call")
}

func StatusTimedOut__SWIG_0(arg1 RocksdbStatusSubCode) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	swig_r = (Status)(SwigcptrStatus(C._wrap_Status_TimedOut__SWIG_0_rocksdbswig_576e316b0df25a62(C.swig_intgo(_swig_i_0))))
	return swig_r
}

func StatusTimedOut__SWIG_1() (_swig_ret Status) {
	var swig_r Status
	swig_r = (Status)(SwigcptrStatus(C._wrap_Status_TimedOut__SWIG_1_rocksdbswig_576e316b0df25a62()))
	return swig_r
}

func StatusTimedOut__SWIG_2(arg1 Slice, arg2 Slice) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (Status)(SwigcptrStatus(C._wrap_Status_TimedOut__SWIG_2_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func StatusTimedOut__SWIG_3(arg1 Slice) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (Status)(SwigcptrStatus(C._wrap_Status_TimedOut__SWIG_3_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func StatusTimedOut(a ...interface{}) Status {
	argc := len(a)
	if argc == 0 {
		return StatusTimedOut__SWIG_1()
	}
	if argc == 1 {
		if _, ok := a[0].(RocksdbStatusSubCode); !ok {
			goto check_2
		}
		return StatusTimedOut__SWIG_0(a[0].(RocksdbStatusSubCode))
	}
check_2:
	if argc == 1 {
		return StatusTimedOut__SWIG_3(a[0].(Slice))
	}
	if argc == 2 {
		return StatusTimedOut__SWIG_2(a[0].(Slice), a[1].(Slice))
	}
	panic("No match for overloaded function call")
}

func StatusExpired__SWIG_0(arg1 RocksdbStatusSubCode) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	swig_r = (Status)(SwigcptrStatus(C._wrap_Status_Expired__SWIG_0_rocksdbswig_576e316b0df25a62(C.swig_intgo(_swig_i_0))))
	return swig_r
}

func StatusExpired__SWIG_1() (_swig_ret Status) {
	var swig_r Status
	swig_r = (Status)(SwigcptrStatus(C._wrap_Status_Expired__SWIG_1_rocksdbswig_576e316b0df25a62()))
	return swig_r
}

func StatusExpired__SWIG_2(arg1 Slice, arg2 Slice) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (Status)(SwigcptrStatus(C._wrap_Status_Expired__SWIG_2_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func StatusExpired__SWIG_3(arg1 Slice) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (Status)(SwigcptrStatus(C._wrap_Status_Expired__SWIG_3_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func StatusExpired(a ...interface{}) Status {
	argc := len(a)
	if argc == 0 {
		return StatusExpired__SWIG_1()
	}
	if argc == 1 {
		if _, ok := a[0].(RocksdbStatusSubCode); !ok {
			goto check_2
		}
		return StatusExpired__SWIG_0(a[0].(RocksdbStatusSubCode))
	}
check_2:
	if argc == 1 {
		return StatusExpired__SWIG_3(a[0].(Slice))
	}
	if argc == 2 {
		return StatusExpired__SWIG_2(a[0].(Slice), a[1].(Slice))
	}
	panic("No match for overloaded function call")
}

func StatusTryAgain__SWIG_0(arg1 RocksdbStatusSubCode) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	swig_r = (Status)(SwigcptrStatus(C._wrap_Status_TryAgain__SWIG_0_rocksdbswig_576e316b0df25a62(C.swig_intgo(_swig_i_0))))
	return swig_r
}

func StatusTryAgain__SWIG_1() (_swig_ret Status) {
	var swig_r Status
	swig_r = (Status)(SwigcptrStatus(C._wrap_Status_TryAgain__SWIG_1_rocksdbswig_576e316b0df25a62()))
	return swig_r
}

func StatusTryAgain__SWIG_2(arg1 Slice, arg2 Slice) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (Status)(SwigcptrStatus(C._wrap_Status_TryAgain__SWIG_2_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func StatusTryAgain__SWIG_3(arg1 Slice) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (Status)(SwigcptrStatus(C._wrap_Status_TryAgain__SWIG_3_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func StatusTryAgain(a ...interface{}) Status {
	argc := len(a)
	if argc == 0 {
		return StatusTryAgain__SWIG_1()
	}
	if argc == 1 {
		if _, ok := a[0].(RocksdbStatusSubCode); !ok {
			goto check_2
		}
		return StatusTryAgain__SWIG_0(a[0].(RocksdbStatusSubCode))
	}
check_2:
	if argc == 1 {
		return StatusTryAgain__SWIG_3(a[0].(Slice))
	}
	if argc == 2 {
		return StatusTryAgain__SWIG_2(a[0].(Slice), a[1].(Slice))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrStatus) Ok() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_Status_ok_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrStatus) IsNotFound() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_Status_IsNotFound_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrStatus) IsCorruption() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_Status_IsCorruption_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrStatus) IsNotSupported() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_Status_IsNotSupported_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrStatus) IsInvalidArgument() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_Status_IsInvalidArgument_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrStatus) IsIOError() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_Status_IsIOError_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrStatus) IsMergeInProgress() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_Status_IsMergeInProgress_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrStatus) IsIncomplete() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_Status_IsIncomplete_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrStatus) IsShutdownInProgress() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_Status_IsShutdownInProgress_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrStatus) IsTimedOut() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_Status_IsTimedOut_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrStatus) IsAborted() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_Status_IsAborted_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrStatus) IsBusy() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_Status_IsBusy_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrStatus) IsExpired() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_Status_IsExpired_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrStatus) IsTryAgain() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_Status_IsTryAgain_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrStatus) ToString() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Status_ToString_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

type Status interface {
	Swigcptr() uintptr
	SwigIsStatus()
	Code() (_swig_ret RocksdbStatusCode)
	Subcode() (_swig_ret RocksdbStatusSubCode)
	Ok() (_swig_ret bool)
	IsNotFound() (_swig_ret bool)
	IsCorruption() (_swig_ret bool)
	IsNotSupported() (_swig_ret bool)
	IsInvalidArgument() (_swig_ret bool)
	IsIOError() (_swig_ret bool)
	IsMergeInProgress() (_swig_ret bool)
	IsIncomplete() (_swig_ret bool)
	IsShutdownInProgress() (_swig_ret bool)
	IsTimedOut() (_swig_ret bool)
	IsAborted() (_swig_ret bool)
	IsBusy() (_swig_ret bool)
	IsExpired() (_swig_ret bool)
	IsTryAgain() (_swig_ret bool)
	ToString() (_swig_ret string)
}

type RocksdbInfoLogLevel int
type RocksdbCompressionType int
func _swig_getkNoCompression() (_swig_ret RocksdbCompressionType) {
	var swig_r RocksdbCompressionType
	swig_r = (RocksdbCompressionType)(C._wrap_kNoCompression_rocksdbswig_576e316b0df25a62())
	return swig_r
}

var KNoCompression RocksdbCompressionType = _swig_getkNoCompression()
func _swig_getkSnappyCompression() (_swig_ret RocksdbCompressionType) {
	var swig_r RocksdbCompressionType
	swig_r = (RocksdbCompressionType)(C._wrap_kSnappyCompression_rocksdbswig_576e316b0df25a62())
	return swig_r
}

var KSnappyCompression RocksdbCompressionType = _swig_getkSnappyCompression()
func _swig_getkZlibCompression() (_swig_ret RocksdbCompressionType) {
	var swig_r RocksdbCompressionType
	swig_r = (RocksdbCompressionType)(C._wrap_kZlibCompression_rocksdbswig_576e316b0df25a62())
	return swig_r
}

var KZlibCompression RocksdbCompressionType = _swig_getkZlibCompression()
func _swig_getkBZip2Compression() (_swig_ret RocksdbCompressionType) {
	var swig_r RocksdbCompressionType
	swig_r = (RocksdbCompressionType)(C._wrap_kBZip2Compression_rocksdbswig_576e316b0df25a62())
	return swig_r
}

var KBZip2Compression RocksdbCompressionType = _swig_getkBZip2Compression()
func _swig_getkLZ4Compression() (_swig_ret RocksdbCompressionType) {
	var swig_r RocksdbCompressionType
	swig_r = (RocksdbCompressionType)(C._wrap_kLZ4Compression_rocksdbswig_576e316b0df25a62())
	return swig_r
}

var KLZ4Compression RocksdbCompressionType = _swig_getkLZ4Compression()
func _swig_getkLZ4HCCompression() (_swig_ret RocksdbCompressionType) {
	var swig_r RocksdbCompressionType
	swig_r = (RocksdbCompressionType)(C._wrap_kLZ4HCCompression_rocksdbswig_576e316b0df25a62())
	return swig_r
}

var KLZ4HCCompression RocksdbCompressionType = _swig_getkLZ4HCCompression()
func _swig_getkZSTDNotFinalCompression() (_swig_ret RocksdbCompressionType) {
	var swig_r RocksdbCompressionType
	swig_r = (RocksdbCompressionType)(C._wrap_kZSTDNotFinalCompression_rocksdbswig_576e316b0df25a62())
	return swig_r
}

var KZSTDNotFinalCompression RocksdbCompressionType = _swig_getkZSTDNotFinalCompression()
type RocksdbCompactionStyle int
func _swig_getkCompactionStyleLevel() (_swig_ret RocksdbCompactionStyle) {
	var swig_r RocksdbCompactionStyle
	swig_r = (RocksdbCompactionStyle)(C._wrap_kCompactionStyleLevel_rocksdbswig_576e316b0df25a62())
	return swig_r
}

var KCompactionStyleLevel RocksdbCompactionStyle = _swig_getkCompactionStyleLevel()
func _swig_getkCompactionStyleUniversal() (_swig_ret RocksdbCompactionStyle) {
	var swig_r RocksdbCompactionStyle
	swig_r = (RocksdbCompactionStyle)(C._wrap_kCompactionStyleUniversal_rocksdbswig_576e316b0df25a62())
	return swig_r
}

var KCompactionStyleUniversal RocksdbCompactionStyle = _swig_getkCompactionStyleUniversal()
func _swig_getkCompactionStyleFIFO() (_swig_ret RocksdbCompactionStyle) {
	var swig_r RocksdbCompactionStyle
	swig_r = (RocksdbCompactionStyle)(C._wrap_kCompactionStyleFIFO_rocksdbswig_576e316b0df25a62())
	return swig_r
}

var KCompactionStyleFIFO RocksdbCompactionStyle = _swig_getkCompactionStyleFIFO()
func _swig_getkCompactionStyleNone() (_swig_ret RocksdbCompactionStyle) {
	var swig_r RocksdbCompactionStyle
	swig_r = (RocksdbCompactionStyle)(C._wrap_kCompactionStyleNone_rocksdbswig_576e316b0df25a62())
	return swig_r
}

var KCompactionStyleNone RocksdbCompactionStyle = _swig_getkCompactionStyleNone()
type RocksdbCompactionPri int
func _swig_getkByCompensatedSize() (_swig_ret RocksdbCompactionPri) {
	var swig_r RocksdbCompactionPri
	swig_r = (RocksdbCompactionPri)(C._wrap_kByCompensatedSize_rocksdbswig_576e316b0df25a62())
	return swig_r
}

var KByCompensatedSize RocksdbCompactionPri = _swig_getkByCompensatedSize()
func _swig_getkOldestLargestSeqFirst() (_swig_ret RocksdbCompactionPri) {
	var swig_r RocksdbCompactionPri
	swig_r = (RocksdbCompactionPri)(C._wrap_kOldestLargestSeqFirst_rocksdbswig_576e316b0df25a62())
	return swig_r
}

var KOldestLargestSeqFirst RocksdbCompactionPri = _swig_getkOldestLargestSeqFirst()
func _swig_getkOldestSmallestSeqFirst() (_swig_ret RocksdbCompactionPri) {
	var swig_r RocksdbCompactionPri
	swig_r = (RocksdbCompactionPri)(C._wrap_kOldestSmallestSeqFirst_rocksdbswig_576e316b0df25a62())
	return swig_r
}

var KOldestSmallestSeqFirst RocksdbCompactionPri = _swig_getkOldestSmallestSeqFirst()
func _swig_getkMinOverlappingRatio() (_swig_ret RocksdbCompactionPri) {
	var swig_r RocksdbCompactionPri
	swig_r = (RocksdbCompactionPri)(C._wrap_kMinOverlappingRatio_rocksdbswig_576e316b0df25a62())
	return swig_r
}

var KMinOverlappingRatio RocksdbCompactionPri = _swig_getkMinOverlappingRatio()
type RocksdbWALRecoveryMode int
func _swig_getWALRecoveryMode_kTolerateCorruptedTailRecords() (_swig_ret RocksdbWALRecoveryMode) {
	var swig_r RocksdbWALRecoveryMode
	swig_r = (RocksdbWALRecoveryMode)(C._wrap_WALRecoveryMode_kTolerateCorruptedTailRecords_rocksdbswig_576e316b0df25a62())
	return swig_r
}

var WALRecoveryMode_kTolerateCorruptedTailRecords RocksdbWALRecoveryMode = _swig_getWALRecoveryMode_kTolerateCorruptedTailRecords()
func _swig_getWALRecoveryMode_kAbsoluteConsistency() (_swig_ret RocksdbWALRecoveryMode) {
	var swig_r RocksdbWALRecoveryMode
	swig_r = (RocksdbWALRecoveryMode)(C._wrap_WALRecoveryMode_kAbsoluteConsistency_rocksdbswig_576e316b0df25a62())
	return swig_r
}

var WALRecoveryMode_kAbsoluteConsistency RocksdbWALRecoveryMode = _swig_getWALRecoveryMode_kAbsoluteConsistency()
func _swig_getWALRecoveryMode_kPointInTimeRecovery() (_swig_ret RocksdbWALRecoveryMode) {
	var swig_r RocksdbWALRecoveryMode
	swig_r = (RocksdbWALRecoveryMode)(C._wrap_WALRecoveryMode_kPointInTimeRecovery_rocksdbswig_576e316b0df25a62())
	return swig_r
}

var WALRecoveryMode_kPointInTimeRecovery RocksdbWALRecoveryMode = _swig_getWALRecoveryMode_kPointInTimeRecovery()
func _swig_getWALRecoveryMode_kSkipAnyCorruptedRecords() (_swig_ret RocksdbWALRecoveryMode) {
	var swig_r RocksdbWALRecoveryMode
	swig_r = (RocksdbWALRecoveryMode)(C._wrap_WALRecoveryMode_kSkipAnyCorruptedRecords_rocksdbswig_576e316b0df25a62())
	return swig_r
}

var WALRecoveryMode_kSkipAnyCorruptedRecords RocksdbWALRecoveryMode = _swig_getWALRecoveryMode_kSkipAnyCorruptedRecords()
type SwigcptrCompactionOptionsFIFO uintptr

func (p SwigcptrCompactionOptionsFIFO) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrCompactionOptionsFIFO) SwigIsCompactionOptionsFIFO() {
}

func (arg1 SwigcptrCompactionOptionsFIFO) SetMax_table_files_size(arg2 Uint64_t) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_CompactionOptionsFIFO_max_table_files_size_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrCompactionOptionsFIFO) GetMax_table_files_size() (_swig_ret Uint64_t) {
	var swig_r Uint64_t
	_swig_i_0 := arg1
	swig_r = (Uint64_t)(SwigcptrUint64_t(C._wrap_CompactionOptionsFIFO_max_table_files_size_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewCompactionOptionsFIFO() (_swig_ret CompactionOptionsFIFO) {
	var swig_r CompactionOptionsFIFO
	swig_r = (CompactionOptionsFIFO)(SwigcptrCompactionOptionsFIFO(C._wrap_new_CompactionOptionsFIFO_rocksdbswig_576e316b0df25a62()))
	return swig_r
}

func DeleteCompactionOptionsFIFO(arg1 CompactionOptionsFIFO) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_CompactionOptionsFIFO_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))
}

type CompactionOptionsFIFO interface {
	Swigcptr() uintptr
	SwigIsCompactionOptionsFIFO()
	SetMax_table_files_size(arg2 Uint64_t)
	GetMax_table_files_size() (_swig_ret Uint64_t)
}

type SwigcptrCompressionOptions uintptr

func (p SwigcptrCompressionOptions) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrCompressionOptions) SwigIsCompressionOptions() {
}

func (arg1 SwigcptrCompressionOptions) SetWindow_bits(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_CompressionOptions_window_bits_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrCompressionOptions) GetWindow_bits() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_CompressionOptions_window_bits_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrCompressionOptions) SetLevel(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_CompressionOptions_level_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrCompressionOptions) GetLevel() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_CompressionOptions_level_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrCompressionOptions) SetStrategy(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_CompressionOptions_strategy_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrCompressionOptions) GetStrategy() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_CompressionOptions_strategy_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func NewCompressionOptions__SWIG_0() (_swig_ret CompressionOptions) {
	var swig_r CompressionOptions
	swig_r = (CompressionOptions)(SwigcptrCompressionOptions(C._wrap_new_CompressionOptions__SWIG_0_rocksdbswig_576e316b0df25a62()))
	return swig_r
}

func NewCompressionOptions__SWIG_1(arg1 int, arg2 int, arg3 int) (_swig_ret CompressionOptions) {
	var swig_r CompressionOptions
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (CompressionOptions)(SwigcptrCompressionOptions(C._wrap_new_CompressionOptions__SWIG_1_rocksdbswig_576e316b0df25a62(C.swig_intgo(_swig_i_0), C.swig_intgo(_swig_i_1), C.swig_intgo(_swig_i_2))))
	return swig_r
}

func NewCompressionOptions(a ...interface{}) CompressionOptions {
	argc := len(a)
	if argc == 0 {
		return NewCompressionOptions__SWIG_0()
	}
	if argc == 3 {
		return NewCompressionOptions__SWIG_1(a[0].(int), a[1].(int), a[2].(int))
	}
	panic("No match for overloaded function call")
}

func DeleteCompressionOptions(arg1 CompressionOptions) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_CompressionOptions_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))
}

type CompressionOptions interface {
	Swigcptr() uintptr
	SwigIsCompressionOptions()
	SetWindow_bits(arg2 int)
	GetWindow_bits() (_swig_ret int)
	SetLevel(arg2 int)
	GetLevel() (_swig_ret int)
	SetStrategy(arg2 int)
	GetStrategy() (_swig_ret int)
}

type RocksdbUpdateStatus int
func _swig_getUPDATE_FAILED() (_swig_ret RocksdbUpdateStatus) {
	var swig_r RocksdbUpdateStatus
	swig_r = (RocksdbUpdateStatus)(C._wrap_UPDATE_FAILED_rocksdbswig_576e316b0df25a62())
	return swig_r
}

var UPDATE_FAILED RocksdbUpdateStatus = _swig_getUPDATE_FAILED()
func _swig_getUPDATED_INPLACE() (_swig_ret RocksdbUpdateStatus) {
	var swig_r RocksdbUpdateStatus
	swig_r = (RocksdbUpdateStatus)(C._wrap_UPDATED_INPLACE_rocksdbswig_576e316b0df25a62())
	return swig_r
}

var UPDATED_INPLACE RocksdbUpdateStatus = _swig_getUPDATED_INPLACE()
func _swig_getUPDATED() (_swig_ret RocksdbUpdateStatus) {
	var swig_r RocksdbUpdateStatus
	swig_r = (RocksdbUpdateStatus)(C._wrap_UPDATED_rocksdbswig_576e316b0df25a62())
	return swig_r
}

var UPDATED RocksdbUpdateStatus = _swig_getUPDATED()
type SwigcptrDbPath uintptr

func (p SwigcptrDbPath) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrDbPath) SwigIsDbPath() {
}

func (arg1 SwigcptrDbPath) SetPath(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_DbPath_path_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), *(*C.swig_type_17)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrDbPath) GetPath() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_DbPath_path_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrDbPath) SetTarget_size(arg2 Uint64_t) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_DbPath_target_size_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrDbPath) GetTarget_size() (_swig_ret Uint64_t) {
	var swig_r Uint64_t
	_swig_i_0 := arg1
	swig_r = (Uint64_t)(SwigcptrUint64_t(C._wrap_DbPath_target_size_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewDbPath__SWIG_0() (_swig_ret DbPath) {
	var swig_r DbPath
	swig_r = (DbPath)(SwigcptrDbPath(C._wrap_new_DbPath__SWIG_0_rocksdbswig_576e316b0df25a62()))
	return swig_r
}

func NewDbPath__SWIG_1(arg1 string, arg2 Uint64_t) (_swig_ret DbPath) {
	var swig_r DbPath
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (DbPath)(SwigcptrDbPath(C._wrap_new_DbPath__SWIG_1_rocksdbswig_576e316b0df25a62(*(*C.swig_type_19)(unsafe.Pointer(&_swig_i_0)), C.uintptr_t(_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func NewDbPath(a ...interface{}) DbPath {
	argc := len(a)
	if argc == 0 {
		return NewDbPath__SWIG_0()
	}
	if argc == 2 {
		return NewDbPath__SWIG_1(a[0].(string), a[1].(Uint64_t))
	}
	panic("No match for overloaded function call")
}

func DeleteDbPath(arg1 DbPath) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_DbPath_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))
}

type DbPath interface {
	Swigcptr() uintptr
	SwigIsDbPath()
	SetPath(arg2 string)
	GetPath() (_swig_ret string)
	SetTarget_size(arg2 Uint64_t)
	GetTarget_size() (_swig_ret Uint64_t)
}

type SwigcptrColumnFamilyOptions uintptr

func (p SwigcptrColumnFamilyOptions) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrColumnFamilyOptions) SwigIsColumnFamilyOptions() {
}

func (arg1 SwigcptrColumnFamilyOptions) OptimizeForPointLookup(arg2 Uint64_t) (_swig_ret ColumnFamilyOptions) {
	var swig_r ColumnFamilyOptions
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (ColumnFamilyOptions)(SwigcptrColumnFamilyOptions(C._wrap_ColumnFamilyOptions_OptimizeForPointLookup_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrColumnFamilyOptions) OptimizeLevelStyleCompaction__SWIG_0(arg2 Uint64_t) (_swig_ret ColumnFamilyOptions) {
	var swig_r ColumnFamilyOptions
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (ColumnFamilyOptions)(SwigcptrColumnFamilyOptions(C._wrap_ColumnFamilyOptions_OptimizeLevelStyleCompaction__SWIG_0_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrColumnFamilyOptions) OptimizeLevelStyleCompaction__SWIG_1() (_swig_ret ColumnFamilyOptions) {
	var swig_r ColumnFamilyOptions
	_swig_i_0 := arg1
	swig_r = (ColumnFamilyOptions)(SwigcptrColumnFamilyOptions(C._wrap_ColumnFamilyOptions_OptimizeLevelStyleCompaction__SWIG_1_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (p SwigcptrColumnFamilyOptions) OptimizeLevelStyleCompaction(a ...interface{}) ColumnFamilyOptions {
	argc := len(a)
	if argc == 0 {
		return p.OptimizeLevelStyleCompaction__SWIG_1()
	}
	if argc == 1 {
		return p.OptimizeLevelStyleCompaction__SWIG_0(a[0].(Uint64_t))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrColumnFamilyOptions) OptimizeUniversalStyleCompaction__SWIG_0(arg2 Uint64_t) (_swig_ret ColumnFamilyOptions) {
	var swig_r ColumnFamilyOptions
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (ColumnFamilyOptions)(SwigcptrColumnFamilyOptions(C._wrap_ColumnFamilyOptions_OptimizeUniversalStyleCompaction__SWIG_0_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrColumnFamilyOptions) OptimizeUniversalStyleCompaction__SWIG_1() (_swig_ret ColumnFamilyOptions) {
	var swig_r ColumnFamilyOptions
	_swig_i_0 := arg1
	swig_r = (ColumnFamilyOptions)(SwigcptrColumnFamilyOptions(C._wrap_ColumnFamilyOptions_OptimizeUniversalStyleCompaction__SWIG_1_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (p SwigcptrColumnFamilyOptions) OptimizeUniversalStyleCompaction(a ...interface{}) ColumnFamilyOptions {
	argc := len(a)
	if argc == 0 {
		return p.OptimizeUniversalStyleCompaction__SWIG_1()
	}
	if argc == 1 {
		return p.OptimizeUniversalStyleCompaction__SWIG_0(a[0].(Uint64_t))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrColumnFamilyOptions) SetComparator(arg2 Rocksdb_Comparator) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_ColumnFamilyOptions_comparator_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrColumnFamilyOptions) GetComparator() (_swig_ret Rocksdb_Comparator) {
	var swig_r Rocksdb_Comparator
	_swig_i_0 := arg1
	swig_r = (Rocksdb_Comparator)(SwigcptrRocksdb_Comparator(C._wrap_ColumnFamilyOptions_comparator_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrColumnFamilyOptions) SetMerge_operator(arg2 Std_shared_ptr_Sl_rocksdb_MergeOperator_Sg_) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_ColumnFamilyOptions_merge_operator_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrColumnFamilyOptions) GetMerge_operator() (_swig_ret Std_shared_ptr_Sl_rocksdb_MergeOperator_Sg_) {
	var swig_r Std_shared_ptr_Sl_rocksdb_MergeOperator_Sg_
	_swig_i_0 := arg1
	swig_r = (Std_shared_ptr_Sl_rocksdb_MergeOperator_Sg_)(SwigcptrStd_shared_ptr_Sl_rocksdb_MergeOperator_Sg_(C._wrap_ColumnFamilyOptions_merge_operator_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrColumnFamilyOptions) SetCompaction_filter(arg2 Rocksdb_CompactionFilter) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_ColumnFamilyOptions_compaction_filter_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrColumnFamilyOptions) GetCompaction_filter() (_swig_ret Rocksdb_CompactionFilter) {
	var swig_r Rocksdb_CompactionFilter
	_swig_i_0 := arg1
	swig_r = (Rocksdb_CompactionFilter)(SwigcptrRocksdb_CompactionFilter(C._wrap_ColumnFamilyOptions_compaction_filter_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrColumnFamilyOptions) SetCompaction_filter_factory(arg2 Std_shared_ptr_Sl_rocksdb_CompactionFilterFactory_Sg_) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_ColumnFamilyOptions_compaction_filter_factory_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrColumnFamilyOptions) GetCompaction_filter_factory() (_swig_ret Std_shared_ptr_Sl_rocksdb_CompactionFilterFactory_Sg_) {
	var swig_r Std_shared_ptr_Sl_rocksdb_CompactionFilterFactory_Sg_
	_swig_i_0 := arg1
	swig_r = (Std_shared_ptr_Sl_rocksdb_CompactionFilterFactory_Sg_)(SwigcptrStd_shared_ptr_Sl_rocksdb_CompactionFilterFactory_Sg_(C._wrap_ColumnFamilyOptions_compaction_filter_factory_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrColumnFamilyOptions) SetWrite_buffer_size(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ColumnFamilyOptions_write_buffer_size_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.swig_type_20(_swig_i_1))
}

func (arg1 SwigcptrColumnFamilyOptions) GetWrite_buffer_size() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_ColumnFamilyOptions_write_buffer_size_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrColumnFamilyOptions) SetMax_write_buffer_number(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ColumnFamilyOptions_max_write_buffer_number_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrColumnFamilyOptions) GetMax_write_buffer_number() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_ColumnFamilyOptions_max_write_buffer_number_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrColumnFamilyOptions) SetMin_write_buffer_number_to_merge(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ColumnFamilyOptions_min_write_buffer_number_to_merge_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrColumnFamilyOptions) GetMin_write_buffer_number_to_merge() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_ColumnFamilyOptions_min_write_buffer_number_to_merge_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrColumnFamilyOptions) SetMax_write_buffer_number_to_maintain(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ColumnFamilyOptions_max_write_buffer_number_to_maintain_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrColumnFamilyOptions) GetMax_write_buffer_number_to_maintain() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_ColumnFamilyOptions_max_write_buffer_number_to_maintain_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrColumnFamilyOptions) SetCompression(arg2 RocksdbCompressionType) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ColumnFamilyOptions_compression_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrColumnFamilyOptions) GetCompression() (_swig_ret RocksdbCompressionType) {
	var swig_r RocksdbCompressionType
	_swig_i_0 := arg1
	swig_r = (RocksdbCompressionType)(C._wrap_ColumnFamilyOptions_compression_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrColumnFamilyOptions) SetCompression_per_level(arg2 Std_vector_Sl_enum_SS_rocksdb_CompressionType_Sg_) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_ColumnFamilyOptions_compression_per_level_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrColumnFamilyOptions) GetCompression_per_level() (_swig_ret Std_vector_Sl_enum_SS_rocksdb_CompressionType_Sg_) {
	var swig_r Std_vector_Sl_enum_SS_rocksdb_CompressionType_Sg_
	_swig_i_0 := arg1
	swig_r = (Std_vector_Sl_enum_SS_rocksdb_CompressionType_Sg_)(SwigcptrStd_vector_Sl_enum_SS_rocksdb_CompressionType_Sg_(C._wrap_ColumnFamilyOptions_compression_per_level_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrColumnFamilyOptions) SetCompression_opts(arg2 CompressionOptions) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_ColumnFamilyOptions_compression_opts_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrColumnFamilyOptions) GetCompression_opts() (_swig_ret CompressionOptions) {
	var swig_r CompressionOptions
	_swig_i_0 := arg1
	swig_r = (CompressionOptions)(SwigcptrCompressionOptions(C._wrap_ColumnFamilyOptions_compression_opts_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrColumnFamilyOptions) SetPrefix_extractor(arg2 Std_shared_ptr_Sl_rocksdb_SliceTransform_SS_const_Sg_) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_ColumnFamilyOptions_prefix_extractor_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrColumnFamilyOptions) GetPrefix_extractor() (_swig_ret Std_shared_ptr_Sl_rocksdb_SliceTransform_SS_const_Sg_) {
	var swig_r Std_shared_ptr_Sl_rocksdb_SliceTransform_SS_const_Sg_
	_swig_i_0 := arg1
	swig_r = (Std_shared_ptr_Sl_rocksdb_SliceTransform_SS_const_Sg_)(SwigcptrStd_shared_ptr_Sl_rocksdb_SliceTransform_SS_const_Sg_(C._wrap_ColumnFamilyOptions_prefix_extractor_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrColumnFamilyOptions) SetNum_levels(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ColumnFamilyOptions_num_levels_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrColumnFamilyOptions) GetNum_levels() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_ColumnFamilyOptions_num_levels_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrColumnFamilyOptions) SetLevel0_file_num_compaction_trigger(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ColumnFamilyOptions_level0_file_num_compaction_trigger_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrColumnFamilyOptions) GetLevel0_file_num_compaction_trigger() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_ColumnFamilyOptions_level0_file_num_compaction_trigger_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrColumnFamilyOptions) SetLevel0_slowdown_writes_trigger(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ColumnFamilyOptions_level0_slowdown_writes_trigger_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrColumnFamilyOptions) GetLevel0_slowdown_writes_trigger() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_ColumnFamilyOptions_level0_slowdown_writes_trigger_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrColumnFamilyOptions) SetLevel0_stop_writes_trigger(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ColumnFamilyOptions_level0_stop_writes_trigger_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrColumnFamilyOptions) GetLevel0_stop_writes_trigger() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_ColumnFamilyOptions_level0_stop_writes_trigger_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrColumnFamilyOptions) SetMax_mem_compaction_level(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ColumnFamilyOptions_max_mem_compaction_level_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrColumnFamilyOptions) GetMax_mem_compaction_level() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_ColumnFamilyOptions_max_mem_compaction_level_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrColumnFamilyOptions) SetTarget_file_size_base(arg2 Uint64_t) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_ColumnFamilyOptions_target_file_size_base_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrColumnFamilyOptions) GetTarget_file_size_base() (_swig_ret Uint64_t) {
	var swig_r Uint64_t
	_swig_i_0 := arg1
	swig_r = (Uint64_t)(SwigcptrUint64_t(C._wrap_ColumnFamilyOptions_target_file_size_base_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrColumnFamilyOptions) SetTarget_file_size_multiplier(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ColumnFamilyOptions_target_file_size_multiplier_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrColumnFamilyOptions) GetTarget_file_size_multiplier() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_ColumnFamilyOptions_target_file_size_multiplier_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrColumnFamilyOptions) SetMax_bytes_for_level_base(arg2 Uint64_t) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_ColumnFamilyOptions_max_bytes_for_level_base_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrColumnFamilyOptions) GetMax_bytes_for_level_base() (_swig_ret Uint64_t) {
	var swig_r Uint64_t
	_swig_i_0 := arg1
	swig_r = (Uint64_t)(SwigcptrUint64_t(C._wrap_ColumnFamilyOptions_max_bytes_for_level_base_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrColumnFamilyOptions) SetLevel_compaction_dynamic_level_bytes(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ColumnFamilyOptions_level_compaction_dynamic_level_bytes_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrColumnFamilyOptions) GetLevel_compaction_dynamic_level_bytes() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_ColumnFamilyOptions_level_compaction_dynamic_level_bytes_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrColumnFamilyOptions) SetMax_bytes_for_level_multiplier(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ColumnFamilyOptions_max_bytes_for_level_multiplier_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrColumnFamilyOptions) GetMax_bytes_for_level_multiplier() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_ColumnFamilyOptions_max_bytes_for_level_multiplier_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrColumnFamilyOptions) SetMax_bytes_for_level_multiplier_additional(arg2 Std_vector_Sl_int_Sg_) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_ColumnFamilyOptions_max_bytes_for_level_multiplier_additional_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrColumnFamilyOptions) GetMax_bytes_for_level_multiplier_additional() (_swig_ret Std_vector_Sl_int_Sg_) {
	var swig_r Std_vector_Sl_int_Sg_
	_swig_i_0 := arg1
	swig_r = (Std_vector_Sl_int_Sg_)(SwigcptrStd_vector_Sl_int_Sg_(C._wrap_ColumnFamilyOptions_max_bytes_for_level_multiplier_additional_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrColumnFamilyOptions) SetExpanded_compaction_factor(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ColumnFamilyOptions_expanded_compaction_factor_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrColumnFamilyOptions) GetExpanded_compaction_factor() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_ColumnFamilyOptions_expanded_compaction_factor_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrColumnFamilyOptions) SetSource_compaction_factor(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ColumnFamilyOptions_source_compaction_factor_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrColumnFamilyOptions) GetSource_compaction_factor() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_ColumnFamilyOptions_source_compaction_factor_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrColumnFamilyOptions) SetMax_grandparent_overlap_factor(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ColumnFamilyOptions_max_grandparent_overlap_factor_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrColumnFamilyOptions) GetMax_grandparent_overlap_factor() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_ColumnFamilyOptions_max_grandparent_overlap_factor_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrColumnFamilyOptions) SetSoft_rate_limit(arg2 float64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ColumnFamilyOptions_soft_rate_limit_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.double(_swig_i_1))
}

func (arg1 SwigcptrColumnFamilyOptions) GetSoft_rate_limit() (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_ColumnFamilyOptions_soft_rate_limit_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrColumnFamilyOptions) SetHard_rate_limit(arg2 float64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ColumnFamilyOptions_hard_rate_limit_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.double(_swig_i_1))
}

func (arg1 SwigcptrColumnFamilyOptions) GetHard_rate_limit() (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_ColumnFamilyOptions_hard_rate_limit_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrColumnFamilyOptions) SetSoft_pending_compaction_bytes_limit(arg2 Uint64_t) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_ColumnFamilyOptions_soft_pending_compaction_bytes_limit_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrColumnFamilyOptions) GetSoft_pending_compaction_bytes_limit() (_swig_ret Uint64_t) {
	var swig_r Uint64_t
	_swig_i_0 := arg1
	swig_r = (Uint64_t)(SwigcptrUint64_t(C._wrap_ColumnFamilyOptions_soft_pending_compaction_bytes_limit_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrColumnFamilyOptions) SetHard_pending_compaction_bytes_limit(arg2 Uint64_t) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_ColumnFamilyOptions_hard_pending_compaction_bytes_limit_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrColumnFamilyOptions) GetHard_pending_compaction_bytes_limit() (_swig_ret Uint64_t) {
	var swig_r Uint64_t
	_swig_i_0 := arg1
	swig_r = (Uint64_t)(SwigcptrUint64_t(C._wrap_ColumnFamilyOptions_hard_pending_compaction_bytes_limit_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrColumnFamilyOptions) SetRate_limit_delay_max_milliseconds(arg2 uint) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ColumnFamilyOptions_rate_limit_delay_max_milliseconds_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrColumnFamilyOptions) GetRate_limit_delay_max_milliseconds() (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1
	swig_r = (uint)(C._wrap_ColumnFamilyOptions_rate_limit_delay_max_milliseconds_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrColumnFamilyOptions) SetArena_block_size(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ColumnFamilyOptions_arena_block_size_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.swig_type_22(_swig_i_1))
}

func (arg1 SwigcptrColumnFamilyOptions) GetArena_block_size() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_ColumnFamilyOptions_arena_block_size_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrColumnFamilyOptions) SetDisable_auto_compactions(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ColumnFamilyOptions_disable_auto_compactions_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrColumnFamilyOptions) GetDisable_auto_compactions() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_ColumnFamilyOptions_disable_auto_compactions_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrColumnFamilyOptions) SetPurge_redundant_kvs_while_flush(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ColumnFamilyOptions_purge_redundant_kvs_while_flush_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrColumnFamilyOptions) GetPurge_redundant_kvs_while_flush() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_ColumnFamilyOptions_purge_redundant_kvs_while_flush_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrColumnFamilyOptions) SetCompaction_style(arg2 RocksdbCompactionStyle) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ColumnFamilyOptions_compaction_style_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrColumnFamilyOptions) GetCompaction_style() (_swig_ret RocksdbCompactionStyle) {
	var swig_r RocksdbCompactionStyle
	_swig_i_0 := arg1
	swig_r = (RocksdbCompactionStyle)(C._wrap_ColumnFamilyOptions_compaction_style_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrColumnFamilyOptions) SetCompaction_pri(arg2 RocksdbCompactionPri) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ColumnFamilyOptions_compaction_pri_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrColumnFamilyOptions) GetCompaction_pri() (_swig_ret RocksdbCompactionPri) {
	var swig_r RocksdbCompactionPri
	_swig_i_0 := arg1
	swig_r = (RocksdbCompactionPri)(C._wrap_ColumnFamilyOptions_compaction_pri_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrColumnFamilyOptions) SetVerify_checksums_in_compaction(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ColumnFamilyOptions_verify_checksums_in_compaction_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrColumnFamilyOptions) GetVerify_checksums_in_compaction() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_ColumnFamilyOptions_verify_checksums_in_compaction_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrColumnFamilyOptions) SetCompaction_options_universal(arg2 CompactionOptionsUniversal) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_ColumnFamilyOptions_compaction_options_universal_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrColumnFamilyOptions) GetCompaction_options_universal() (_swig_ret CompactionOptionsUniversal) {
	var swig_r CompactionOptionsUniversal
	_swig_i_0 := arg1
	swig_r = (CompactionOptionsUniversal)(SwigcptrCompactionOptionsUniversal(C._wrap_ColumnFamilyOptions_compaction_options_universal_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrColumnFamilyOptions) SetCompaction_options_fifo(arg2 CompactionOptionsFIFO) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_ColumnFamilyOptions_compaction_options_fifo_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrColumnFamilyOptions) GetCompaction_options_fifo() (_swig_ret CompactionOptionsFIFO) {
	var swig_r CompactionOptionsFIFO
	_swig_i_0 := arg1
	swig_r = (CompactionOptionsFIFO)(SwigcptrCompactionOptionsFIFO(C._wrap_ColumnFamilyOptions_compaction_options_fifo_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrColumnFamilyOptions) SetFilter_deletes(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ColumnFamilyOptions_filter_deletes_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrColumnFamilyOptions) GetFilter_deletes() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_ColumnFamilyOptions_filter_deletes_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrColumnFamilyOptions) SetMax_sequential_skip_in_iterations(arg2 Uint64_t) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_ColumnFamilyOptions_max_sequential_skip_in_iterations_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrColumnFamilyOptions) GetMax_sequential_skip_in_iterations() (_swig_ret Uint64_t) {
	var swig_r Uint64_t
	_swig_i_0 := arg1
	swig_r = (Uint64_t)(SwigcptrUint64_t(C._wrap_ColumnFamilyOptions_max_sequential_skip_in_iterations_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrColumnFamilyOptions) SetMemtable_factory(arg2 Std_shared_ptr_Sl_rocksdb_MemTableRepFactory_Sg_) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_ColumnFamilyOptions_memtable_factory_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrColumnFamilyOptions) GetMemtable_factory() (_swig_ret Std_shared_ptr_Sl_rocksdb_MemTableRepFactory_Sg_) {
	var swig_r Std_shared_ptr_Sl_rocksdb_MemTableRepFactory_Sg_
	_swig_i_0 := arg1
	swig_r = (Std_shared_ptr_Sl_rocksdb_MemTableRepFactory_Sg_)(SwigcptrStd_shared_ptr_Sl_rocksdb_MemTableRepFactory_Sg_(C._wrap_ColumnFamilyOptions_memtable_factory_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrColumnFamilyOptions) SetTable_factory(arg2 Std_shared_ptr_Sl_rocksdb_TableFactory_Sg_) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_ColumnFamilyOptions_table_factory_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrColumnFamilyOptions) GetTable_factory() (_swig_ret Std_shared_ptr_Sl_rocksdb_TableFactory_Sg_) {
	var swig_r Std_shared_ptr_Sl_rocksdb_TableFactory_Sg_
	_swig_i_0 := arg1
	swig_r = (Std_shared_ptr_Sl_rocksdb_TableFactory_Sg_)(SwigcptrStd_shared_ptr_Sl_rocksdb_TableFactory_Sg_(C._wrap_ColumnFamilyOptions_table_factory_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrColumnFamilyOptions) SetTable_properties_collector_factories(arg2 Std_vector_Sl_std_shared_ptr_Sl_rocksdb_TablePropertiesCollectorFactory_Sg__Sg_) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_ColumnFamilyOptions_table_properties_collector_factories_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrColumnFamilyOptions) GetTable_properties_collector_factories() (_swig_ret Std_vector_Sl_std_shared_ptr_Sl_rocksdb_TablePropertiesCollectorFactory_Sg__Sg_) {
	var swig_r Std_vector_Sl_std_shared_ptr_Sl_rocksdb_TablePropertiesCollectorFactory_Sg__Sg_
	_swig_i_0 := arg1
	swig_r = (Std_vector_Sl_std_shared_ptr_Sl_rocksdb_TablePropertiesCollectorFactory_Sg__Sg_)(SwigcptrStd_vector_Sl_std_shared_ptr_Sl_rocksdb_TablePropertiesCollectorFactory_Sg__Sg_(C._wrap_ColumnFamilyOptions_table_properties_collector_factories_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrColumnFamilyOptions) SetInplace_update_support(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ColumnFamilyOptions_inplace_update_support_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrColumnFamilyOptions) GetInplace_update_support() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_ColumnFamilyOptions_inplace_update_support_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrColumnFamilyOptions) SetInplace_update_num_locks(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ColumnFamilyOptions_inplace_update_num_locks_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.swig_type_24(_swig_i_1))
}

func (arg1 SwigcptrColumnFamilyOptions) GetInplace_update_num_locks() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_ColumnFamilyOptions_inplace_update_num_locks_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrColumnFamilyOptions) SetInplace_callback(arg2 _swig_fnptr) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ColumnFamilyOptions_inplace_callback_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.swig_type_26(_swig_i_1))
}

func (arg1 SwigcptrColumnFamilyOptions) GetInplace_callback() (_swig_ret _swig_fnptr) {
	var swig_r _swig_fnptr
	_swig_i_0 := arg1
	swig_r = (_swig_fnptr)(C._wrap_ColumnFamilyOptions_inplace_callback_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrColumnFamilyOptions) SetMemtable_prefix_bloom_bits(arg2 Uint32_t) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_ColumnFamilyOptions_memtable_prefix_bloom_bits_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrColumnFamilyOptions) GetMemtable_prefix_bloom_bits() (_swig_ret Uint32_t) {
	var swig_r Uint32_t
	_swig_i_0 := arg1
	swig_r = (Uint32_t)(SwigcptrUint32_t(C._wrap_ColumnFamilyOptions_memtable_prefix_bloom_bits_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrColumnFamilyOptions) SetMemtable_prefix_bloom_probes(arg2 Uint32_t) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_ColumnFamilyOptions_memtable_prefix_bloom_probes_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrColumnFamilyOptions) GetMemtable_prefix_bloom_probes() (_swig_ret Uint32_t) {
	var swig_r Uint32_t
	_swig_i_0 := arg1
	swig_r = (Uint32_t)(SwigcptrUint32_t(C._wrap_ColumnFamilyOptions_memtable_prefix_bloom_probes_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrColumnFamilyOptions) SetMemtable_prefix_bloom_huge_page_tlb_size(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ColumnFamilyOptions_memtable_prefix_bloom_huge_page_tlb_size_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.swig_type_28(_swig_i_1))
}

func (arg1 SwigcptrColumnFamilyOptions) GetMemtable_prefix_bloom_huge_page_tlb_size() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_ColumnFamilyOptions_memtable_prefix_bloom_huge_page_tlb_size_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrColumnFamilyOptions) SetBloom_locality(arg2 Uint32_t) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_ColumnFamilyOptions_bloom_locality_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrColumnFamilyOptions) GetBloom_locality() (_swig_ret Uint32_t) {
	var swig_r Uint32_t
	_swig_i_0 := arg1
	swig_r = (Uint32_t)(SwigcptrUint32_t(C._wrap_ColumnFamilyOptions_bloom_locality_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrColumnFamilyOptions) SetMax_successive_merges(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ColumnFamilyOptions_max_successive_merges_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.swig_type_30(_swig_i_1))
}

func (arg1 SwigcptrColumnFamilyOptions) GetMax_successive_merges() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_ColumnFamilyOptions_max_successive_merges_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrColumnFamilyOptions) SetMin_partial_merge_operands(arg2 Uint32_t) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_ColumnFamilyOptions_min_partial_merge_operands_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrColumnFamilyOptions) GetMin_partial_merge_operands() (_swig_ret Uint32_t) {
	var swig_r Uint32_t
	_swig_i_0 := arg1
	swig_r = (Uint32_t)(SwigcptrUint32_t(C._wrap_ColumnFamilyOptions_min_partial_merge_operands_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrColumnFamilyOptions) SetOptimize_filters_for_hits(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ColumnFamilyOptions_optimize_filters_for_hits_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrColumnFamilyOptions) GetOptimize_filters_for_hits() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_ColumnFamilyOptions_optimize_filters_for_hits_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrColumnFamilyOptions) SetParanoid_file_checks(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ColumnFamilyOptions_paranoid_file_checks_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrColumnFamilyOptions) GetParanoid_file_checks() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_ColumnFamilyOptions_paranoid_file_checks_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrColumnFamilyOptions) SetCompaction_measure_io_stats(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ColumnFamilyOptions_compaction_measure_io_stats_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrColumnFamilyOptions) GetCompaction_measure_io_stats() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_ColumnFamilyOptions_compaction_measure_io_stats_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func NewColumnFamilyOptions__SWIG_0() (_swig_ret ColumnFamilyOptions) {
	var swig_r ColumnFamilyOptions
	swig_r = (ColumnFamilyOptions)(SwigcptrColumnFamilyOptions(C._wrap_new_ColumnFamilyOptions__SWIG_0_rocksdbswig_576e316b0df25a62()))
	return swig_r
}

func NewColumnFamilyOptions__SWIG_1(arg1 Options) (_swig_ret ColumnFamilyOptions) {
	var swig_r ColumnFamilyOptions
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (ColumnFamilyOptions)(SwigcptrColumnFamilyOptions(C._wrap_new_ColumnFamilyOptions__SWIG_1_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewColumnFamilyOptions(a ...interface{}) ColumnFamilyOptions {
	argc := len(a)
	if argc == 0 {
		return NewColumnFamilyOptions__SWIG_0()
	}
	if argc == 1 {
		return NewColumnFamilyOptions__SWIG_1(a[0].(Options))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrColumnFamilyOptions) Dump(arg2 Rocksdb_Logger) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_ColumnFamilyOptions_Dump_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func DeleteColumnFamilyOptions(arg1 ColumnFamilyOptions) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_ColumnFamilyOptions_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))
}

type ColumnFamilyOptions interface {
	Swigcptr() uintptr
	SwigIsColumnFamilyOptions()
	OptimizeForPointLookup(arg2 Uint64_t) (_swig_ret ColumnFamilyOptions)
	OptimizeLevelStyleCompaction(a ...interface{}) ColumnFamilyOptions
	OptimizeUniversalStyleCompaction(a ...interface{}) ColumnFamilyOptions
	SetComparator(arg2 Rocksdb_Comparator)
	GetComparator() (_swig_ret Rocksdb_Comparator)
	SetMerge_operator(arg2 Std_shared_ptr_Sl_rocksdb_MergeOperator_Sg_)
	GetMerge_operator() (_swig_ret Std_shared_ptr_Sl_rocksdb_MergeOperator_Sg_)
	SetCompaction_filter(arg2 Rocksdb_CompactionFilter)
	GetCompaction_filter() (_swig_ret Rocksdb_CompactionFilter)
	SetCompaction_filter_factory(arg2 Std_shared_ptr_Sl_rocksdb_CompactionFilterFactory_Sg_)
	GetCompaction_filter_factory() (_swig_ret Std_shared_ptr_Sl_rocksdb_CompactionFilterFactory_Sg_)
	SetWrite_buffer_size(arg2 int64)
	GetWrite_buffer_size() (_swig_ret int64)
	SetMax_write_buffer_number(arg2 int)
	GetMax_write_buffer_number() (_swig_ret int)
	SetMin_write_buffer_number_to_merge(arg2 int)
	GetMin_write_buffer_number_to_merge() (_swig_ret int)
	SetMax_write_buffer_number_to_maintain(arg2 int)
	GetMax_write_buffer_number_to_maintain() (_swig_ret int)
	SetCompression(arg2 RocksdbCompressionType)
	GetCompression() (_swig_ret RocksdbCompressionType)
	SetCompression_per_level(arg2 Std_vector_Sl_enum_SS_rocksdb_CompressionType_Sg_)
	GetCompression_per_level() (_swig_ret Std_vector_Sl_enum_SS_rocksdb_CompressionType_Sg_)
	SetCompression_opts(arg2 CompressionOptions)
	GetCompression_opts() (_swig_ret CompressionOptions)
	SetPrefix_extractor(arg2 Std_shared_ptr_Sl_rocksdb_SliceTransform_SS_const_Sg_)
	GetPrefix_extractor() (_swig_ret Std_shared_ptr_Sl_rocksdb_SliceTransform_SS_const_Sg_)
	SetNum_levels(arg2 int)
	GetNum_levels() (_swig_ret int)
	SetLevel0_file_num_compaction_trigger(arg2 int)
	GetLevel0_file_num_compaction_trigger() (_swig_ret int)
	SetLevel0_slowdown_writes_trigger(arg2 int)
	GetLevel0_slowdown_writes_trigger() (_swig_ret int)
	SetLevel0_stop_writes_trigger(arg2 int)
	GetLevel0_stop_writes_trigger() (_swig_ret int)
	SetMax_mem_compaction_level(arg2 int)
	GetMax_mem_compaction_level() (_swig_ret int)
	SetTarget_file_size_base(arg2 Uint64_t)
	GetTarget_file_size_base() (_swig_ret Uint64_t)
	SetTarget_file_size_multiplier(arg2 int)
	GetTarget_file_size_multiplier() (_swig_ret int)
	SetMax_bytes_for_level_base(arg2 Uint64_t)
	GetMax_bytes_for_level_base() (_swig_ret Uint64_t)
	SetLevel_compaction_dynamic_level_bytes(arg2 bool)
	GetLevel_compaction_dynamic_level_bytes() (_swig_ret bool)
	SetMax_bytes_for_level_multiplier(arg2 int)
	GetMax_bytes_for_level_multiplier() (_swig_ret int)
	SetMax_bytes_for_level_multiplier_additional(arg2 Std_vector_Sl_int_Sg_)
	GetMax_bytes_for_level_multiplier_additional() (_swig_ret Std_vector_Sl_int_Sg_)
	SetExpanded_compaction_factor(arg2 int)
	GetExpanded_compaction_factor() (_swig_ret int)
	SetSource_compaction_factor(arg2 int)
	GetSource_compaction_factor() (_swig_ret int)
	SetMax_grandparent_overlap_factor(arg2 int)
	GetMax_grandparent_overlap_factor() (_swig_ret int)
	SetSoft_rate_limit(arg2 float64)
	GetSoft_rate_limit() (_swig_ret float64)
	SetHard_rate_limit(arg2 float64)
	GetHard_rate_limit() (_swig_ret float64)
	SetSoft_pending_compaction_bytes_limit(arg2 Uint64_t)
	GetSoft_pending_compaction_bytes_limit() (_swig_ret Uint64_t)
	SetHard_pending_compaction_bytes_limit(arg2 Uint64_t)
	GetHard_pending_compaction_bytes_limit() (_swig_ret Uint64_t)
	SetRate_limit_delay_max_milliseconds(arg2 uint)
	GetRate_limit_delay_max_milliseconds() (_swig_ret uint)
	SetArena_block_size(arg2 int64)
	GetArena_block_size() (_swig_ret int64)
	SetDisable_auto_compactions(arg2 bool)
	GetDisable_auto_compactions() (_swig_ret bool)
	SetPurge_redundant_kvs_while_flush(arg2 bool)
	GetPurge_redundant_kvs_while_flush() (_swig_ret bool)
	SetCompaction_style(arg2 RocksdbCompactionStyle)
	GetCompaction_style() (_swig_ret RocksdbCompactionStyle)
	SetCompaction_pri(arg2 RocksdbCompactionPri)
	GetCompaction_pri() (_swig_ret RocksdbCompactionPri)
	SetVerify_checksums_in_compaction(arg2 bool)
	GetVerify_checksums_in_compaction() (_swig_ret bool)
	SetCompaction_options_universal(arg2 CompactionOptionsUniversal)
	GetCompaction_options_universal() (_swig_ret CompactionOptionsUniversal)
	SetCompaction_options_fifo(arg2 CompactionOptionsFIFO)
	GetCompaction_options_fifo() (_swig_ret CompactionOptionsFIFO)
	SetFilter_deletes(arg2 bool)
	GetFilter_deletes() (_swig_ret bool)
	SetMax_sequential_skip_in_iterations(arg2 Uint64_t)
	GetMax_sequential_skip_in_iterations() (_swig_ret Uint64_t)
	SetMemtable_factory(arg2 Std_shared_ptr_Sl_rocksdb_MemTableRepFactory_Sg_)
	GetMemtable_factory() (_swig_ret Std_shared_ptr_Sl_rocksdb_MemTableRepFactory_Sg_)
	SetTable_factory(arg2 Std_shared_ptr_Sl_rocksdb_TableFactory_Sg_)
	GetTable_factory() (_swig_ret Std_shared_ptr_Sl_rocksdb_TableFactory_Sg_)
	SetTable_properties_collector_factories(arg2 Std_vector_Sl_std_shared_ptr_Sl_rocksdb_TablePropertiesCollectorFactory_Sg__Sg_)
	GetTable_properties_collector_factories() (_swig_ret Std_vector_Sl_std_shared_ptr_Sl_rocksdb_TablePropertiesCollectorFactory_Sg__Sg_)
	SetInplace_update_support(arg2 bool)
	GetInplace_update_support() (_swig_ret bool)
	SetInplace_update_num_locks(arg2 int64)
	GetInplace_update_num_locks() (_swig_ret int64)
	SetInplace_callback(arg2 _swig_fnptr)
	GetInplace_callback() (_swig_ret _swig_fnptr)
	SetMemtable_prefix_bloom_bits(arg2 Uint32_t)
	GetMemtable_prefix_bloom_bits() (_swig_ret Uint32_t)
	SetMemtable_prefix_bloom_probes(arg2 Uint32_t)
	GetMemtable_prefix_bloom_probes() (_swig_ret Uint32_t)
	SetMemtable_prefix_bloom_huge_page_tlb_size(arg2 int64)
	GetMemtable_prefix_bloom_huge_page_tlb_size() (_swig_ret int64)
	SetBloom_locality(arg2 Uint32_t)
	GetBloom_locality() (_swig_ret Uint32_t)
	SetMax_successive_merges(arg2 int64)
	GetMax_successive_merges() (_swig_ret int64)
	SetMin_partial_merge_operands(arg2 Uint32_t)
	GetMin_partial_merge_operands() (_swig_ret Uint32_t)
	SetOptimize_filters_for_hits(arg2 bool)
	GetOptimize_filters_for_hits() (_swig_ret bool)
	SetParanoid_file_checks(arg2 bool)
	GetParanoid_file_checks() (_swig_ret bool)
	SetCompaction_measure_io_stats(arg2 bool)
	GetCompaction_measure_io_stats() (_swig_ret bool)
	Dump(arg2 Rocksdb_Logger)
}

type SwigcptrDBOptions uintptr

func (p SwigcptrDBOptions) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrDBOptions) SwigIsDBOptions() {
}

func (arg1 SwigcptrDBOptions) IncreaseParallelism__SWIG_0(arg2 int) (_swig_ret DBOptions) {
	var swig_r DBOptions
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (DBOptions)(SwigcptrDBOptions(C._wrap_DBOptions_IncreaseParallelism__SWIG_0_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrDBOptions) IncreaseParallelism__SWIG_1() (_swig_ret DBOptions) {
	var swig_r DBOptions
	_swig_i_0 := arg1
	swig_r = (DBOptions)(SwigcptrDBOptions(C._wrap_DBOptions_IncreaseParallelism__SWIG_1_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (p SwigcptrDBOptions) IncreaseParallelism(a ...interface{}) DBOptions {
	argc := len(a)
	if argc == 0 {
		return p.IncreaseParallelism__SWIG_1()
	}
	if argc == 1 {
		return p.IncreaseParallelism__SWIG_0(a[0].(int))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrDBOptions) SetCreate_if_missing(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_DBOptions_create_if_missing_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrDBOptions) GetCreate_if_missing() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_DBOptions_create_if_missing_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrDBOptions) SetCreate_missing_column_families(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_DBOptions_create_missing_column_families_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrDBOptions) GetCreate_missing_column_families() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_DBOptions_create_missing_column_families_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrDBOptions) SetError_if_exists(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_DBOptions_error_if_exists_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrDBOptions) GetError_if_exists() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_DBOptions_error_if_exists_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrDBOptions) SetParanoid_checks(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_DBOptions_paranoid_checks_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrDBOptions) GetParanoid_checks() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_DBOptions_paranoid_checks_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrDBOptions) SetEnv(arg2 Rocksdb_Env) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_DBOptions_env_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrDBOptions) GetEnv() (_swig_ret Rocksdb_Env) {
	var swig_r Rocksdb_Env
	_swig_i_0 := arg1
	swig_r = (Rocksdb_Env)(SwigcptrRocksdb_Env(C._wrap_DBOptions_env_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrDBOptions) SetRate_limiter(arg2 Std_shared_ptr_Sl_rocksdb_RateLimiter_Sg_) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_DBOptions_rate_limiter_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrDBOptions) GetRate_limiter() (_swig_ret Std_shared_ptr_Sl_rocksdb_RateLimiter_Sg_) {
	var swig_r Std_shared_ptr_Sl_rocksdb_RateLimiter_Sg_
	_swig_i_0 := arg1
	swig_r = (Std_shared_ptr_Sl_rocksdb_RateLimiter_Sg_)(SwigcptrStd_shared_ptr_Sl_rocksdb_RateLimiter_Sg_(C._wrap_DBOptions_rate_limiter_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrDBOptions) SetSst_file_manager(arg2 Std_shared_ptr_Sl_rocksdb_SstFileManager_Sg_) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_DBOptions_sst_file_manager_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrDBOptions) GetSst_file_manager() (_swig_ret Std_shared_ptr_Sl_rocksdb_SstFileManager_Sg_) {
	var swig_r Std_shared_ptr_Sl_rocksdb_SstFileManager_Sg_
	_swig_i_0 := arg1
	swig_r = (Std_shared_ptr_Sl_rocksdb_SstFileManager_Sg_)(SwigcptrStd_shared_ptr_Sl_rocksdb_SstFileManager_Sg_(C._wrap_DBOptions_sst_file_manager_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrDBOptions) SetInfo_log(arg2 Std_shared_ptr_Sl_rocksdb_Logger_Sg_) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_DBOptions_info_log_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrDBOptions) GetInfo_log() (_swig_ret Std_shared_ptr_Sl_rocksdb_Logger_Sg_) {
	var swig_r Std_shared_ptr_Sl_rocksdb_Logger_Sg_
	_swig_i_0 := arg1
	swig_r = (Std_shared_ptr_Sl_rocksdb_Logger_Sg_)(SwigcptrStd_shared_ptr_Sl_rocksdb_Logger_Sg_(C._wrap_DBOptions_info_log_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrDBOptions) SetInfo_log_level(arg2 RocksdbInfoLogLevel) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_DBOptions_info_log_level_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrDBOptions) GetInfo_log_level() (_swig_ret RocksdbInfoLogLevel) {
	var swig_r RocksdbInfoLogLevel
	_swig_i_0 := arg1
	swig_r = (RocksdbInfoLogLevel)(C._wrap_DBOptions_info_log_level_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrDBOptions) SetMax_open_files(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_DBOptions_max_open_files_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrDBOptions) GetMax_open_files() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_DBOptions_max_open_files_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrDBOptions) SetMax_file_opening_threads(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_DBOptions_max_file_opening_threads_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrDBOptions) GetMax_file_opening_threads() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_DBOptions_max_file_opening_threads_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrDBOptions) SetMax_total_wal_size(arg2 Uint64_t) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_DBOptions_max_total_wal_size_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrDBOptions) GetMax_total_wal_size() (_swig_ret Uint64_t) {
	var swig_r Uint64_t
	_swig_i_0 := arg1
	swig_r = (Uint64_t)(SwigcptrUint64_t(C._wrap_DBOptions_max_total_wal_size_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrDBOptions) SetStatistics(arg2 Std_shared_ptr_Sl_rocksdb_Statistics_Sg_) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_DBOptions_statistics_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrDBOptions) GetStatistics() (_swig_ret Std_shared_ptr_Sl_rocksdb_Statistics_Sg_) {
	var swig_r Std_shared_ptr_Sl_rocksdb_Statistics_Sg_
	_swig_i_0 := arg1
	swig_r = (Std_shared_ptr_Sl_rocksdb_Statistics_Sg_)(SwigcptrStd_shared_ptr_Sl_rocksdb_Statistics_Sg_(C._wrap_DBOptions_statistics_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrDBOptions) SetDisableDataSync(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_DBOptions_disableDataSync_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrDBOptions) GetDisableDataSync() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_DBOptions_disableDataSync_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrDBOptions) SetUse_fsync(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_DBOptions_use_fsync_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrDBOptions) GetUse_fsync() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_DBOptions_use_fsync_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrDBOptions) SetDb_paths(arg2 Std_vector_Sl_rocksdb_DbPath_Sg_) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_DBOptions_db_paths_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrDBOptions) GetDb_paths() (_swig_ret Std_vector_Sl_rocksdb_DbPath_Sg_) {
	var swig_r Std_vector_Sl_rocksdb_DbPath_Sg_
	_swig_i_0 := arg1
	swig_r = (Std_vector_Sl_rocksdb_DbPath_Sg_)(SwigcptrStd_vector_Sl_rocksdb_DbPath_Sg_(C._wrap_DBOptions_db_paths_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrDBOptions) SetDb_log_dir(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_DBOptions_db_log_dir_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), *(*C.swig_type_32)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrDBOptions) GetDb_log_dir() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_DBOptions_db_log_dir_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrDBOptions) SetWal_dir(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_DBOptions_wal_dir_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), *(*C.swig_type_34)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrDBOptions) GetWal_dir() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_DBOptions_wal_dir_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrDBOptions) SetDelete_obsolete_files_period_micros(arg2 Uint64_t) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_DBOptions_delete_obsolete_files_period_micros_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrDBOptions) GetDelete_obsolete_files_period_micros() (_swig_ret Uint64_t) {
	var swig_r Uint64_t
	_swig_i_0 := arg1
	swig_r = (Uint64_t)(SwigcptrUint64_t(C._wrap_DBOptions_delete_obsolete_files_period_micros_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrDBOptions) SetBase_background_compactions(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_DBOptions_base_background_compactions_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrDBOptions) GetBase_background_compactions() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_DBOptions_base_background_compactions_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrDBOptions) SetMax_background_compactions(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_DBOptions_max_background_compactions_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrDBOptions) GetMax_background_compactions() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_DBOptions_max_background_compactions_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrDBOptions) SetMax_subcompactions(arg2 Uint32_t) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_DBOptions_max_subcompactions_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrDBOptions) GetMax_subcompactions() (_swig_ret Uint32_t) {
	var swig_r Uint32_t
	_swig_i_0 := arg1
	swig_r = (Uint32_t)(SwigcptrUint32_t(C._wrap_DBOptions_max_subcompactions_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrDBOptions) SetMax_background_flushes(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_DBOptions_max_background_flushes_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrDBOptions) GetMax_background_flushes() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_DBOptions_max_background_flushes_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrDBOptions) SetMax_log_file_size(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_DBOptions_max_log_file_size_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.swig_type_36(_swig_i_1))
}

func (arg1 SwigcptrDBOptions) GetMax_log_file_size() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_DBOptions_max_log_file_size_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrDBOptions) SetLog_file_time_to_roll(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_DBOptions_log_file_time_to_roll_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.swig_type_38(_swig_i_1))
}

func (arg1 SwigcptrDBOptions) GetLog_file_time_to_roll() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_DBOptions_log_file_time_to_roll_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrDBOptions) SetKeep_log_file_num(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_DBOptions_keep_log_file_num_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.swig_type_40(_swig_i_1))
}

func (arg1 SwigcptrDBOptions) GetKeep_log_file_num() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_DBOptions_keep_log_file_num_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrDBOptions) SetRecycle_log_file_num(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_DBOptions_recycle_log_file_num_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.swig_type_42(_swig_i_1))
}

func (arg1 SwigcptrDBOptions) GetRecycle_log_file_num() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_DBOptions_recycle_log_file_num_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrDBOptions) SetMax_manifest_file_size(arg2 Uint64_t) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_DBOptions_max_manifest_file_size_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrDBOptions) GetMax_manifest_file_size() (_swig_ret Uint64_t) {
	var swig_r Uint64_t
	_swig_i_0 := arg1
	swig_r = (Uint64_t)(SwigcptrUint64_t(C._wrap_DBOptions_max_manifest_file_size_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrDBOptions) SetTable_cache_numshardbits(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_DBOptions_table_cache_numshardbits_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrDBOptions) GetTable_cache_numshardbits() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_DBOptions_table_cache_numshardbits_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrDBOptions) SetWAL_ttl_seconds(arg2 Uint64_t) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_DBOptions_WAL_ttl_seconds_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrDBOptions) GetWAL_ttl_seconds() (_swig_ret Uint64_t) {
	var swig_r Uint64_t
	_swig_i_0 := arg1
	swig_r = (Uint64_t)(SwigcptrUint64_t(C._wrap_DBOptions_WAL_ttl_seconds_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrDBOptions) SetWAL_size_limit_MB(arg2 Uint64_t) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_DBOptions_WAL_size_limit_MB_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrDBOptions) GetWAL_size_limit_MB() (_swig_ret Uint64_t) {
	var swig_r Uint64_t
	_swig_i_0 := arg1
	swig_r = (Uint64_t)(SwigcptrUint64_t(C._wrap_DBOptions_WAL_size_limit_MB_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrDBOptions) SetManifest_preallocation_size(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_DBOptions_manifest_preallocation_size_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.swig_type_44(_swig_i_1))
}

func (arg1 SwigcptrDBOptions) GetManifest_preallocation_size() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_DBOptions_manifest_preallocation_size_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrDBOptions) SetAllow_os_buffer(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_DBOptions_allow_os_buffer_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrDBOptions) GetAllow_os_buffer() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_DBOptions_allow_os_buffer_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrDBOptions) SetAllow_mmap_reads(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_DBOptions_allow_mmap_reads_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrDBOptions) GetAllow_mmap_reads() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_DBOptions_allow_mmap_reads_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrDBOptions) SetAllow_mmap_writes(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_DBOptions_allow_mmap_writes_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrDBOptions) GetAllow_mmap_writes() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_DBOptions_allow_mmap_writes_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrDBOptions) SetAllow_fallocate(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_DBOptions_allow_fallocate_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrDBOptions) GetAllow_fallocate() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_DBOptions_allow_fallocate_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrDBOptions) SetIs_fd_close_on_exec(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_DBOptions_is_fd_close_on_exec_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrDBOptions) GetIs_fd_close_on_exec() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_DBOptions_is_fd_close_on_exec_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrDBOptions) SetSkip_log_error_on_recovery(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_DBOptions_skip_log_error_on_recovery_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrDBOptions) GetSkip_log_error_on_recovery() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_DBOptions_skip_log_error_on_recovery_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrDBOptions) SetStats_dump_period_sec(arg2 uint) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_DBOptions_stats_dump_period_sec_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrDBOptions) GetStats_dump_period_sec() (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1
	swig_r = (uint)(C._wrap_DBOptions_stats_dump_period_sec_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrDBOptions) SetAdvise_random_on_open(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_DBOptions_advise_random_on_open_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrDBOptions) GetAdvise_random_on_open() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_DBOptions_advise_random_on_open_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrDBOptions) SetDb_write_buffer_size(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_DBOptions_db_write_buffer_size_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.swig_type_46(_swig_i_1))
}

func (arg1 SwigcptrDBOptions) GetDb_write_buffer_size() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_DBOptions_db_write_buffer_size_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

type RocksdbDBOptionsAccessHint int
func _swig_getDBOptions_NONE_DBOptions() (_swig_ret RocksdbDBOptionsAccessHint) {
	var swig_r RocksdbDBOptionsAccessHint
	swig_r = (RocksdbDBOptionsAccessHint)(C._wrap_NONE_DBOptions_rocksdbswig_576e316b0df25a62())
	return swig_r
}

var DBOptionsNONE RocksdbDBOptionsAccessHint = _swig_getDBOptions_NONE_DBOptions()
func _swig_getDBOptions_NORMAL_DBOptions() (_swig_ret RocksdbDBOptionsAccessHint) {
	var swig_r RocksdbDBOptionsAccessHint
	swig_r = (RocksdbDBOptionsAccessHint)(C._wrap_NORMAL_DBOptions_rocksdbswig_576e316b0df25a62())
	return swig_r
}

var DBOptionsNORMAL RocksdbDBOptionsAccessHint = _swig_getDBOptions_NORMAL_DBOptions()
func _swig_getDBOptions_SEQUENTIAL_DBOptions() (_swig_ret RocksdbDBOptionsAccessHint) {
	var swig_r RocksdbDBOptionsAccessHint
	swig_r = (RocksdbDBOptionsAccessHint)(C._wrap_SEQUENTIAL_DBOptions_rocksdbswig_576e316b0df25a62())
	return swig_r
}

var DBOptionsSEQUENTIAL RocksdbDBOptionsAccessHint = _swig_getDBOptions_SEQUENTIAL_DBOptions()
func _swig_getDBOptions_WILLNEED_DBOptions() (_swig_ret RocksdbDBOptionsAccessHint) {
	var swig_r RocksdbDBOptionsAccessHint
	swig_r = (RocksdbDBOptionsAccessHint)(C._wrap_WILLNEED_DBOptions_rocksdbswig_576e316b0df25a62())
	return swig_r
}

var DBOptionsWILLNEED RocksdbDBOptionsAccessHint = _swig_getDBOptions_WILLNEED_DBOptions()
func (arg1 SwigcptrDBOptions) SetAccess_hint_on_compaction_start(arg2 RocksdbDBOptionsAccessHint) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_DBOptions_access_hint_on_compaction_start_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrDBOptions) GetAccess_hint_on_compaction_start() (_swig_ret RocksdbDBOptionsAccessHint) {
	var swig_r RocksdbDBOptionsAccessHint
	_swig_i_0 := arg1
	swig_r = (RocksdbDBOptionsAccessHint)(C._wrap_DBOptions_access_hint_on_compaction_start_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrDBOptions) SetNew_table_reader_for_compaction_inputs(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_DBOptions_new_table_reader_for_compaction_inputs_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrDBOptions) GetNew_table_reader_for_compaction_inputs() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_DBOptions_new_table_reader_for_compaction_inputs_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrDBOptions) SetCompaction_readahead_size(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_DBOptions_compaction_readahead_size_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.swig_type_48(_swig_i_1))
}

func (arg1 SwigcptrDBOptions) GetCompaction_readahead_size() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_DBOptions_compaction_readahead_size_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrDBOptions) SetRandom_access_max_buffer_size(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_DBOptions_random_access_max_buffer_size_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.swig_type_50(_swig_i_1))
}

func (arg1 SwigcptrDBOptions) GetRandom_access_max_buffer_size() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_DBOptions_random_access_max_buffer_size_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrDBOptions) SetWritable_file_max_buffer_size(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_DBOptions_writable_file_max_buffer_size_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.swig_type_52(_swig_i_1))
}

func (arg1 SwigcptrDBOptions) GetWritable_file_max_buffer_size() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_DBOptions_writable_file_max_buffer_size_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrDBOptions) SetUse_adaptive_mutex(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_DBOptions_use_adaptive_mutex_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrDBOptions) GetUse_adaptive_mutex() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_DBOptions_use_adaptive_mutex_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func NewDBOptions__SWIG_0() (_swig_ret DBOptions) {
	var swig_r DBOptions
	swig_r = (DBOptions)(SwigcptrDBOptions(C._wrap_new_DBOptions__SWIG_0_rocksdbswig_576e316b0df25a62()))
	return swig_r
}

func NewDBOptions__SWIG_1(arg1 Options) (_swig_ret DBOptions) {
	var swig_r DBOptions
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (DBOptions)(SwigcptrDBOptions(C._wrap_new_DBOptions__SWIG_1_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewDBOptions(a ...interface{}) DBOptions {
	argc := len(a)
	if argc == 0 {
		return NewDBOptions__SWIG_0()
	}
	if argc == 1 {
		return NewDBOptions__SWIG_1(a[0].(Options))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrDBOptions) Dump(arg2 Rocksdb_Logger) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_DBOptions_Dump_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrDBOptions) SetBytes_per_sync(arg2 Uint64_t) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_DBOptions_bytes_per_sync_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrDBOptions) GetBytes_per_sync() (_swig_ret Uint64_t) {
	var swig_r Uint64_t
	_swig_i_0 := arg1
	swig_r = (Uint64_t)(SwigcptrUint64_t(C._wrap_DBOptions_bytes_per_sync_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrDBOptions) SetWal_bytes_per_sync(arg2 Uint64_t) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_DBOptions_wal_bytes_per_sync_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrDBOptions) GetWal_bytes_per_sync() (_swig_ret Uint64_t) {
	var swig_r Uint64_t
	_swig_i_0 := arg1
	swig_r = (Uint64_t)(SwigcptrUint64_t(C._wrap_DBOptions_wal_bytes_per_sync_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrDBOptions) SetListeners(arg2 Std_vector_Sl_std_shared_ptr_Sl_EventListener_Sg__Sg_) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_DBOptions_listeners_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrDBOptions) GetListeners() (_swig_ret Std_vector_Sl_std_shared_ptr_Sl_EventListener_Sg__Sg_) {
	var swig_r Std_vector_Sl_std_shared_ptr_Sl_EventListener_Sg__Sg_
	_swig_i_0 := arg1
	swig_r = (Std_vector_Sl_std_shared_ptr_Sl_EventListener_Sg__Sg_)(SwigcptrStd_vector_Sl_std_shared_ptr_Sl_EventListener_Sg__Sg_(C._wrap_DBOptions_listeners_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrDBOptions) SetEnable_thread_tracking(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_DBOptions_enable_thread_tracking_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrDBOptions) GetEnable_thread_tracking() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_DBOptions_enable_thread_tracking_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrDBOptions) SetDelayed_write_rate(arg2 Uint64_t) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_DBOptions_delayed_write_rate_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrDBOptions) GetDelayed_write_rate() (_swig_ret Uint64_t) {
	var swig_r Uint64_t
	_swig_i_0 := arg1
	swig_r = (Uint64_t)(SwigcptrUint64_t(C._wrap_DBOptions_delayed_write_rate_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrDBOptions) SetAllow_concurrent_memtable_write(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_DBOptions_allow_concurrent_memtable_write_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrDBOptions) GetAllow_concurrent_memtable_write() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_DBOptions_allow_concurrent_memtable_write_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrDBOptions) SetEnable_write_thread_adaptive_yield(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_DBOptions_enable_write_thread_adaptive_yield_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrDBOptions) GetEnable_write_thread_adaptive_yield() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_DBOptions_enable_write_thread_adaptive_yield_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrDBOptions) SetWrite_thread_max_yield_usec(arg2 Uint64_t) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_DBOptions_write_thread_max_yield_usec_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrDBOptions) GetWrite_thread_max_yield_usec() (_swig_ret Uint64_t) {
	var swig_r Uint64_t
	_swig_i_0 := arg1
	swig_r = (Uint64_t)(SwigcptrUint64_t(C._wrap_DBOptions_write_thread_max_yield_usec_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrDBOptions) SetWrite_thread_slow_yield_usec(arg2 Uint64_t) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_DBOptions_write_thread_slow_yield_usec_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrDBOptions) GetWrite_thread_slow_yield_usec() (_swig_ret Uint64_t) {
	var swig_r Uint64_t
	_swig_i_0 := arg1
	swig_r = (Uint64_t)(SwigcptrUint64_t(C._wrap_DBOptions_write_thread_slow_yield_usec_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrDBOptions) SetSkip_stats_update_on_db_open(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_DBOptions_skip_stats_update_on_db_open_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrDBOptions) GetSkip_stats_update_on_db_open() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_DBOptions_skip_stats_update_on_db_open_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrDBOptions) SetWal_recovery_mode(arg2 RocksdbWALRecoveryMode) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_DBOptions_wal_recovery_mode_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrDBOptions) GetWal_recovery_mode() (_swig_ret RocksdbWALRecoveryMode) {
	var swig_r RocksdbWALRecoveryMode
	_swig_i_0 := arg1
	swig_r = (RocksdbWALRecoveryMode)(C._wrap_DBOptions_wal_recovery_mode_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrDBOptions) SetRow_cache(arg2 Std_shared_ptr_Sl_rocksdb_Cache_Sg_) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_DBOptions_row_cache_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrDBOptions) GetRow_cache() (_swig_ret Std_shared_ptr_Sl_rocksdb_Cache_Sg_) {
	var swig_r Std_shared_ptr_Sl_rocksdb_Cache_Sg_
	_swig_i_0 := arg1
	swig_r = (Std_shared_ptr_Sl_rocksdb_Cache_Sg_)(SwigcptrStd_shared_ptr_Sl_rocksdb_Cache_Sg_(C._wrap_DBOptions_row_cache_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrDBOptions) SetWal_filter(arg2 Rocksdb_WalFilter) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_DBOptions_wal_filter_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrDBOptions) GetWal_filter() (_swig_ret Rocksdb_WalFilter) {
	var swig_r Rocksdb_WalFilter
	_swig_i_0 := arg1
	swig_r = (Rocksdb_WalFilter)(SwigcptrRocksdb_WalFilter(C._wrap_DBOptions_wal_filter_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrDBOptions) SetFail_if_options_file_error(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_DBOptions_fail_if_options_file_error_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrDBOptions) GetFail_if_options_file_error() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_DBOptions_fail_if_options_file_error_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func DeleteDBOptions(arg1 DBOptions) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_DBOptions_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))
}

type DBOptions interface {
	Swigcptr() uintptr
	SwigIsDBOptions()
	IncreaseParallelism(a ...interface{}) DBOptions
	SetCreate_if_missing(arg2 bool)
	GetCreate_if_missing() (_swig_ret bool)
	SetCreate_missing_column_families(arg2 bool)
	GetCreate_missing_column_families() (_swig_ret bool)
	SetError_if_exists(arg2 bool)
	GetError_if_exists() (_swig_ret bool)
	SetParanoid_checks(arg2 bool)
	GetParanoid_checks() (_swig_ret bool)
	SetEnv(arg2 Rocksdb_Env)
	GetEnv() (_swig_ret Rocksdb_Env)
	SetRate_limiter(arg2 Std_shared_ptr_Sl_rocksdb_RateLimiter_Sg_)
	GetRate_limiter() (_swig_ret Std_shared_ptr_Sl_rocksdb_RateLimiter_Sg_)
	SetSst_file_manager(arg2 Std_shared_ptr_Sl_rocksdb_SstFileManager_Sg_)
	GetSst_file_manager() (_swig_ret Std_shared_ptr_Sl_rocksdb_SstFileManager_Sg_)
	SetInfo_log(arg2 Std_shared_ptr_Sl_rocksdb_Logger_Sg_)
	GetInfo_log() (_swig_ret Std_shared_ptr_Sl_rocksdb_Logger_Sg_)
	SetInfo_log_level(arg2 RocksdbInfoLogLevel)
	GetInfo_log_level() (_swig_ret RocksdbInfoLogLevel)
	SetMax_open_files(arg2 int)
	GetMax_open_files() (_swig_ret int)
	SetMax_file_opening_threads(arg2 int)
	GetMax_file_opening_threads() (_swig_ret int)
	SetMax_total_wal_size(arg2 Uint64_t)
	GetMax_total_wal_size() (_swig_ret Uint64_t)
	SetStatistics(arg2 Std_shared_ptr_Sl_rocksdb_Statistics_Sg_)
	GetStatistics() (_swig_ret Std_shared_ptr_Sl_rocksdb_Statistics_Sg_)
	SetDisableDataSync(arg2 bool)
	GetDisableDataSync() (_swig_ret bool)
	SetUse_fsync(arg2 bool)
	GetUse_fsync() (_swig_ret bool)
	SetDb_paths(arg2 Std_vector_Sl_rocksdb_DbPath_Sg_)
	GetDb_paths() (_swig_ret Std_vector_Sl_rocksdb_DbPath_Sg_)
	SetDb_log_dir(arg2 string)
	GetDb_log_dir() (_swig_ret string)
	SetWal_dir(arg2 string)
	GetWal_dir() (_swig_ret string)
	SetDelete_obsolete_files_period_micros(arg2 Uint64_t)
	GetDelete_obsolete_files_period_micros() (_swig_ret Uint64_t)
	SetBase_background_compactions(arg2 int)
	GetBase_background_compactions() (_swig_ret int)
	SetMax_background_compactions(arg2 int)
	GetMax_background_compactions() (_swig_ret int)
	SetMax_subcompactions(arg2 Uint32_t)
	GetMax_subcompactions() (_swig_ret Uint32_t)
	SetMax_background_flushes(arg2 int)
	GetMax_background_flushes() (_swig_ret int)
	SetMax_log_file_size(arg2 int64)
	GetMax_log_file_size() (_swig_ret int64)
	SetLog_file_time_to_roll(arg2 int64)
	GetLog_file_time_to_roll() (_swig_ret int64)
	SetKeep_log_file_num(arg2 int64)
	GetKeep_log_file_num() (_swig_ret int64)
	SetRecycle_log_file_num(arg2 int64)
	GetRecycle_log_file_num() (_swig_ret int64)
	SetMax_manifest_file_size(arg2 Uint64_t)
	GetMax_manifest_file_size() (_swig_ret Uint64_t)
	SetTable_cache_numshardbits(arg2 int)
	GetTable_cache_numshardbits() (_swig_ret int)
	SetWAL_ttl_seconds(arg2 Uint64_t)
	GetWAL_ttl_seconds() (_swig_ret Uint64_t)
	SetWAL_size_limit_MB(arg2 Uint64_t)
	GetWAL_size_limit_MB() (_swig_ret Uint64_t)
	SetManifest_preallocation_size(arg2 int64)
	GetManifest_preallocation_size() (_swig_ret int64)
	SetAllow_os_buffer(arg2 bool)
	GetAllow_os_buffer() (_swig_ret bool)
	SetAllow_mmap_reads(arg2 bool)
	GetAllow_mmap_reads() (_swig_ret bool)
	SetAllow_mmap_writes(arg2 bool)
	GetAllow_mmap_writes() (_swig_ret bool)
	SetAllow_fallocate(arg2 bool)
	GetAllow_fallocate() (_swig_ret bool)
	SetIs_fd_close_on_exec(arg2 bool)
	GetIs_fd_close_on_exec() (_swig_ret bool)
	SetSkip_log_error_on_recovery(arg2 bool)
	GetSkip_log_error_on_recovery() (_swig_ret bool)
	SetStats_dump_period_sec(arg2 uint)
	GetStats_dump_period_sec() (_swig_ret uint)
	SetAdvise_random_on_open(arg2 bool)
	GetAdvise_random_on_open() (_swig_ret bool)
	SetDb_write_buffer_size(arg2 int64)
	GetDb_write_buffer_size() (_swig_ret int64)
	SetAccess_hint_on_compaction_start(arg2 RocksdbDBOptionsAccessHint)
	GetAccess_hint_on_compaction_start() (_swig_ret RocksdbDBOptionsAccessHint)
	SetNew_table_reader_for_compaction_inputs(arg2 bool)
	GetNew_table_reader_for_compaction_inputs() (_swig_ret bool)
	SetCompaction_readahead_size(arg2 int64)
	GetCompaction_readahead_size() (_swig_ret int64)
	SetRandom_access_max_buffer_size(arg2 int64)
	GetRandom_access_max_buffer_size() (_swig_ret int64)
	SetWritable_file_max_buffer_size(arg2 int64)
	GetWritable_file_max_buffer_size() (_swig_ret int64)
	SetUse_adaptive_mutex(arg2 bool)
	GetUse_adaptive_mutex() (_swig_ret bool)
	Dump(arg2 Rocksdb_Logger)
	SetBytes_per_sync(arg2 Uint64_t)
	GetBytes_per_sync() (_swig_ret Uint64_t)
	SetWal_bytes_per_sync(arg2 Uint64_t)
	GetWal_bytes_per_sync() (_swig_ret Uint64_t)
	SetListeners(arg2 Std_vector_Sl_std_shared_ptr_Sl_EventListener_Sg__Sg_)
	GetListeners() (_swig_ret Std_vector_Sl_std_shared_ptr_Sl_EventListener_Sg__Sg_)
	SetEnable_thread_tracking(arg2 bool)
	GetEnable_thread_tracking() (_swig_ret bool)
	SetDelayed_write_rate(arg2 Uint64_t)
	GetDelayed_write_rate() (_swig_ret Uint64_t)
	SetAllow_concurrent_memtable_write(arg2 bool)
	GetAllow_concurrent_memtable_write() (_swig_ret bool)
	SetEnable_write_thread_adaptive_yield(arg2 bool)
	GetEnable_write_thread_adaptive_yield() (_swig_ret bool)
	SetWrite_thread_max_yield_usec(arg2 Uint64_t)
	GetWrite_thread_max_yield_usec() (_swig_ret Uint64_t)
	SetWrite_thread_slow_yield_usec(arg2 Uint64_t)
	GetWrite_thread_slow_yield_usec() (_swig_ret Uint64_t)
	SetSkip_stats_update_on_db_open(arg2 bool)
	GetSkip_stats_update_on_db_open() (_swig_ret bool)
	SetWal_recovery_mode(arg2 RocksdbWALRecoveryMode)
	GetWal_recovery_mode() (_swig_ret RocksdbWALRecoveryMode)
	SetRow_cache(arg2 Std_shared_ptr_Sl_rocksdb_Cache_Sg_)
	GetRow_cache() (_swig_ret Std_shared_ptr_Sl_rocksdb_Cache_Sg_)
	SetWal_filter(arg2 Rocksdb_WalFilter)
	GetWal_filter() (_swig_ret Rocksdb_WalFilter)
	SetFail_if_options_file_error(arg2 bool)
	GetFail_if_options_file_error() (_swig_ret bool)
}

type SwigcptrOptions uintptr

func (p SwigcptrOptions) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrOptions) SwigIsOptions() {
}

func NewOptions__SWIG_0() (_swig_ret Options) {
	var swig_r Options
	swig_r = (Options)(SwigcptrOptions(C._wrap_new_Options__SWIG_0_rocksdbswig_576e316b0df25a62()))
	return swig_r
}

func NewOptions__SWIG_1(arg1 DBOptions, arg2 ColumnFamilyOptions) (_swig_ret Options) {
	var swig_r Options
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (Options)(SwigcptrOptions(C._wrap_new_Options__SWIG_1_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func NewOptions(a ...interface{}) Options {
	argc := len(a)
	if argc == 0 {
		return NewOptions__SWIG_0()
	}
	if argc == 2 {
		return NewOptions__SWIG_1(a[0].(DBOptions), a[1].(ColumnFamilyOptions))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrOptions) Dump(arg2 Rocksdb_Logger) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_Options_Dump_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrOptions) DumpCFOptions(arg2 Rocksdb_Logger) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_Options_DumpCFOptions_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrOptions) PrepareForBulkLoad() (_swig_ret Options) {
	var swig_r Options
	_swig_i_0 := arg1
	swig_r = (Options)(SwigcptrOptions(C._wrap_Options_PrepareForBulkLoad_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func DeleteOptions(arg1 Options) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_Options_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrOptions) IncreaseParallelism__SWIG_0(arg1 int) (_swig_ret DBOptions) {
	var swig_r DBOptions
	_swig_i_0 := arg1
	swig_r = (DBOptions)(SwigcptrDBOptions(C._wrap_Options_IncreaseParallelism__SWIG_0_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C.swig_intgo(_swig_i_0))))
	return swig_r
}

func (_swig_base SwigcptrOptions) IncreaseParallelism__SWIG_1() (_swig_ret DBOptions) {
	var swig_r DBOptions
	swig_r = (DBOptions)(SwigcptrDBOptions(C._wrap_Options_IncreaseParallelism__SWIG_1_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base))))
	return swig_r
}

func (p SwigcptrOptions) IncreaseParallelism(a ...interface{}) DBOptions {
	argc := len(a)
	if argc == 0 {
		return p.IncreaseParallelism__SWIG_1()
	}
	if argc == 1 {
		return p.IncreaseParallelism__SWIG_0(a[0].(int))
	}
	panic("No match for overloaded function call")
}

func (_swig_base SwigcptrOptions) SetCreate_if_missing(arg1 bool) {
	_swig_i_0 := arg1
	C._wrap_SetOptions_Create_if_missing_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C._Bool(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetCreate_if_missing() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_GetOptions_Create_if_missing_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetCreate_missing_column_families(arg1 bool) {
	_swig_i_0 := arg1
	C._wrap_SetOptions_Create_missing_column_families_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C._Bool(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetCreate_missing_column_families() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_GetOptions_Create_missing_column_families_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetError_if_exists(arg1 bool) {
	_swig_i_0 := arg1
	C._wrap_SetOptions_Error_if_exists_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C._Bool(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetError_if_exists() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_GetOptions_Error_if_exists_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetParanoid_checks(arg1 bool) {
	_swig_i_0 := arg1
	C._wrap_SetOptions_Paranoid_checks_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C._Bool(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetParanoid_checks() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_GetOptions_Paranoid_checks_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetEnv(arg1 Rocksdb_Env) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_SetOptions_Env_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetEnv() (_swig_ret Rocksdb_Env) {
	var swig_r Rocksdb_Env
	swig_r = (Rocksdb_Env)(SwigcptrRocksdb_Env(C._wrap_GetOptions_Env_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base))))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetRate_limiter(arg1 Std_shared_ptr_Sl_rocksdb_RateLimiter_Sg_) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_SetOptions_Rate_limiter_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetRate_limiter() (_swig_ret Std_shared_ptr_Sl_rocksdb_RateLimiter_Sg_) {
	var swig_r Std_shared_ptr_Sl_rocksdb_RateLimiter_Sg_
	swig_r = (Std_shared_ptr_Sl_rocksdb_RateLimiter_Sg_)(SwigcptrStd_shared_ptr_Sl_rocksdb_RateLimiter_Sg_(C._wrap_GetOptions_Rate_limiter_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base))))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetSst_file_manager(arg1 Std_shared_ptr_Sl_rocksdb_SstFileManager_Sg_) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_SetOptions_Sst_file_manager_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetSst_file_manager() (_swig_ret Std_shared_ptr_Sl_rocksdb_SstFileManager_Sg_) {
	var swig_r Std_shared_ptr_Sl_rocksdb_SstFileManager_Sg_
	swig_r = (Std_shared_ptr_Sl_rocksdb_SstFileManager_Sg_)(SwigcptrStd_shared_ptr_Sl_rocksdb_SstFileManager_Sg_(C._wrap_GetOptions_Sst_file_manager_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base))))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetInfo_log(arg1 Std_shared_ptr_Sl_rocksdb_Logger_Sg_) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_SetOptions_Info_log_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetInfo_log() (_swig_ret Std_shared_ptr_Sl_rocksdb_Logger_Sg_) {
	var swig_r Std_shared_ptr_Sl_rocksdb_Logger_Sg_
	swig_r = (Std_shared_ptr_Sl_rocksdb_Logger_Sg_)(SwigcptrStd_shared_ptr_Sl_rocksdb_Logger_Sg_(C._wrap_GetOptions_Info_log_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base))))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetInfo_log_level(arg1 RocksdbInfoLogLevel) {
	_swig_i_0 := arg1
	C._wrap_SetOptions_Info_log_level_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C.swig_intgo(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetInfo_log_level() (_swig_ret RocksdbInfoLogLevel) {
	var swig_r RocksdbInfoLogLevel
	swig_r = (RocksdbInfoLogLevel)(C._wrap_GetOptions_Info_log_level_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetMax_open_files(arg1 int) {
	_swig_i_0 := arg1
	C._wrap_SetOptions_Max_open_files_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C.swig_intgo(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetMax_open_files() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_GetOptions_Max_open_files_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetMax_file_opening_threads(arg1 int) {
	_swig_i_0 := arg1
	C._wrap_SetOptions_Max_file_opening_threads_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C.swig_intgo(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetMax_file_opening_threads() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_GetOptions_Max_file_opening_threads_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetMax_total_wal_size(arg1 Uint64_t) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_SetOptions_Max_total_wal_size_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetMax_total_wal_size() (_swig_ret Uint64_t) {
	var swig_r Uint64_t
	swig_r = (Uint64_t)(SwigcptrUint64_t(C._wrap_GetOptions_Max_total_wal_size_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base))))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetStatistics(arg1 Std_shared_ptr_Sl_rocksdb_Statistics_Sg_) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_SetOptions_Statistics_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetStatistics() (_swig_ret Std_shared_ptr_Sl_rocksdb_Statistics_Sg_) {
	var swig_r Std_shared_ptr_Sl_rocksdb_Statistics_Sg_
	swig_r = (Std_shared_ptr_Sl_rocksdb_Statistics_Sg_)(SwigcptrStd_shared_ptr_Sl_rocksdb_Statistics_Sg_(C._wrap_GetOptions_Statistics_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base))))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetDisableDataSync(arg1 bool) {
	_swig_i_0 := arg1
	C._wrap_SetOptions_DisableDataSync_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C._Bool(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetDisableDataSync() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_GetOptions_DisableDataSync_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetUse_fsync(arg1 bool) {
	_swig_i_0 := arg1
	C._wrap_SetOptions_Use_fsync_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C._Bool(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetUse_fsync() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_GetOptions_Use_fsync_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetDb_paths(arg1 Std_vector_Sl_rocksdb_DbPath_Sg_) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_SetOptions_Db_paths_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetDb_paths() (_swig_ret Std_vector_Sl_rocksdb_DbPath_Sg_) {
	var swig_r Std_vector_Sl_rocksdb_DbPath_Sg_
	swig_r = (Std_vector_Sl_rocksdb_DbPath_Sg_)(SwigcptrStd_vector_Sl_rocksdb_DbPath_Sg_(C._wrap_GetOptions_Db_paths_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base))))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetDb_log_dir(arg1 string) {
	_swig_i_0 := arg1
	C._wrap_SetOptions_Db_log_dir_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), *(*C.swig_type_54)(unsafe.Pointer(&_swig_i_0)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
}

func (_swig_base SwigcptrOptions) GetDb_log_dir() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_GetOptions_Db_log_dir_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (_swig_base SwigcptrOptions) SetWal_dir(arg1 string) {
	_swig_i_0 := arg1
	C._wrap_SetOptions_Wal_dir_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), *(*C.swig_type_56)(unsafe.Pointer(&_swig_i_0)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
}

func (_swig_base SwigcptrOptions) GetWal_dir() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_GetOptions_Wal_dir_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (_swig_base SwigcptrOptions) SetDelete_obsolete_files_period_micros(arg1 Uint64_t) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_SetOptions_Delete_obsolete_files_period_micros_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetDelete_obsolete_files_period_micros() (_swig_ret Uint64_t) {
	var swig_r Uint64_t
	swig_r = (Uint64_t)(SwigcptrUint64_t(C._wrap_GetOptions_Delete_obsolete_files_period_micros_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base))))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetBase_background_compactions(arg1 int) {
	_swig_i_0 := arg1
	C._wrap_SetOptions_Base_background_compactions_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C.swig_intgo(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetBase_background_compactions() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_GetOptions_Base_background_compactions_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetMax_background_compactions(arg1 int) {
	_swig_i_0 := arg1
	C._wrap_SetOptions_Max_background_compactions_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C.swig_intgo(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetMax_background_compactions() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_GetOptions_Max_background_compactions_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetMax_subcompactions(arg1 Uint32_t) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_SetOptions_Max_subcompactions_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetMax_subcompactions() (_swig_ret Uint32_t) {
	var swig_r Uint32_t
	swig_r = (Uint32_t)(SwigcptrUint32_t(C._wrap_GetOptions_Max_subcompactions_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base))))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetMax_background_flushes(arg1 int) {
	_swig_i_0 := arg1
	C._wrap_SetOptions_Max_background_flushes_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C.swig_intgo(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetMax_background_flushes() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_GetOptions_Max_background_flushes_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetMax_log_file_size(arg1 int64) {
	_swig_i_0 := arg1
	C._wrap_SetOptions_Max_log_file_size_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C.swig_type_58(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetMax_log_file_size() (_swig_ret int64) {
	var swig_r int64
	swig_r = (int64)(C._wrap_GetOptions_Max_log_file_size_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetLog_file_time_to_roll(arg1 int64) {
	_swig_i_0 := arg1
	C._wrap_SetOptions_Log_file_time_to_roll_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C.swig_type_60(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetLog_file_time_to_roll() (_swig_ret int64) {
	var swig_r int64
	swig_r = (int64)(C._wrap_GetOptions_Log_file_time_to_roll_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetKeep_log_file_num(arg1 int64) {
	_swig_i_0 := arg1
	C._wrap_SetOptions_Keep_log_file_num_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C.swig_type_62(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetKeep_log_file_num() (_swig_ret int64) {
	var swig_r int64
	swig_r = (int64)(C._wrap_GetOptions_Keep_log_file_num_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetRecycle_log_file_num(arg1 int64) {
	_swig_i_0 := arg1
	C._wrap_SetOptions_Recycle_log_file_num_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C.swig_type_64(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetRecycle_log_file_num() (_swig_ret int64) {
	var swig_r int64
	swig_r = (int64)(C._wrap_GetOptions_Recycle_log_file_num_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetMax_manifest_file_size(arg1 Uint64_t) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_SetOptions_Max_manifest_file_size_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetMax_manifest_file_size() (_swig_ret Uint64_t) {
	var swig_r Uint64_t
	swig_r = (Uint64_t)(SwigcptrUint64_t(C._wrap_GetOptions_Max_manifest_file_size_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base))))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetTable_cache_numshardbits(arg1 int) {
	_swig_i_0 := arg1
	C._wrap_SetOptions_Table_cache_numshardbits_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C.swig_intgo(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetTable_cache_numshardbits() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_GetOptions_Table_cache_numshardbits_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetWAL_ttl_seconds(arg1 Uint64_t) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_SetOptions_WAL_ttl_seconds_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetWAL_ttl_seconds() (_swig_ret Uint64_t) {
	var swig_r Uint64_t
	swig_r = (Uint64_t)(SwigcptrUint64_t(C._wrap_GetOptions_WAL_ttl_seconds_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base))))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetWAL_size_limit_MB(arg1 Uint64_t) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_SetOptions_WAL_size_limit_MB_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetWAL_size_limit_MB() (_swig_ret Uint64_t) {
	var swig_r Uint64_t
	swig_r = (Uint64_t)(SwigcptrUint64_t(C._wrap_GetOptions_WAL_size_limit_MB_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base))))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetManifest_preallocation_size(arg1 int64) {
	_swig_i_0 := arg1
	C._wrap_SetOptions_Manifest_preallocation_size_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C.swig_type_66(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetManifest_preallocation_size() (_swig_ret int64) {
	var swig_r int64
	swig_r = (int64)(C._wrap_GetOptions_Manifest_preallocation_size_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetAllow_os_buffer(arg1 bool) {
	_swig_i_0 := arg1
	C._wrap_SetOptions_Allow_os_buffer_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C._Bool(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetAllow_os_buffer() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_GetOptions_Allow_os_buffer_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetAllow_mmap_reads(arg1 bool) {
	_swig_i_0 := arg1
	C._wrap_SetOptions_Allow_mmap_reads_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C._Bool(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetAllow_mmap_reads() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_GetOptions_Allow_mmap_reads_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetAllow_mmap_writes(arg1 bool) {
	_swig_i_0 := arg1
	C._wrap_SetOptions_Allow_mmap_writes_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C._Bool(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetAllow_mmap_writes() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_GetOptions_Allow_mmap_writes_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetAllow_fallocate(arg1 bool) {
	_swig_i_0 := arg1
	C._wrap_SetOptions_Allow_fallocate_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C._Bool(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetAllow_fallocate() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_GetOptions_Allow_fallocate_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetIs_fd_close_on_exec(arg1 bool) {
	_swig_i_0 := arg1
	C._wrap_SetOptions_Is_fd_close_on_exec_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C._Bool(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetIs_fd_close_on_exec() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_GetOptions_Is_fd_close_on_exec_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetSkip_log_error_on_recovery(arg1 bool) {
	_swig_i_0 := arg1
	C._wrap_SetOptions_Skip_log_error_on_recovery_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C._Bool(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetSkip_log_error_on_recovery() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_GetOptions_Skip_log_error_on_recovery_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetStats_dump_period_sec(arg1 uint) {
	_swig_i_0 := arg1
	C._wrap_SetOptions_Stats_dump_period_sec_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C.swig_intgo(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetStats_dump_period_sec() (_swig_ret uint) {
	var swig_r uint
	swig_r = (uint)(C._wrap_GetOptions_Stats_dump_period_sec_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetAdvise_random_on_open(arg1 bool) {
	_swig_i_0 := arg1
	C._wrap_SetOptions_Advise_random_on_open_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C._Bool(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetAdvise_random_on_open() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_GetOptions_Advise_random_on_open_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetDb_write_buffer_size(arg1 int64) {
	_swig_i_0 := arg1
	C._wrap_SetOptions_Db_write_buffer_size_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C.swig_type_68(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetDb_write_buffer_size() (_swig_ret int64) {
	var swig_r int64
	swig_r = (int64)(C._wrap_GetOptions_Db_write_buffer_size_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetAccess_hint_on_compaction_start(arg1 RocksdbDBOptionsAccessHint) {
	_swig_i_0 := arg1
	C._wrap_SetOptions_Access_hint_on_compaction_start_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C.swig_intgo(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetAccess_hint_on_compaction_start() (_swig_ret RocksdbDBOptionsAccessHint) {
	var swig_r RocksdbDBOptionsAccessHint
	swig_r = (RocksdbDBOptionsAccessHint)(C._wrap_GetOptions_Access_hint_on_compaction_start_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetNew_table_reader_for_compaction_inputs(arg1 bool) {
	_swig_i_0 := arg1
	C._wrap_SetOptions_New_table_reader_for_compaction_inputs_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C._Bool(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetNew_table_reader_for_compaction_inputs() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_GetOptions_New_table_reader_for_compaction_inputs_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetCompaction_readahead_size(arg1 int64) {
	_swig_i_0 := arg1
	C._wrap_SetOptions_Compaction_readahead_size_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C.swig_type_70(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetCompaction_readahead_size() (_swig_ret int64) {
	var swig_r int64
	swig_r = (int64)(C._wrap_GetOptions_Compaction_readahead_size_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetRandom_access_max_buffer_size(arg1 int64) {
	_swig_i_0 := arg1
	C._wrap_SetOptions_Random_access_max_buffer_size_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C.swig_type_72(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetRandom_access_max_buffer_size() (_swig_ret int64) {
	var swig_r int64
	swig_r = (int64)(C._wrap_GetOptions_Random_access_max_buffer_size_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetWritable_file_max_buffer_size(arg1 int64) {
	_swig_i_0 := arg1
	C._wrap_SetOptions_Writable_file_max_buffer_size_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C.swig_type_74(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetWritable_file_max_buffer_size() (_swig_ret int64) {
	var swig_r int64
	swig_r = (int64)(C._wrap_GetOptions_Writable_file_max_buffer_size_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetUse_adaptive_mutex(arg1 bool) {
	_swig_i_0 := arg1
	C._wrap_SetOptions_Use_adaptive_mutex_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C._Bool(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetUse_adaptive_mutex() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_GetOptions_Use_adaptive_mutex_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetBytes_per_sync(arg1 Uint64_t) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_SetOptions_Bytes_per_sync_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetBytes_per_sync() (_swig_ret Uint64_t) {
	var swig_r Uint64_t
	swig_r = (Uint64_t)(SwigcptrUint64_t(C._wrap_GetOptions_Bytes_per_sync_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base))))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetWal_bytes_per_sync(arg1 Uint64_t) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_SetOptions_Wal_bytes_per_sync_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetWal_bytes_per_sync() (_swig_ret Uint64_t) {
	var swig_r Uint64_t
	swig_r = (Uint64_t)(SwigcptrUint64_t(C._wrap_GetOptions_Wal_bytes_per_sync_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base))))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetListeners(arg1 Std_vector_Sl_std_shared_ptr_Sl_EventListener_Sg__Sg_) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_SetOptions_Listeners_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetListeners() (_swig_ret Std_vector_Sl_std_shared_ptr_Sl_EventListener_Sg__Sg_) {
	var swig_r Std_vector_Sl_std_shared_ptr_Sl_EventListener_Sg__Sg_
	swig_r = (Std_vector_Sl_std_shared_ptr_Sl_EventListener_Sg__Sg_)(SwigcptrStd_vector_Sl_std_shared_ptr_Sl_EventListener_Sg__Sg_(C._wrap_GetOptions_Listeners_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base))))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetEnable_thread_tracking(arg1 bool) {
	_swig_i_0 := arg1
	C._wrap_SetOptions_Enable_thread_tracking_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C._Bool(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetEnable_thread_tracking() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_GetOptions_Enable_thread_tracking_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetDelayed_write_rate(arg1 Uint64_t) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_SetOptions_Delayed_write_rate_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetDelayed_write_rate() (_swig_ret Uint64_t) {
	var swig_r Uint64_t
	swig_r = (Uint64_t)(SwigcptrUint64_t(C._wrap_GetOptions_Delayed_write_rate_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base))))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetAllow_concurrent_memtable_write(arg1 bool) {
	_swig_i_0 := arg1
	C._wrap_SetOptions_Allow_concurrent_memtable_write_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C._Bool(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetAllow_concurrent_memtable_write() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_GetOptions_Allow_concurrent_memtable_write_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetEnable_write_thread_adaptive_yield(arg1 bool) {
	_swig_i_0 := arg1
	C._wrap_SetOptions_Enable_write_thread_adaptive_yield_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C._Bool(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetEnable_write_thread_adaptive_yield() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_GetOptions_Enable_write_thread_adaptive_yield_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetWrite_thread_max_yield_usec(arg1 Uint64_t) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_SetOptions_Write_thread_max_yield_usec_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetWrite_thread_max_yield_usec() (_swig_ret Uint64_t) {
	var swig_r Uint64_t
	swig_r = (Uint64_t)(SwigcptrUint64_t(C._wrap_GetOptions_Write_thread_max_yield_usec_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base))))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetWrite_thread_slow_yield_usec(arg1 Uint64_t) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_SetOptions_Write_thread_slow_yield_usec_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetWrite_thread_slow_yield_usec() (_swig_ret Uint64_t) {
	var swig_r Uint64_t
	swig_r = (Uint64_t)(SwigcptrUint64_t(C._wrap_GetOptions_Write_thread_slow_yield_usec_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base))))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetSkip_stats_update_on_db_open(arg1 bool) {
	_swig_i_0 := arg1
	C._wrap_SetOptions_Skip_stats_update_on_db_open_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C._Bool(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetSkip_stats_update_on_db_open() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_GetOptions_Skip_stats_update_on_db_open_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetWal_recovery_mode(arg1 RocksdbWALRecoveryMode) {
	_swig_i_0 := arg1
	C._wrap_SetOptions_Wal_recovery_mode_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C.swig_intgo(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetWal_recovery_mode() (_swig_ret RocksdbWALRecoveryMode) {
	var swig_r RocksdbWALRecoveryMode
	swig_r = (RocksdbWALRecoveryMode)(C._wrap_GetOptions_Wal_recovery_mode_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetRow_cache(arg1 Std_shared_ptr_Sl_rocksdb_Cache_Sg_) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_SetOptions_Row_cache_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetRow_cache() (_swig_ret Std_shared_ptr_Sl_rocksdb_Cache_Sg_) {
	var swig_r Std_shared_ptr_Sl_rocksdb_Cache_Sg_
	swig_r = (Std_shared_ptr_Sl_rocksdb_Cache_Sg_)(SwigcptrStd_shared_ptr_Sl_rocksdb_Cache_Sg_(C._wrap_GetOptions_Row_cache_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base))))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetWal_filter(arg1 Rocksdb_WalFilter) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_SetOptions_Wal_filter_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetWal_filter() (_swig_ret Rocksdb_WalFilter) {
	var swig_r Rocksdb_WalFilter
	swig_r = (Rocksdb_WalFilter)(SwigcptrRocksdb_WalFilter(C._wrap_GetOptions_Wal_filter_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base))))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetFail_if_options_file_error(arg1 bool) {
	_swig_i_0 := arg1
	C._wrap_SetOptions_Fail_if_options_file_error_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C._Bool(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetFail_if_options_file_error() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_GetOptions_Fail_if_options_file_error_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrOptions) OptimizeForPointLookup(arg1 Uint64_t) (_swig_ret ColumnFamilyOptions) {
	var swig_r ColumnFamilyOptions
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (ColumnFamilyOptions)(SwigcptrColumnFamilyOptions(C._wrap_Options_OptimizeForPointLookup_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (_swig_base SwigcptrOptions) OptimizeLevelStyleCompaction__SWIG_0(arg1 Uint64_t) (_swig_ret ColumnFamilyOptions) {
	var swig_r ColumnFamilyOptions
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (ColumnFamilyOptions)(SwigcptrColumnFamilyOptions(C._wrap_Options_OptimizeLevelStyleCompaction__SWIG_0_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (_swig_base SwigcptrOptions) OptimizeLevelStyleCompaction__SWIG_1() (_swig_ret ColumnFamilyOptions) {
	var swig_r ColumnFamilyOptions
	swig_r = (ColumnFamilyOptions)(SwigcptrColumnFamilyOptions(C._wrap_Options_OptimizeLevelStyleCompaction__SWIG_1_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base))))
	return swig_r
}

func (p SwigcptrOptions) OptimizeLevelStyleCompaction(a ...interface{}) ColumnFamilyOptions {
	argc := len(a)
	if argc == 0 {
		return p.OptimizeLevelStyleCompaction__SWIG_1()
	}
	if argc == 1 {
		return p.OptimizeLevelStyleCompaction__SWIG_0(a[0].(Uint64_t))
	}
	panic("No match for overloaded function call")
}

func (_swig_base SwigcptrOptions) OptimizeUniversalStyleCompaction__SWIG_0(arg1 Uint64_t) (_swig_ret ColumnFamilyOptions) {
	var swig_r ColumnFamilyOptions
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (ColumnFamilyOptions)(SwigcptrColumnFamilyOptions(C._wrap_Options_OptimizeUniversalStyleCompaction__SWIG_0_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (_swig_base SwigcptrOptions) OptimizeUniversalStyleCompaction__SWIG_1() (_swig_ret ColumnFamilyOptions) {
	var swig_r ColumnFamilyOptions
	swig_r = (ColumnFamilyOptions)(SwigcptrColumnFamilyOptions(C._wrap_Options_OptimizeUniversalStyleCompaction__SWIG_1_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base))))
	return swig_r
}

func (p SwigcptrOptions) OptimizeUniversalStyleCompaction(a ...interface{}) ColumnFamilyOptions {
	argc := len(a)
	if argc == 0 {
		return p.OptimizeUniversalStyleCompaction__SWIG_1()
	}
	if argc == 1 {
		return p.OptimizeUniversalStyleCompaction__SWIG_0(a[0].(Uint64_t))
	}
	panic("No match for overloaded function call")
}

func (_swig_base SwigcptrOptions) SetComparator(arg1 Rocksdb_Comparator) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_SetOptions_Comparator_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetComparator() (_swig_ret Rocksdb_Comparator) {
	var swig_r Rocksdb_Comparator
	swig_r = (Rocksdb_Comparator)(SwigcptrRocksdb_Comparator(C._wrap_GetOptions_Comparator_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base))))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetMerge_operator(arg1 Std_shared_ptr_Sl_rocksdb_MergeOperator_Sg_) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_SetOptions_Merge_operator_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetMerge_operator() (_swig_ret Std_shared_ptr_Sl_rocksdb_MergeOperator_Sg_) {
	var swig_r Std_shared_ptr_Sl_rocksdb_MergeOperator_Sg_
	swig_r = (Std_shared_ptr_Sl_rocksdb_MergeOperator_Sg_)(SwigcptrStd_shared_ptr_Sl_rocksdb_MergeOperator_Sg_(C._wrap_GetOptions_Merge_operator_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base))))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetCompaction_filter(arg1 Rocksdb_CompactionFilter) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_SetOptions_Compaction_filter_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetCompaction_filter() (_swig_ret Rocksdb_CompactionFilter) {
	var swig_r Rocksdb_CompactionFilter
	swig_r = (Rocksdb_CompactionFilter)(SwigcptrRocksdb_CompactionFilter(C._wrap_GetOptions_Compaction_filter_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base))))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetCompaction_filter_factory(arg1 Std_shared_ptr_Sl_rocksdb_CompactionFilterFactory_Sg_) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_SetOptions_Compaction_filter_factory_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetCompaction_filter_factory() (_swig_ret Std_shared_ptr_Sl_rocksdb_CompactionFilterFactory_Sg_) {
	var swig_r Std_shared_ptr_Sl_rocksdb_CompactionFilterFactory_Sg_
	swig_r = (Std_shared_ptr_Sl_rocksdb_CompactionFilterFactory_Sg_)(SwigcptrStd_shared_ptr_Sl_rocksdb_CompactionFilterFactory_Sg_(C._wrap_GetOptions_Compaction_filter_factory_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base))))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetWrite_buffer_size(arg1 int64) {
	_swig_i_0 := arg1
	C._wrap_SetOptions_Write_buffer_size_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C.swig_type_76(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetWrite_buffer_size() (_swig_ret int64) {
	var swig_r int64
	swig_r = (int64)(C._wrap_GetOptions_Write_buffer_size_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetMax_write_buffer_number(arg1 int) {
	_swig_i_0 := arg1
	C._wrap_SetOptions_Max_write_buffer_number_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C.swig_intgo(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetMax_write_buffer_number() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_GetOptions_Max_write_buffer_number_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetMin_write_buffer_number_to_merge(arg1 int) {
	_swig_i_0 := arg1
	C._wrap_SetOptions_Min_write_buffer_number_to_merge_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C.swig_intgo(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetMin_write_buffer_number_to_merge() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_GetOptions_Min_write_buffer_number_to_merge_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetMax_write_buffer_number_to_maintain(arg1 int) {
	_swig_i_0 := arg1
	C._wrap_SetOptions_Max_write_buffer_number_to_maintain_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C.swig_intgo(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetMax_write_buffer_number_to_maintain() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_GetOptions_Max_write_buffer_number_to_maintain_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetCompression(arg1 RocksdbCompressionType) {
	_swig_i_0 := arg1
	C._wrap_SetOptions_Compression_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C.swig_intgo(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetCompression() (_swig_ret RocksdbCompressionType) {
	var swig_r RocksdbCompressionType
	swig_r = (RocksdbCompressionType)(C._wrap_GetOptions_Compression_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetCompression_per_level(arg1 Std_vector_Sl_enum_SS_rocksdb_CompressionType_Sg_) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_SetOptions_Compression_per_level_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetCompression_per_level() (_swig_ret Std_vector_Sl_enum_SS_rocksdb_CompressionType_Sg_) {
	var swig_r Std_vector_Sl_enum_SS_rocksdb_CompressionType_Sg_
	swig_r = (Std_vector_Sl_enum_SS_rocksdb_CompressionType_Sg_)(SwigcptrStd_vector_Sl_enum_SS_rocksdb_CompressionType_Sg_(C._wrap_GetOptions_Compression_per_level_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base))))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetCompression_opts(arg1 CompressionOptions) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_SetOptions_Compression_opts_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetCompression_opts() (_swig_ret CompressionOptions) {
	var swig_r CompressionOptions
	swig_r = (CompressionOptions)(SwigcptrCompressionOptions(C._wrap_GetOptions_Compression_opts_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base))))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetPrefix_extractor(arg1 Std_shared_ptr_Sl_rocksdb_SliceTransform_SS_const_Sg_) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_SetOptions_Prefix_extractor_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetPrefix_extractor() (_swig_ret Std_shared_ptr_Sl_rocksdb_SliceTransform_SS_const_Sg_) {
	var swig_r Std_shared_ptr_Sl_rocksdb_SliceTransform_SS_const_Sg_
	swig_r = (Std_shared_ptr_Sl_rocksdb_SliceTransform_SS_const_Sg_)(SwigcptrStd_shared_ptr_Sl_rocksdb_SliceTransform_SS_const_Sg_(C._wrap_GetOptions_Prefix_extractor_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base))))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetNum_levels(arg1 int) {
	_swig_i_0 := arg1
	C._wrap_SetOptions_Num_levels_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C.swig_intgo(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetNum_levels() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_GetOptions_Num_levels_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetLevel0_file_num_compaction_trigger(arg1 int) {
	_swig_i_0 := arg1
	C._wrap_SetOptions_Level0_file_num_compaction_trigger_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C.swig_intgo(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetLevel0_file_num_compaction_trigger() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_GetOptions_Level0_file_num_compaction_trigger_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetLevel0_slowdown_writes_trigger(arg1 int) {
	_swig_i_0 := arg1
	C._wrap_SetOptions_Level0_slowdown_writes_trigger_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C.swig_intgo(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetLevel0_slowdown_writes_trigger() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_GetOptions_Level0_slowdown_writes_trigger_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetLevel0_stop_writes_trigger(arg1 int) {
	_swig_i_0 := arg1
	C._wrap_SetOptions_Level0_stop_writes_trigger_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C.swig_intgo(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetLevel0_stop_writes_trigger() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_GetOptions_Level0_stop_writes_trigger_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetMax_mem_compaction_level(arg1 int) {
	_swig_i_0 := arg1
	C._wrap_SetOptions_Max_mem_compaction_level_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C.swig_intgo(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetMax_mem_compaction_level() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_GetOptions_Max_mem_compaction_level_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetTarget_file_size_base(arg1 Uint64_t) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_SetOptions_Target_file_size_base_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetTarget_file_size_base() (_swig_ret Uint64_t) {
	var swig_r Uint64_t
	swig_r = (Uint64_t)(SwigcptrUint64_t(C._wrap_GetOptions_Target_file_size_base_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base))))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetTarget_file_size_multiplier(arg1 int) {
	_swig_i_0 := arg1
	C._wrap_SetOptions_Target_file_size_multiplier_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C.swig_intgo(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetTarget_file_size_multiplier() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_GetOptions_Target_file_size_multiplier_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetMax_bytes_for_level_base(arg1 Uint64_t) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_SetOptions_Max_bytes_for_level_base_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetMax_bytes_for_level_base() (_swig_ret Uint64_t) {
	var swig_r Uint64_t
	swig_r = (Uint64_t)(SwigcptrUint64_t(C._wrap_GetOptions_Max_bytes_for_level_base_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base))))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetLevel_compaction_dynamic_level_bytes(arg1 bool) {
	_swig_i_0 := arg1
	C._wrap_SetOptions_Level_compaction_dynamic_level_bytes_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C._Bool(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetLevel_compaction_dynamic_level_bytes() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_GetOptions_Level_compaction_dynamic_level_bytes_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetMax_bytes_for_level_multiplier(arg1 int) {
	_swig_i_0 := arg1
	C._wrap_SetOptions_Max_bytes_for_level_multiplier_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C.swig_intgo(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetMax_bytes_for_level_multiplier() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_GetOptions_Max_bytes_for_level_multiplier_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetMax_bytes_for_level_multiplier_additional(arg1 Std_vector_Sl_int_Sg_) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_SetOptions_Max_bytes_for_level_multiplier_additional_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetMax_bytes_for_level_multiplier_additional() (_swig_ret Std_vector_Sl_int_Sg_) {
	var swig_r Std_vector_Sl_int_Sg_
	swig_r = (Std_vector_Sl_int_Sg_)(SwigcptrStd_vector_Sl_int_Sg_(C._wrap_GetOptions_Max_bytes_for_level_multiplier_additional_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base))))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetExpanded_compaction_factor(arg1 int) {
	_swig_i_0 := arg1
	C._wrap_SetOptions_Expanded_compaction_factor_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C.swig_intgo(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetExpanded_compaction_factor() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_GetOptions_Expanded_compaction_factor_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetSource_compaction_factor(arg1 int) {
	_swig_i_0 := arg1
	C._wrap_SetOptions_Source_compaction_factor_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C.swig_intgo(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetSource_compaction_factor() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_GetOptions_Source_compaction_factor_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetMax_grandparent_overlap_factor(arg1 int) {
	_swig_i_0 := arg1
	C._wrap_SetOptions_Max_grandparent_overlap_factor_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C.swig_intgo(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetMax_grandparent_overlap_factor() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_GetOptions_Max_grandparent_overlap_factor_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetSoft_rate_limit(arg1 float64) {
	_swig_i_0 := arg1
	C._wrap_SetOptions_Soft_rate_limit_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C.double(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetSoft_rate_limit() (_swig_ret float64) {
	var swig_r float64
	swig_r = (float64)(C._wrap_GetOptions_Soft_rate_limit_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetHard_rate_limit(arg1 float64) {
	_swig_i_0 := arg1
	C._wrap_SetOptions_Hard_rate_limit_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C.double(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetHard_rate_limit() (_swig_ret float64) {
	var swig_r float64
	swig_r = (float64)(C._wrap_GetOptions_Hard_rate_limit_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetSoft_pending_compaction_bytes_limit(arg1 Uint64_t) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_SetOptions_Soft_pending_compaction_bytes_limit_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetSoft_pending_compaction_bytes_limit() (_swig_ret Uint64_t) {
	var swig_r Uint64_t
	swig_r = (Uint64_t)(SwigcptrUint64_t(C._wrap_GetOptions_Soft_pending_compaction_bytes_limit_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base))))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetHard_pending_compaction_bytes_limit(arg1 Uint64_t) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_SetOptions_Hard_pending_compaction_bytes_limit_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetHard_pending_compaction_bytes_limit() (_swig_ret Uint64_t) {
	var swig_r Uint64_t
	swig_r = (Uint64_t)(SwigcptrUint64_t(C._wrap_GetOptions_Hard_pending_compaction_bytes_limit_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base))))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetRate_limit_delay_max_milliseconds(arg1 uint) {
	_swig_i_0 := arg1
	C._wrap_SetOptions_Rate_limit_delay_max_milliseconds_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C.swig_intgo(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetRate_limit_delay_max_milliseconds() (_swig_ret uint) {
	var swig_r uint
	swig_r = (uint)(C._wrap_GetOptions_Rate_limit_delay_max_milliseconds_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetArena_block_size(arg1 int64) {
	_swig_i_0 := arg1
	C._wrap_SetOptions_Arena_block_size_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C.swig_type_78(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetArena_block_size() (_swig_ret int64) {
	var swig_r int64
	swig_r = (int64)(C._wrap_GetOptions_Arena_block_size_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetDisable_auto_compactions(arg1 bool) {
	_swig_i_0 := arg1
	C._wrap_SetOptions_Disable_auto_compactions_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C._Bool(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetDisable_auto_compactions() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_GetOptions_Disable_auto_compactions_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetPurge_redundant_kvs_while_flush(arg1 bool) {
	_swig_i_0 := arg1
	C._wrap_SetOptions_Purge_redundant_kvs_while_flush_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C._Bool(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetPurge_redundant_kvs_while_flush() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_GetOptions_Purge_redundant_kvs_while_flush_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetCompaction_style(arg1 RocksdbCompactionStyle) {
	_swig_i_0 := arg1
	C._wrap_SetOptions_Compaction_style_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C.swig_intgo(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetCompaction_style() (_swig_ret RocksdbCompactionStyle) {
	var swig_r RocksdbCompactionStyle
	swig_r = (RocksdbCompactionStyle)(C._wrap_GetOptions_Compaction_style_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetCompaction_pri(arg1 RocksdbCompactionPri) {
	_swig_i_0 := arg1
	C._wrap_SetOptions_Compaction_pri_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C.swig_intgo(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetCompaction_pri() (_swig_ret RocksdbCompactionPri) {
	var swig_r RocksdbCompactionPri
	swig_r = (RocksdbCompactionPri)(C._wrap_GetOptions_Compaction_pri_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetVerify_checksums_in_compaction(arg1 bool) {
	_swig_i_0 := arg1
	C._wrap_SetOptions_Verify_checksums_in_compaction_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C._Bool(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetVerify_checksums_in_compaction() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_GetOptions_Verify_checksums_in_compaction_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetCompaction_options_universal(arg1 CompactionOptionsUniversal) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_SetOptions_Compaction_options_universal_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetCompaction_options_universal() (_swig_ret CompactionOptionsUniversal) {
	var swig_r CompactionOptionsUniversal
	swig_r = (CompactionOptionsUniversal)(SwigcptrCompactionOptionsUniversal(C._wrap_GetOptions_Compaction_options_universal_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base))))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetCompaction_options_fifo(arg1 CompactionOptionsFIFO) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_SetOptions_Compaction_options_fifo_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetCompaction_options_fifo() (_swig_ret CompactionOptionsFIFO) {
	var swig_r CompactionOptionsFIFO
	swig_r = (CompactionOptionsFIFO)(SwigcptrCompactionOptionsFIFO(C._wrap_GetOptions_Compaction_options_fifo_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base))))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetFilter_deletes(arg1 bool) {
	_swig_i_0 := arg1
	C._wrap_SetOptions_Filter_deletes_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C._Bool(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetFilter_deletes() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_GetOptions_Filter_deletes_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetMax_sequential_skip_in_iterations(arg1 Uint64_t) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_SetOptions_Max_sequential_skip_in_iterations_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetMax_sequential_skip_in_iterations() (_swig_ret Uint64_t) {
	var swig_r Uint64_t
	swig_r = (Uint64_t)(SwigcptrUint64_t(C._wrap_GetOptions_Max_sequential_skip_in_iterations_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base))))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetMemtable_factory(arg1 Std_shared_ptr_Sl_rocksdb_MemTableRepFactory_Sg_) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_SetOptions_Memtable_factory_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetMemtable_factory() (_swig_ret Std_shared_ptr_Sl_rocksdb_MemTableRepFactory_Sg_) {
	var swig_r Std_shared_ptr_Sl_rocksdb_MemTableRepFactory_Sg_
	swig_r = (Std_shared_ptr_Sl_rocksdb_MemTableRepFactory_Sg_)(SwigcptrStd_shared_ptr_Sl_rocksdb_MemTableRepFactory_Sg_(C._wrap_GetOptions_Memtable_factory_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base))))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetTable_factory(arg1 Std_shared_ptr_Sl_rocksdb_TableFactory_Sg_) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_SetOptions_Table_factory_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetTable_factory() (_swig_ret Std_shared_ptr_Sl_rocksdb_TableFactory_Sg_) {
	var swig_r Std_shared_ptr_Sl_rocksdb_TableFactory_Sg_
	swig_r = (Std_shared_ptr_Sl_rocksdb_TableFactory_Sg_)(SwigcptrStd_shared_ptr_Sl_rocksdb_TableFactory_Sg_(C._wrap_GetOptions_Table_factory_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base))))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetTable_properties_collector_factories(arg1 Std_vector_Sl_std_shared_ptr_Sl_rocksdb_TablePropertiesCollectorFactory_Sg__Sg_) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_SetOptions_Table_properties_collector_factories_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetTable_properties_collector_factories() (_swig_ret Std_vector_Sl_std_shared_ptr_Sl_rocksdb_TablePropertiesCollectorFactory_Sg__Sg_) {
	var swig_r Std_vector_Sl_std_shared_ptr_Sl_rocksdb_TablePropertiesCollectorFactory_Sg__Sg_
	swig_r = (Std_vector_Sl_std_shared_ptr_Sl_rocksdb_TablePropertiesCollectorFactory_Sg__Sg_)(SwigcptrStd_vector_Sl_std_shared_ptr_Sl_rocksdb_TablePropertiesCollectorFactory_Sg__Sg_(C._wrap_GetOptions_Table_properties_collector_factories_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base))))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetInplace_update_support(arg1 bool) {
	_swig_i_0 := arg1
	C._wrap_SetOptions_Inplace_update_support_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C._Bool(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetInplace_update_support() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_GetOptions_Inplace_update_support_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetInplace_update_num_locks(arg1 int64) {
	_swig_i_0 := arg1
	C._wrap_SetOptions_Inplace_update_num_locks_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C.swig_type_80(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetInplace_update_num_locks() (_swig_ret int64) {
	var swig_r int64
	swig_r = (int64)(C._wrap_GetOptions_Inplace_update_num_locks_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetInplace_callback(arg1 _swig_fnptr) {
	_swig_i_0 := arg1
	C._wrap_SetOptions_Inplace_callback_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C.swig_type_82(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetInplace_callback() (_swig_ret _swig_fnptr) {
	var swig_r _swig_fnptr
	swig_r = (_swig_fnptr)(C._wrap_GetOptions_Inplace_callback_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetMemtable_prefix_bloom_bits(arg1 Uint32_t) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_SetOptions_Memtable_prefix_bloom_bits_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetMemtable_prefix_bloom_bits() (_swig_ret Uint32_t) {
	var swig_r Uint32_t
	swig_r = (Uint32_t)(SwigcptrUint32_t(C._wrap_GetOptions_Memtable_prefix_bloom_bits_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base))))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetMemtable_prefix_bloom_probes(arg1 Uint32_t) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_SetOptions_Memtable_prefix_bloom_probes_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetMemtable_prefix_bloom_probes() (_swig_ret Uint32_t) {
	var swig_r Uint32_t
	swig_r = (Uint32_t)(SwigcptrUint32_t(C._wrap_GetOptions_Memtable_prefix_bloom_probes_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base))))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetMemtable_prefix_bloom_huge_page_tlb_size(arg1 int64) {
	_swig_i_0 := arg1
	C._wrap_SetOptions_Memtable_prefix_bloom_huge_page_tlb_size_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C.swig_type_84(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetMemtable_prefix_bloom_huge_page_tlb_size() (_swig_ret int64) {
	var swig_r int64
	swig_r = (int64)(C._wrap_GetOptions_Memtable_prefix_bloom_huge_page_tlb_size_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetBloom_locality(arg1 Uint32_t) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_SetOptions_Bloom_locality_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetBloom_locality() (_swig_ret Uint32_t) {
	var swig_r Uint32_t
	swig_r = (Uint32_t)(SwigcptrUint32_t(C._wrap_GetOptions_Bloom_locality_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base))))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetMax_successive_merges(arg1 int64) {
	_swig_i_0 := arg1
	C._wrap_SetOptions_Max_successive_merges_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C.swig_type_86(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetMax_successive_merges() (_swig_ret int64) {
	var swig_r int64
	swig_r = (int64)(C._wrap_GetOptions_Max_successive_merges_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetMin_partial_merge_operands(arg1 Uint32_t) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_SetOptions_Min_partial_merge_operands_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetMin_partial_merge_operands() (_swig_ret Uint32_t) {
	var swig_r Uint32_t
	swig_r = (Uint32_t)(SwigcptrUint32_t(C._wrap_GetOptions_Min_partial_merge_operands_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base))))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetOptimize_filters_for_hits(arg1 bool) {
	_swig_i_0 := arg1
	C._wrap_SetOptions_Optimize_filters_for_hits_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C._Bool(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetOptimize_filters_for_hits() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_GetOptions_Optimize_filters_for_hits_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetParanoid_file_checks(arg1 bool) {
	_swig_i_0 := arg1
	C._wrap_SetOptions_Paranoid_file_checks_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C._Bool(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetParanoid_file_checks() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_GetOptions_Paranoid_file_checks_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrOptions) SetCompaction_measure_io_stats(arg1 bool) {
	_swig_i_0 := arg1
	C._wrap_SetOptions_Compaction_measure_io_stats_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base), C._Bool(_swig_i_0))
}

func (_swig_base SwigcptrOptions) GetCompaction_measure_io_stats() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_GetOptions_Compaction_measure_io_stats_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_base)))
	return swig_r
}

func (p SwigcptrOptions) SwigIsDBOptions() {
}

func (p SwigcptrOptions) SwigGetDBOptions() DBOptions {
	return SwigcptrDBOptions(p.Swigcptr())
}

func (arg1 SwigcptrOptions) SwigGetColumnFamilyOptions() (_swig_ret ColumnFamilyOptions) {
	var swig_r ColumnFamilyOptions
	_swig_i_0 := arg1
	swig_r = (ColumnFamilyOptions)(SwigcptrColumnFamilyOptions(C._wrap_Options_SwigGetColumnFamilyOptions_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))))
	return swig_r
}

type Options interface {
	Swigcptr() uintptr
	SwigIsOptions()
	Dump(arg2 Rocksdb_Logger)
	DumpCFOptions(arg2 Rocksdb_Logger)
	PrepareForBulkLoad() (_swig_ret Options)
	IncreaseParallelism(a ...interface{}) DBOptions
	SetCreate_if_missing(arg1 bool)
	GetCreate_if_missing() (_swig_ret bool)
	SetCreate_missing_column_families(arg1 bool)
	GetCreate_missing_column_families() (_swig_ret bool)
	SetError_if_exists(arg1 bool)
	GetError_if_exists() (_swig_ret bool)
	SetParanoid_checks(arg1 bool)
	GetParanoid_checks() (_swig_ret bool)
	SetEnv(arg1 Rocksdb_Env)
	GetEnv() (_swig_ret Rocksdb_Env)
	SetRate_limiter(arg1 Std_shared_ptr_Sl_rocksdb_RateLimiter_Sg_)
	GetRate_limiter() (_swig_ret Std_shared_ptr_Sl_rocksdb_RateLimiter_Sg_)
	SetSst_file_manager(arg1 Std_shared_ptr_Sl_rocksdb_SstFileManager_Sg_)
	GetSst_file_manager() (_swig_ret Std_shared_ptr_Sl_rocksdb_SstFileManager_Sg_)
	SetInfo_log(arg1 Std_shared_ptr_Sl_rocksdb_Logger_Sg_)
	GetInfo_log() (_swig_ret Std_shared_ptr_Sl_rocksdb_Logger_Sg_)
	SetInfo_log_level(arg1 RocksdbInfoLogLevel)
	GetInfo_log_level() (_swig_ret RocksdbInfoLogLevel)
	SetMax_open_files(arg1 int)
	GetMax_open_files() (_swig_ret int)
	SetMax_file_opening_threads(arg1 int)
	GetMax_file_opening_threads() (_swig_ret int)
	SetMax_total_wal_size(arg1 Uint64_t)
	GetMax_total_wal_size() (_swig_ret Uint64_t)
	SetStatistics(arg1 Std_shared_ptr_Sl_rocksdb_Statistics_Sg_)
	GetStatistics() (_swig_ret Std_shared_ptr_Sl_rocksdb_Statistics_Sg_)
	SetDisableDataSync(arg1 bool)
	GetDisableDataSync() (_swig_ret bool)
	SetUse_fsync(arg1 bool)
	GetUse_fsync() (_swig_ret bool)
	SetDb_paths(arg1 Std_vector_Sl_rocksdb_DbPath_Sg_)
	GetDb_paths() (_swig_ret Std_vector_Sl_rocksdb_DbPath_Sg_)
	SetDb_log_dir(arg1 string)
	GetDb_log_dir() (_swig_ret string)
	SetWal_dir(arg1 string)
	GetWal_dir() (_swig_ret string)
	SetDelete_obsolete_files_period_micros(arg1 Uint64_t)
	GetDelete_obsolete_files_period_micros() (_swig_ret Uint64_t)
	SetBase_background_compactions(arg1 int)
	GetBase_background_compactions() (_swig_ret int)
	SetMax_background_compactions(arg1 int)
	GetMax_background_compactions() (_swig_ret int)
	SetMax_subcompactions(arg1 Uint32_t)
	GetMax_subcompactions() (_swig_ret Uint32_t)
	SetMax_background_flushes(arg1 int)
	GetMax_background_flushes() (_swig_ret int)
	SetMax_log_file_size(arg1 int64)
	GetMax_log_file_size() (_swig_ret int64)
	SetLog_file_time_to_roll(arg1 int64)
	GetLog_file_time_to_roll() (_swig_ret int64)
	SetKeep_log_file_num(arg1 int64)
	GetKeep_log_file_num() (_swig_ret int64)
	SetRecycle_log_file_num(arg1 int64)
	GetRecycle_log_file_num() (_swig_ret int64)
	SetMax_manifest_file_size(arg1 Uint64_t)
	GetMax_manifest_file_size() (_swig_ret Uint64_t)
	SetTable_cache_numshardbits(arg1 int)
	GetTable_cache_numshardbits() (_swig_ret int)
	SetWAL_ttl_seconds(arg1 Uint64_t)
	GetWAL_ttl_seconds() (_swig_ret Uint64_t)
	SetWAL_size_limit_MB(arg1 Uint64_t)
	GetWAL_size_limit_MB() (_swig_ret Uint64_t)
	SetManifest_preallocation_size(arg1 int64)
	GetManifest_preallocation_size() (_swig_ret int64)
	SetAllow_os_buffer(arg1 bool)
	GetAllow_os_buffer() (_swig_ret bool)
	SetAllow_mmap_reads(arg1 bool)
	GetAllow_mmap_reads() (_swig_ret bool)
	SetAllow_mmap_writes(arg1 bool)
	GetAllow_mmap_writes() (_swig_ret bool)
	SetAllow_fallocate(arg1 bool)
	GetAllow_fallocate() (_swig_ret bool)
	SetIs_fd_close_on_exec(arg1 bool)
	GetIs_fd_close_on_exec() (_swig_ret bool)
	SetSkip_log_error_on_recovery(arg1 bool)
	GetSkip_log_error_on_recovery() (_swig_ret bool)
	SetStats_dump_period_sec(arg1 uint)
	GetStats_dump_period_sec() (_swig_ret uint)
	SetAdvise_random_on_open(arg1 bool)
	GetAdvise_random_on_open() (_swig_ret bool)
	SetDb_write_buffer_size(arg1 int64)
	GetDb_write_buffer_size() (_swig_ret int64)
	SetAccess_hint_on_compaction_start(arg1 RocksdbDBOptionsAccessHint)
	GetAccess_hint_on_compaction_start() (_swig_ret RocksdbDBOptionsAccessHint)
	SetNew_table_reader_for_compaction_inputs(arg1 bool)
	GetNew_table_reader_for_compaction_inputs() (_swig_ret bool)
	SetCompaction_readahead_size(arg1 int64)
	GetCompaction_readahead_size() (_swig_ret int64)
	SetRandom_access_max_buffer_size(arg1 int64)
	GetRandom_access_max_buffer_size() (_swig_ret int64)
	SetWritable_file_max_buffer_size(arg1 int64)
	GetWritable_file_max_buffer_size() (_swig_ret int64)
	SetUse_adaptive_mutex(arg1 bool)
	GetUse_adaptive_mutex() (_swig_ret bool)
	SetBytes_per_sync(arg1 Uint64_t)
	GetBytes_per_sync() (_swig_ret Uint64_t)
	SetWal_bytes_per_sync(arg1 Uint64_t)
	GetWal_bytes_per_sync() (_swig_ret Uint64_t)
	SetListeners(arg1 Std_vector_Sl_std_shared_ptr_Sl_EventListener_Sg__Sg_)
	GetListeners() (_swig_ret Std_vector_Sl_std_shared_ptr_Sl_EventListener_Sg__Sg_)
	SetEnable_thread_tracking(arg1 bool)
	GetEnable_thread_tracking() (_swig_ret bool)
	SetDelayed_write_rate(arg1 Uint64_t)
	GetDelayed_write_rate() (_swig_ret Uint64_t)
	SetAllow_concurrent_memtable_write(arg1 bool)
	GetAllow_concurrent_memtable_write() (_swig_ret bool)
	SetEnable_write_thread_adaptive_yield(arg1 bool)
	GetEnable_write_thread_adaptive_yield() (_swig_ret bool)
	SetWrite_thread_max_yield_usec(arg1 Uint64_t)
	GetWrite_thread_max_yield_usec() (_swig_ret Uint64_t)
	SetWrite_thread_slow_yield_usec(arg1 Uint64_t)
	GetWrite_thread_slow_yield_usec() (_swig_ret Uint64_t)
	SetSkip_stats_update_on_db_open(arg1 bool)
	GetSkip_stats_update_on_db_open() (_swig_ret bool)
	SetWal_recovery_mode(arg1 RocksdbWALRecoveryMode)
	GetWal_recovery_mode() (_swig_ret RocksdbWALRecoveryMode)
	SetRow_cache(arg1 Std_shared_ptr_Sl_rocksdb_Cache_Sg_)
	GetRow_cache() (_swig_ret Std_shared_ptr_Sl_rocksdb_Cache_Sg_)
	SetWal_filter(arg1 Rocksdb_WalFilter)
	GetWal_filter() (_swig_ret Rocksdb_WalFilter)
	SetFail_if_options_file_error(arg1 bool)
	GetFail_if_options_file_error() (_swig_ret bool)
	OptimizeForPointLookup(arg1 Uint64_t) (_swig_ret ColumnFamilyOptions)
	OptimizeLevelStyleCompaction(a ...interface{}) ColumnFamilyOptions
	OptimizeUniversalStyleCompaction(a ...interface{}) ColumnFamilyOptions
	SetComparator(arg1 Rocksdb_Comparator)
	GetComparator() (_swig_ret Rocksdb_Comparator)
	SetMerge_operator(arg1 Std_shared_ptr_Sl_rocksdb_MergeOperator_Sg_)
	GetMerge_operator() (_swig_ret Std_shared_ptr_Sl_rocksdb_MergeOperator_Sg_)
	SetCompaction_filter(arg1 Rocksdb_CompactionFilter)
	GetCompaction_filter() (_swig_ret Rocksdb_CompactionFilter)
	SetCompaction_filter_factory(arg1 Std_shared_ptr_Sl_rocksdb_CompactionFilterFactory_Sg_)
	GetCompaction_filter_factory() (_swig_ret Std_shared_ptr_Sl_rocksdb_CompactionFilterFactory_Sg_)
	SetWrite_buffer_size(arg1 int64)
	GetWrite_buffer_size() (_swig_ret int64)
	SetMax_write_buffer_number(arg1 int)
	GetMax_write_buffer_number() (_swig_ret int)
	SetMin_write_buffer_number_to_merge(arg1 int)
	GetMin_write_buffer_number_to_merge() (_swig_ret int)
	SetMax_write_buffer_number_to_maintain(arg1 int)
	GetMax_write_buffer_number_to_maintain() (_swig_ret int)
	SetCompression(arg1 RocksdbCompressionType)
	GetCompression() (_swig_ret RocksdbCompressionType)
	SetCompression_per_level(arg1 Std_vector_Sl_enum_SS_rocksdb_CompressionType_Sg_)
	GetCompression_per_level() (_swig_ret Std_vector_Sl_enum_SS_rocksdb_CompressionType_Sg_)
	SetCompression_opts(arg1 CompressionOptions)
	GetCompression_opts() (_swig_ret CompressionOptions)
	SetPrefix_extractor(arg1 Std_shared_ptr_Sl_rocksdb_SliceTransform_SS_const_Sg_)
	GetPrefix_extractor() (_swig_ret Std_shared_ptr_Sl_rocksdb_SliceTransform_SS_const_Sg_)
	SetNum_levels(arg1 int)
	GetNum_levels() (_swig_ret int)
	SetLevel0_file_num_compaction_trigger(arg1 int)
	GetLevel0_file_num_compaction_trigger() (_swig_ret int)
	SetLevel0_slowdown_writes_trigger(arg1 int)
	GetLevel0_slowdown_writes_trigger() (_swig_ret int)
	SetLevel0_stop_writes_trigger(arg1 int)
	GetLevel0_stop_writes_trigger() (_swig_ret int)
	SetMax_mem_compaction_level(arg1 int)
	GetMax_mem_compaction_level() (_swig_ret int)
	SetTarget_file_size_base(arg1 Uint64_t)
	GetTarget_file_size_base() (_swig_ret Uint64_t)
	SetTarget_file_size_multiplier(arg1 int)
	GetTarget_file_size_multiplier() (_swig_ret int)
	SetMax_bytes_for_level_base(arg1 Uint64_t)
	GetMax_bytes_for_level_base() (_swig_ret Uint64_t)
	SetLevel_compaction_dynamic_level_bytes(arg1 bool)
	GetLevel_compaction_dynamic_level_bytes() (_swig_ret bool)
	SetMax_bytes_for_level_multiplier(arg1 int)
	GetMax_bytes_for_level_multiplier() (_swig_ret int)
	SetMax_bytes_for_level_multiplier_additional(arg1 Std_vector_Sl_int_Sg_)
	GetMax_bytes_for_level_multiplier_additional() (_swig_ret Std_vector_Sl_int_Sg_)
	SetExpanded_compaction_factor(arg1 int)
	GetExpanded_compaction_factor() (_swig_ret int)
	SetSource_compaction_factor(arg1 int)
	GetSource_compaction_factor() (_swig_ret int)
	SetMax_grandparent_overlap_factor(arg1 int)
	GetMax_grandparent_overlap_factor() (_swig_ret int)
	SetSoft_rate_limit(arg1 float64)
	GetSoft_rate_limit() (_swig_ret float64)
	SetHard_rate_limit(arg1 float64)
	GetHard_rate_limit() (_swig_ret float64)
	SetSoft_pending_compaction_bytes_limit(arg1 Uint64_t)
	GetSoft_pending_compaction_bytes_limit() (_swig_ret Uint64_t)
	SetHard_pending_compaction_bytes_limit(arg1 Uint64_t)
	GetHard_pending_compaction_bytes_limit() (_swig_ret Uint64_t)
	SetRate_limit_delay_max_milliseconds(arg1 uint)
	GetRate_limit_delay_max_milliseconds() (_swig_ret uint)
	SetArena_block_size(arg1 int64)
	GetArena_block_size() (_swig_ret int64)
	SetDisable_auto_compactions(arg1 bool)
	GetDisable_auto_compactions() (_swig_ret bool)
	SetPurge_redundant_kvs_while_flush(arg1 bool)
	GetPurge_redundant_kvs_while_flush() (_swig_ret bool)
	SetCompaction_style(arg1 RocksdbCompactionStyle)
	GetCompaction_style() (_swig_ret RocksdbCompactionStyle)
	SetCompaction_pri(arg1 RocksdbCompactionPri)
	GetCompaction_pri() (_swig_ret RocksdbCompactionPri)
	SetVerify_checksums_in_compaction(arg1 bool)
	GetVerify_checksums_in_compaction() (_swig_ret bool)
	SetCompaction_options_universal(arg1 CompactionOptionsUniversal)
	GetCompaction_options_universal() (_swig_ret CompactionOptionsUniversal)
	SetCompaction_options_fifo(arg1 CompactionOptionsFIFO)
	GetCompaction_options_fifo() (_swig_ret CompactionOptionsFIFO)
	SetFilter_deletes(arg1 bool)
	GetFilter_deletes() (_swig_ret bool)
	SetMax_sequential_skip_in_iterations(arg1 Uint64_t)
	GetMax_sequential_skip_in_iterations() (_swig_ret Uint64_t)
	SetMemtable_factory(arg1 Std_shared_ptr_Sl_rocksdb_MemTableRepFactory_Sg_)
	GetMemtable_factory() (_swig_ret Std_shared_ptr_Sl_rocksdb_MemTableRepFactory_Sg_)
	SetTable_factory(arg1 Std_shared_ptr_Sl_rocksdb_TableFactory_Sg_)
	GetTable_factory() (_swig_ret Std_shared_ptr_Sl_rocksdb_TableFactory_Sg_)
	SetTable_properties_collector_factories(arg1 Std_vector_Sl_std_shared_ptr_Sl_rocksdb_TablePropertiesCollectorFactory_Sg__Sg_)
	GetTable_properties_collector_factories() (_swig_ret Std_vector_Sl_std_shared_ptr_Sl_rocksdb_TablePropertiesCollectorFactory_Sg__Sg_)
	SetInplace_update_support(arg1 bool)
	GetInplace_update_support() (_swig_ret bool)
	SetInplace_update_num_locks(arg1 int64)
	GetInplace_update_num_locks() (_swig_ret int64)
	SetInplace_callback(arg1 _swig_fnptr)
	GetInplace_callback() (_swig_ret _swig_fnptr)
	SetMemtable_prefix_bloom_bits(arg1 Uint32_t)
	GetMemtable_prefix_bloom_bits() (_swig_ret Uint32_t)
	SetMemtable_prefix_bloom_probes(arg1 Uint32_t)
	GetMemtable_prefix_bloom_probes() (_swig_ret Uint32_t)
	SetMemtable_prefix_bloom_huge_page_tlb_size(arg1 int64)
	GetMemtable_prefix_bloom_huge_page_tlb_size() (_swig_ret int64)
	SetBloom_locality(arg1 Uint32_t)
	GetBloom_locality() (_swig_ret Uint32_t)
	SetMax_successive_merges(arg1 int64)
	GetMax_successive_merges() (_swig_ret int64)
	SetMin_partial_merge_operands(arg1 Uint32_t)
	GetMin_partial_merge_operands() (_swig_ret Uint32_t)
	SetOptimize_filters_for_hits(arg1 bool)
	GetOptimize_filters_for_hits() (_swig_ret bool)
	SetParanoid_file_checks(arg1 bool)
	GetParanoid_file_checks() (_swig_ret bool)
	SetCompaction_measure_io_stats(arg1 bool)
	GetCompaction_measure_io_stats() (_swig_ret bool)
	SwigIsDBOptions()
	SwigGetDBOptions() DBOptions
	SwigGetColumnFamilyOptions() (_swig_ret ColumnFamilyOptions)
}

type RocksdbReadTier int
func _swig_getkReadAllTier() (_swig_ret RocksdbReadTier) {
	var swig_r RocksdbReadTier
	swig_r = (RocksdbReadTier)(C._wrap_kReadAllTier_rocksdbswig_576e316b0df25a62())
	return swig_r
}

var KReadAllTier RocksdbReadTier = _swig_getkReadAllTier()
func _swig_getkBlockCacheTier() (_swig_ret RocksdbReadTier) {
	var swig_r RocksdbReadTier
	swig_r = (RocksdbReadTier)(C._wrap_kBlockCacheTier_rocksdbswig_576e316b0df25a62())
	return swig_r
}

var KBlockCacheTier RocksdbReadTier = _swig_getkBlockCacheTier()
func _swig_getkPersistedTier() (_swig_ret RocksdbReadTier) {
	var swig_r RocksdbReadTier
	swig_r = (RocksdbReadTier)(C._wrap_kPersistedTier_rocksdbswig_576e316b0df25a62())
	return swig_r
}

var KPersistedTier RocksdbReadTier = _swig_getkPersistedTier()
type SwigcptrReadOptions uintptr

func (p SwigcptrReadOptions) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrReadOptions) SwigIsReadOptions() {
}

func (arg1 SwigcptrReadOptions) SetVerify_checksums(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ReadOptions_verify_checksums_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrReadOptions) GetVerify_checksums() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_ReadOptions_verify_checksums_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrReadOptions) SetFill_cache(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ReadOptions_fill_cache_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrReadOptions) GetFill_cache() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_ReadOptions_fill_cache_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrReadOptions) SetSnapshot(arg2 Rocksdb_Snapshot) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_ReadOptions_snapshot_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrReadOptions) GetSnapshot() (_swig_ret Rocksdb_Snapshot) {
	var swig_r Rocksdb_Snapshot
	_swig_i_0 := arg1
	swig_r = (Rocksdb_Snapshot)(SwigcptrRocksdb_Snapshot(C._wrap_ReadOptions_snapshot_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrReadOptions) SetIterate_upper_bound(arg2 Slice) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_ReadOptions_iterate_upper_bound_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrReadOptions) GetIterate_upper_bound() (_swig_ret Slice) {
	var swig_r Slice
	_swig_i_0 := arg1
	swig_r = (Slice)(SwigcptrSlice(C._wrap_ReadOptions_iterate_upper_bound_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrReadOptions) SetRead_tier(arg2 RocksdbReadTier) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ReadOptions_read_tier_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrReadOptions) GetRead_tier() (_swig_ret RocksdbReadTier) {
	var swig_r RocksdbReadTier
	_swig_i_0 := arg1
	swig_r = (RocksdbReadTier)(C._wrap_ReadOptions_read_tier_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrReadOptions) SetTailing(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ReadOptions_tailing_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrReadOptions) GetTailing() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_ReadOptions_tailing_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrReadOptions) SetManaged(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ReadOptions_managed_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrReadOptions) GetManaged() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_ReadOptions_managed_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrReadOptions) SetTotal_order_seek(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ReadOptions_total_order_seek_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrReadOptions) GetTotal_order_seek() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_ReadOptions_total_order_seek_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrReadOptions) SetPrefix_same_as_start(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ReadOptions_prefix_same_as_start_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrReadOptions) GetPrefix_same_as_start() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_ReadOptions_prefix_same_as_start_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrReadOptions) SetPin_data(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ReadOptions_pin_data_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrReadOptions) GetPin_data() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_ReadOptions_pin_data_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func NewReadOptions__SWIG_0() (_swig_ret ReadOptions) {
	var swig_r ReadOptions
	swig_r = (ReadOptions)(SwigcptrReadOptions(C._wrap_new_ReadOptions__SWIG_0_rocksdbswig_576e316b0df25a62()))
	return swig_r
}

func NewReadOptions__SWIG_1(arg1 bool, arg2 bool) (_swig_ret ReadOptions) {
	var swig_r ReadOptions
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (ReadOptions)(SwigcptrReadOptions(C._wrap_new_ReadOptions__SWIG_1_rocksdbswig_576e316b0df25a62(C._Bool(_swig_i_0), C._Bool(_swig_i_1))))
	return swig_r
}

func NewReadOptions(a ...interface{}) ReadOptions {
	argc := len(a)
	if argc == 0 {
		return NewReadOptions__SWIG_0()
	}
	if argc == 2 {
		return NewReadOptions__SWIG_1(a[0].(bool), a[1].(bool))
	}
	panic("No match for overloaded function call")
}

func DeleteReadOptions(arg1 ReadOptions) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_ReadOptions_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))
}

type ReadOptions interface {
	Swigcptr() uintptr
	SwigIsReadOptions()
	SetVerify_checksums(arg2 bool)
	GetVerify_checksums() (_swig_ret bool)
	SetFill_cache(arg2 bool)
	GetFill_cache() (_swig_ret bool)
	SetSnapshot(arg2 Rocksdb_Snapshot)
	GetSnapshot() (_swig_ret Rocksdb_Snapshot)
	SetIterate_upper_bound(arg2 Slice)
	GetIterate_upper_bound() (_swig_ret Slice)
	SetRead_tier(arg2 RocksdbReadTier)
	GetRead_tier() (_swig_ret RocksdbReadTier)
	SetTailing(arg2 bool)
	GetTailing() (_swig_ret bool)
	SetManaged(arg2 bool)
	GetManaged() (_swig_ret bool)
	SetTotal_order_seek(arg2 bool)
	GetTotal_order_seek() (_swig_ret bool)
	SetPrefix_same_as_start(arg2 bool)
	GetPrefix_same_as_start() (_swig_ret bool)
	SetPin_data(arg2 bool)
	GetPin_data() (_swig_ret bool)
}

type SwigcptrWriteOptions uintptr

func (p SwigcptrWriteOptions) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrWriteOptions) SwigIsWriteOptions() {
}

func (arg1 SwigcptrWriteOptions) SetSync(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_WriteOptions_sync_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrWriteOptions) GetSync() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_WriteOptions_sync_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrWriteOptions) SetDisableWAL(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_WriteOptions_disableWAL_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrWriteOptions) GetDisableWAL() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_WriteOptions_disableWAL_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrWriteOptions) SetTimeout_hint_us(arg2 Uint64_t) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_WriteOptions_timeout_hint_us_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrWriteOptions) GetTimeout_hint_us() (_swig_ret Uint64_t) {
	var swig_r Uint64_t
	_swig_i_0 := arg1
	swig_r = (Uint64_t)(SwigcptrUint64_t(C._wrap_WriteOptions_timeout_hint_us_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrWriteOptions) SetIgnore_missing_column_families(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_WriteOptions_ignore_missing_column_families_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrWriteOptions) GetIgnore_missing_column_families() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_WriteOptions_ignore_missing_column_families_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func NewWriteOptions() (_swig_ret WriteOptions) {
	var swig_r WriteOptions
	swig_r = (WriteOptions)(SwigcptrWriteOptions(C._wrap_new_WriteOptions_rocksdbswig_576e316b0df25a62()))
	return swig_r
}

func DeleteWriteOptions(arg1 WriteOptions) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_WriteOptions_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))
}

type WriteOptions interface {
	Swigcptr() uintptr
	SwigIsWriteOptions()
	SetSync(arg2 bool)
	GetSync() (_swig_ret bool)
	SetDisableWAL(arg2 bool)
	GetDisableWAL() (_swig_ret bool)
	SetTimeout_hint_us(arg2 Uint64_t)
	GetTimeout_hint_us() (_swig_ret Uint64_t)
	SetIgnore_missing_column_families(arg2 bool)
	GetIgnore_missing_column_families() (_swig_ret bool)
}

type SwigcptrFlushOptions uintptr

func (p SwigcptrFlushOptions) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrFlushOptions) SwigIsFlushOptions() {
}

func (arg1 SwigcptrFlushOptions) SetWait(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_FlushOptions_wait_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrFlushOptions) GetWait() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_FlushOptions_wait_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func NewFlushOptions() (_swig_ret FlushOptions) {
	var swig_r FlushOptions
	swig_r = (FlushOptions)(SwigcptrFlushOptions(C._wrap_new_FlushOptions_rocksdbswig_576e316b0df25a62()))
	return swig_r
}

func DeleteFlushOptions(arg1 FlushOptions) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_FlushOptions_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))
}

type FlushOptions interface {
	Swigcptr() uintptr
	SwigIsFlushOptions()
	SetWait(arg2 bool)
	GetWait() (_swig_ret bool)
}

func GetOptions__SWIG_0(arg1 int64, arg2 int, arg3 int, arg4 Uint64_t) (_swig_ret Options) {
	var swig_r Options
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4.Swigcptr()
	swig_r = (Options)(SwigcptrOptions(C._wrap_GetOptions__SWIG_0_rocksdbswig_576e316b0df25a62(C.swig_type_88(_swig_i_0), C.swig_intgo(_swig_i_1), C.swig_intgo(_swig_i_2), C.uintptr_t(_swig_i_3))))
	return swig_r
}

func GetOptions__SWIG_1(arg1 int64, arg2 int, arg3 int) (_swig_ret Options) {
	var swig_r Options
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (Options)(SwigcptrOptions(C._wrap_GetOptions__SWIG_1_rocksdbswig_576e316b0df25a62(C.swig_type_89(_swig_i_0), C.swig_intgo(_swig_i_1), C.swig_intgo(_swig_i_2))))
	return swig_r
}

func GetOptions__SWIG_2(arg1 int64, arg2 int) (_swig_ret Options) {
	var swig_r Options
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (Options)(SwigcptrOptions(C._wrap_GetOptions__SWIG_2_rocksdbswig_576e316b0df25a62(C.swig_type_90(_swig_i_0), C.swig_intgo(_swig_i_1))))
	return swig_r
}

func GetOptions__SWIG_3(arg1 int64) (_swig_ret Options) {
	var swig_r Options
	_swig_i_0 := arg1
	swig_r = (Options)(SwigcptrOptions(C._wrap_GetOptions__SWIG_3_rocksdbswig_576e316b0df25a62(C.swig_type_91(_swig_i_0))))
	return swig_r
}

func GetOptions(a ...interface{}) Options {
	argc := len(a)
	if argc == 1 {
		return GetOptions__SWIG_3(a[0].(int64))
	}
	if argc == 2 {
		return GetOptions__SWIG_2(a[0].(int64), a[1].(int))
	}
	if argc == 3 {
		return GetOptions__SWIG_1(a[0].(int64), a[1].(int), a[2].(int))
	}
	if argc == 4 {
		return GetOptions__SWIG_0(a[0].(int64), a[1].(int), a[2].(int), a[3].(Uint64_t))
	}
	panic("No match for overloaded function call")
}

func CreateLoggerFromOptions(arg1 string, arg2 DBOptions, arg3 Std_shared_ptr_Sl_rocksdb_Logger_Sg_) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	swig_r = (Status)(SwigcptrStatus(C._wrap_CreateLoggerFromOptions_rocksdbswig_576e316b0df25a62(*(*C.swig_type_92)(unsafe.Pointer(&_swig_i_0)), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

type SwigcptrCompactionOptions uintptr

func (p SwigcptrCompactionOptions) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrCompactionOptions) SwigIsCompactionOptions() {
}

func (arg1 SwigcptrCompactionOptions) SetCompression(arg2 RocksdbCompressionType) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_CompactionOptions_compression_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrCompactionOptions) GetCompression() (_swig_ret RocksdbCompressionType) {
	var swig_r RocksdbCompressionType
	_swig_i_0 := arg1
	swig_r = (RocksdbCompressionType)(C._wrap_CompactionOptions_compression_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrCompactionOptions) SetOutput_file_size_limit(arg2 Uint64_t) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_CompactionOptions_output_file_size_limit_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrCompactionOptions) GetOutput_file_size_limit() (_swig_ret Uint64_t) {
	var swig_r Uint64_t
	_swig_i_0 := arg1
	swig_r = (Uint64_t)(SwigcptrUint64_t(C._wrap_CompactionOptions_output_file_size_limit_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewCompactionOptions() (_swig_ret CompactionOptions) {
	var swig_r CompactionOptions
	swig_r = (CompactionOptions)(SwigcptrCompactionOptions(C._wrap_new_CompactionOptions_rocksdbswig_576e316b0df25a62()))
	return swig_r
}

func DeleteCompactionOptions(arg1 CompactionOptions) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_CompactionOptions_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))
}

type CompactionOptions interface {
	Swigcptr() uintptr
	SwigIsCompactionOptions()
	SetCompression(arg2 RocksdbCompressionType)
	GetCompression() (_swig_ret RocksdbCompressionType)
	SetOutput_file_size_limit(arg2 Uint64_t)
	GetOutput_file_size_limit() (_swig_ret Uint64_t)
}

type RocksdbBottommostLevelCompaction int
func _swig_getBottommostLevelCompaction_kSkip() (_swig_ret RocksdbBottommostLevelCompaction) {
	var swig_r RocksdbBottommostLevelCompaction
	swig_r = (RocksdbBottommostLevelCompaction)(C._wrap_BottommostLevelCompaction_kSkip_rocksdbswig_576e316b0df25a62())
	return swig_r
}

var BottommostLevelCompaction_kSkip RocksdbBottommostLevelCompaction = _swig_getBottommostLevelCompaction_kSkip()
func _swig_getBottommostLevelCompaction_kIfHaveCompactionFilter() (_swig_ret RocksdbBottommostLevelCompaction) {
	var swig_r RocksdbBottommostLevelCompaction
	swig_r = (RocksdbBottommostLevelCompaction)(C._wrap_BottommostLevelCompaction_kIfHaveCompactionFilter_rocksdbswig_576e316b0df25a62())
	return swig_r
}

var BottommostLevelCompaction_kIfHaveCompactionFilter RocksdbBottommostLevelCompaction = _swig_getBottommostLevelCompaction_kIfHaveCompactionFilter()
func _swig_getBottommostLevelCompaction_kForce() (_swig_ret RocksdbBottommostLevelCompaction) {
	var swig_r RocksdbBottommostLevelCompaction
	swig_r = (RocksdbBottommostLevelCompaction)(C._wrap_BottommostLevelCompaction_kForce_rocksdbswig_576e316b0df25a62())
	return swig_r
}

var BottommostLevelCompaction_kForce RocksdbBottommostLevelCompaction = _swig_getBottommostLevelCompaction_kForce()
type SwigcptrCompactRangeOptions uintptr

func (p SwigcptrCompactRangeOptions) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrCompactRangeOptions) SwigIsCompactRangeOptions() {
}

func (arg1 SwigcptrCompactRangeOptions) SetExclusive_manual_compaction(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_CompactRangeOptions_exclusive_manual_compaction_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrCompactRangeOptions) GetExclusive_manual_compaction() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_CompactRangeOptions_exclusive_manual_compaction_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrCompactRangeOptions) SetChange_level(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_CompactRangeOptions_change_level_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrCompactRangeOptions) GetChange_level() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_CompactRangeOptions_change_level_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrCompactRangeOptions) SetTarget_level(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_CompactRangeOptions_target_level_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrCompactRangeOptions) GetTarget_level() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_CompactRangeOptions_target_level_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrCompactRangeOptions) SetTarget_path_id(arg2 Uint32_t) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_CompactRangeOptions_target_path_id_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrCompactRangeOptions) GetTarget_path_id() (_swig_ret Uint32_t) {
	var swig_r Uint32_t
	_swig_i_0 := arg1
	swig_r = (Uint32_t)(SwigcptrUint32_t(C._wrap_CompactRangeOptions_target_path_id_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrCompactRangeOptions) SetBottommost_level_compaction(arg2 RocksdbBottommostLevelCompaction) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_CompactRangeOptions_bottommost_level_compaction_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrCompactRangeOptions) GetBottommost_level_compaction() (_swig_ret RocksdbBottommostLevelCompaction) {
	var swig_r RocksdbBottommostLevelCompaction
	_swig_i_0 := arg1
	swig_r = (RocksdbBottommostLevelCompaction)(C._wrap_CompactRangeOptions_bottommost_level_compaction_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func NewCompactRangeOptions() (_swig_ret CompactRangeOptions) {
	var swig_r CompactRangeOptions
	swig_r = (CompactRangeOptions)(SwigcptrCompactRangeOptions(C._wrap_new_CompactRangeOptions_rocksdbswig_576e316b0df25a62()))
	return swig_r
}

func DeleteCompactRangeOptions(arg1 CompactRangeOptions) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_CompactRangeOptions_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))
}

type CompactRangeOptions interface {
	Swigcptr() uintptr
	SwigIsCompactRangeOptions()
	SetExclusive_manual_compaction(arg2 bool)
	GetExclusive_manual_compaction() (_swig_ret bool)
	SetChange_level(arg2 bool)
	GetChange_level() (_swig_ret bool)
	SetTarget_level(arg2 int)
	GetTarget_level() (_swig_ret int)
	SetTarget_path_id(arg2 Uint32_t)
	GetTarget_path_id() (_swig_ret Uint32_t)
	SetBottommost_level_compaction(arg2 RocksdbBottommostLevelCompaction)
	GetBottommost_level_compaction() (_swig_ret RocksdbBottommostLevelCompaction)
}

func GetKDefaultColumnFamilyName() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_kDefaultColumnFamilyName_get_rocksdbswig_576e316b0df25a62()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

type SwigcptrColumnFamilyDescriptor uintptr

func (p SwigcptrColumnFamilyDescriptor) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrColumnFamilyDescriptor) SwigIsColumnFamilyDescriptor() {
}

func (arg1 SwigcptrColumnFamilyDescriptor) SetName(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ColumnFamilyDescriptor_name_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), *(*C.swig_type_94)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrColumnFamilyDescriptor) GetName() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_ColumnFamilyDescriptor_name_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrColumnFamilyDescriptor) SetOptions(arg2 ColumnFamilyOptions) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_ColumnFamilyDescriptor_options_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrColumnFamilyDescriptor) GetOptions() (_swig_ret ColumnFamilyOptions) {
	var swig_r ColumnFamilyOptions
	_swig_i_0 := arg1
	swig_r = (ColumnFamilyOptions)(SwigcptrColumnFamilyOptions(C._wrap_ColumnFamilyDescriptor_options_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewColumnFamilyDescriptor__SWIG_0() (_swig_ret ColumnFamilyDescriptor) {
	var swig_r ColumnFamilyDescriptor
	swig_r = (ColumnFamilyDescriptor)(SwigcptrColumnFamilyDescriptor(C._wrap_new_ColumnFamilyDescriptor__SWIG_0_rocksdbswig_576e316b0df25a62()))
	return swig_r
}

func NewColumnFamilyDescriptor__SWIG_1(arg1 string, arg2 ColumnFamilyOptions) (_swig_ret ColumnFamilyDescriptor) {
	var swig_r ColumnFamilyDescriptor
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (ColumnFamilyDescriptor)(SwigcptrColumnFamilyDescriptor(C._wrap_new_ColumnFamilyDescriptor__SWIG_1_rocksdbswig_576e316b0df25a62(*(*C.swig_type_96)(unsafe.Pointer(&_swig_i_0)), C.uintptr_t(_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func NewColumnFamilyDescriptor(a ...interface{}) ColumnFamilyDescriptor {
	argc := len(a)
	if argc == 0 {
		return NewColumnFamilyDescriptor__SWIG_0()
	}
	if argc == 2 {
		return NewColumnFamilyDescriptor__SWIG_1(a[0].(string), a[1].(ColumnFamilyOptions))
	}
	panic("No match for overloaded function call")
}

func DeleteColumnFamilyDescriptor(arg1 ColumnFamilyDescriptor) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_ColumnFamilyDescriptor_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))
}

type ColumnFamilyDescriptor interface {
	Swigcptr() uintptr
	SwigIsColumnFamilyDescriptor()
	SetName(arg2 string)
	GetName() (_swig_ret string)
	SetOptions(arg2 ColumnFamilyOptions)
	GetOptions() (_swig_ret ColumnFamilyOptions)
}

type SwigcptrColumnFamilyHandle uintptr

func (p SwigcptrColumnFamilyHandle) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrColumnFamilyHandle) SwigIsColumnFamilyHandle() {
}

func DeleteColumnFamilyHandle(arg1 ColumnFamilyHandle) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_ColumnFamilyHandle_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrColumnFamilyHandle) GetName() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_ColumnFamilyHandle_GetName_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrColumnFamilyHandle) GetID() (_swig_ret Uint32_t) {
	var swig_r Uint32_t
	_swig_i_0 := arg1
	swig_r = (Uint32_t)(SwigcptrUint32_t(C._wrap_ColumnFamilyHandle_GetID_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrColumnFamilyHandle) GetDescriptor(arg2 ColumnFamilyDescriptor) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (Status)(SwigcptrStatus(C._wrap_ColumnFamilyHandle_GetDescriptor_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

type ColumnFamilyHandle interface {
	Swigcptr() uintptr
	SwigIsColumnFamilyHandle()
	GetName() (_swig_ret string)
	GetID() (_swig_ret Uint32_t)
	GetDescriptor(arg2 ColumnFamilyDescriptor) (_swig_ret Status)
}

func GetKMajorVersion() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_kMajorVersion_get_rocksdbswig_576e316b0df25a62())
	return swig_r
}

func GetKMinorVersion() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_kMinorVersion_get_rocksdbswig_576e316b0df25a62())
	return swig_r
}

type SwigcptrRange uintptr

func (p SwigcptrRange) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrRange) SwigIsRange() {
}

func (arg1 SwigcptrRange) SetStart(arg2 Slice) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_Range_start_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrRange) GetStart() (_swig_ret Slice) {
	var swig_r Slice
	_swig_i_0 := arg1
	swig_r = (Slice)(SwigcptrSlice(C._wrap_Range_start_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrRange) SetLimit(arg2 Slice) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_Range_limit_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrRange) GetLimit() (_swig_ret Slice) {
	var swig_r Slice
	_swig_i_0 := arg1
	swig_r = (Slice)(SwigcptrSlice(C._wrap_Range_limit_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewRange__SWIG_0() (_swig_ret Range) {
	var swig_r Range
	swig_r = (Range)(SwigcptrRange(C._wrap_new_Range__SWIG_0_rocksdbswig_576e316b0df25a62()))
	return swig_r
}

func NewRange__SWIG_1(arg1 Slice, arg2 Slice) (_swig_ret Range) {
	var swig_r Range
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (Range)(SwigcptrRange(C._wrap_new_Range__SWIG_1_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func NewRange(a ...interface{}) Range {
	argc := len(a)
	if argc == 0 {
		return NewRange__SWIG_0()
	}
	if argc == 2 {
		return NewRange__SWIG_1(a[0].(Slice), a[1].(Slice))
	}
	panic("No match for overloaded function call")
}

func DeleteRange(arg1 Range) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_Range_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))
}

type Range interface {
	Swigcptr() uintptr
	SwigIsRange()
	SetStart(arg2 Slice)
	GetStart() (_swig_ret Slice)
	SetLimit(arg2 Slice)
	GetLimit() (_swig_ret Slice)
}

type SwigcptrDB uintptr

func (p SwigcptrDB) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrDB) SwigIsDB() {
}

func DBOpen__SWIG_0(arg1 Options, arg2 string, arg3 DB) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2
	_swig_i_2 := arg3.Swigcptr()
	swig_r = (Status)(SwigcptrStatus(C._wrap_DB_Open__SWIG_0_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), *(*C.swig_type_98)(unsafe.Pointer(&_swig_i_1)), C.uintptr_t(_swig_i_2))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func DBOpenForReadOnly__SWIG_0(arg1 Options, arg2 string, arg3 DB, arg4 bool) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4
	swig_r = (Status)(SwigcptrStatus(C._wrap_DB_OpenForReadOnly__SWIG_0_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), *(*C.swig_type_99)(unsafe.Pointer(&_swig_i_1)), C.uintptr_t(_swig_i_2), C._Bool(_swig_i_3))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func DBOpenForReadOnly__SWIG_1(arg1 Options, arg2 string, arg3 DB) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2
	_swig_i_2 := arg3.Swigcptr()
	swig_r = (Status)(SwigcptrStatus(C._wrap_DB_OpenForReadOnly__SWIG_1_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), *(*C.swig_type_100)(unsafe.Pointer(&_swig_i_1)), C.uintptr_t(_swig_i_2))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func DBOpenForReadOnly__SWIG_2(arg1 DBOptions, arg2 string, arg3 Std_vector_Sl_rocksdb_ColumnFamilyDescriptor_Sg_, arg4 Std_vector_Sl_rocksdb_ColumnFamilyHandle_Sm__Sg_, arg5 DB, arg6 bool) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	_swig_i_4 := arg5.Swigcptr()
	_swig_i_5 := arg6
	swig_r = (Status)(SwigcptrStatus(C._wrap_DB_OpenForReadOnly__SWIG_2_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), *(*C.swig_type_101)(unsafe.Pointer(&_swig_i_1)), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.uintptr_t(_swig_i_4), C._Bool(_swig_i_5))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func DBOpenForReadOnly__SWIG_3(arg1 DBOptions, arg2 string, arg3 Std_vector_Sl_rocksdb_ColumnFamilyDescriptor_Sg_, arg4 Std_vector_Sl_rocksdb_ColumnFamilyHandle_Sm__Sg_, arg5 DB) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	_swig_i_4 := arg5.Swigcptr()
	swig_r = (Status)(SwigcptrStatus(C._wrap_DB_OpenForReadOnly__SWIG_3_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), *(*C.swig_type_102)(unsafe.Pointer(&_swig_i_1)), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.uintptr_t(_swig_i_4))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func DBOpenForReadOnly(a ...interface{}) Status {
	argc := len(a)
	if argc == 3 {
		return DBOpenForReadOnly__SWIG_1(a[0].(Options), a[1].(string), a[2].(DB))
	}
	if argc == 4 {
		return DBOpenForReadOnly__SWIG_0(a[0].(Options), a[1].(string), a[2].(DB), a[3].(bool))
	}
	if argc == 5 {
		return DBOpenForReadOnly__SWIG_3(a[0].(DBOptions), a[1].(string), a[2].(Std_vector_Sl_rocksdb_ColumnFamilyDescriptor_Sg_), a[3].(Std_vector_Sl_rocksdb_ColumnFamilyHandle_Sm__Sg_), a[4].(DB))
	}
	if argc == 6 {
		return DBOpenForReadOnly__SWIG_2(a[0].(DBOptions), a[1].(string), a[2].(Std_vector_Sl_rocksdb_ColumnFamilyDescriptor_Sg_), a[3].(Std_vector_Sl_rocksdb_ColumnFamilyHandle_Sm__Sg_), a[4].(DB), a[5].(bool))
	}
	panic("No match for overloaded function call")
}

func DBOpen__SWIG_1(arg1 DBOptions, arg2 string, arg3 Std_vector_Sl_rocksdb_ColumnFamilyDescriptor_Sg_, arg4 Std_vector_Sl_rocksdb_ColumnFamilyHandle_Sm__Sg_, arg5 DB) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	_swig_i_4 := arg5.Swigcptr()
	swig_r = (Status)(SwigcptrStatus(C._wrap_DB_Open__SWIG_1_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), *(*C.swig_type_103)(unsafe.Pointer(&_swig_i_1)), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.uintptr_t(_swig_i_4))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func DBOpen(a ...interface{}) Status {
	argc := len(a)
	if argc == 3 {
		return DBOpen__SWIG_0(a[0].(Options), a[1].(string), a[2].(DB))
	}
	if argc == 5 {
		return DBOpen__SWIG_1(a[0].(DBOptions), a[1].(string), a[2].(Std_vector_Sl_rocksdb_ColumnFamilyDescriptor_Sg_), a[3].(Std_vector_Sl_rocksdb_ColumnFamilyHandle_Sm__Sg_), a[4].(DB))
	}
	panic("No match for overloaded function call")
}

func DBListColumnFamilies(arg1 DBOptions, arg2 string, arg3 Std_vector_Sl_std_string_Sg_) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2
	_swig_i_2 := arg3.Swigcptr()
	swig_r = (Status)(SwigcptrStatus(C._wrap_DB_ListColumnFamilies_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), *(*C.swig_type_104)(unsafe.Pointer(&_swig_i_1)), C.uintptr_t(_swig_i_2))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func DeleteDB(arg1 DB) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_DB_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrDB) CreateColumnFamily(arg2 ColumnFamilyOptions, arg3 string, arg4 ColumnFamilyHandle) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4.Swigcptr()
	swig_r = (Status)(SwigcptrStatus(C._wrap_DB_CreateColumnFamily_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), *(*C.swig_type_105)(unsafe.Pointer(&_swig_i_2)), C.uintptr_t(_swig_i_3))))
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func (arg1 SwigcptrDB) DropColumnFamily(arg2 ColumnFamilyHandle) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (Status)(SwigcptrStatus(C._wrap_DB_DropColumnFamily_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrDB) Put__SWIG_0(arg2 WriteOptions, arg3 ColumnFamilyHandle, arg4 Slice, arg5 Slice) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	_swig_i_4 := arg5.Swigcptr()
	swig_r = (Status)(SwigcptrStatus(C._wrap_DB_Put__SWIG_0_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.uintptr_t(_swig_i_4))))
	return swig_r
}

func (arg1 SwigcptrDB) Put__SWIG_1(arg2 WriteOptions, arg3 Slice, arg4 Slice) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	swig_r = (Status)(SwigcptrStatus(C._wrap_DB_Put__SWIG_1_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3))))
	return swig_r
}

func (p SwigcptrDB) Put(a ...interface{}) Status {
	argc := len(a)
	if argc == 3 {
		return p.Put__SWIG_1(a[0].(WriteOptions), a[1].(Slice), a[2].(Slice))
	}
	if argc == 4 {
		return p.Put__SWIG_0(a[0].(WriteOptions), a[1].(ColumnFamilyHandle), a[2].(Slice), a[3].(Slice))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrDB) Delete__SWIG_0(arg2 WriteOptions, arg3 ColumnFamilyHandle, arg4 Slice) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	swig_r = (Status)(SwigcptrStatus(C._wrap_DB_Delete__SWIG_0_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3))))
	return swig_r
}

func (arg1 SwigcptrDB) Delete__SWIG_1(arg2 WriteOptions, arg3 Slice) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	swig_r = (Status)(SwigcptrStatus(C._wrap_DB_Delete__SWIG_1_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

func (p SwigcptrDB) Delete(a ...interface{}) Status {
	argc := len(a)
	if argc == 2 {
		return p.Delete__SWIG_1(a[0].(WriteOptions), a[1].(Slice))
	}
	if argc == 3 {
		return p.Delete__SWIG_0(a[0].(WriteOptions), a[1].(ColumnFamilyHandle), a[2].(Slice))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrDB) SingleDelete__SWIG_0(arg2 WriteOptions, arg3 ColumnFamilyHandle, arg4 Slice) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	swig_r = (Status)(SwigcptrStatus(C._wrap_DB_SingleDelete__SWIG_0_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3))))
	return swig_r
}

func (arg1 SwigcptrDB) SingleDelete__SWIG_1(arg2 WriteOptions, arg3 Slice) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	swig_r = (Status)(SwigcptrStatus(C._wrap_DB_SingleDelete__SWIG_1_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

func (p SwigcptrDB) SingleDelete(a ...interface{}) Status {
	argc := len(a)
	if argc == 2 {
		return p.SingleDelete__SWIG_1(a[0].(WriteOptions), a[1].(Slice))
	}
	if argc == 3 {
		return p.SingleDelete__SWIG_0(a[0].(WriteOptions), a[1].(ColumnFamilyHandle), a[2].(Slice))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrDB) Merge__SWIG_0(arg2 WriteOptions, arg3 ColumnFamilyHandle, arg4 Slice, arg5 Slice) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	_swig_i_4 := arg5.Swigcptr()
	swig_r = (Status)(SwigcptrStatus(C._wrap_DB_Merge__SWIG_0_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.uintptr_t(_swig_i_4))))
	return swig_r
}

func (arg1 SwigcptrDB) Merge__SWIG_1(arg2 WriteOptions, arg3 Slice, arg4 Slice) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	swig_r = (Status)(SwigcptrStatus(C._wrap_DB_Merge__SWIG_1_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3))))
	return swig_r
}

func (p SwigcptrDB) Merge(a ...interface{}) Status {
	argc := len(a)
	if argc == 3 {
		return p.Merge__SWIG_1(a[0].(WriteOptions), a[1].(Slice), a[2].(Slice))
	}
	if argc == 4 {
		return p.Merge__SWIG_0(a[0].(WriteOptions), a[1].(ColumnFamilyHandle), a[2].(Slice), a[3].(Slice))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrDB) Write(arg2 WriteOptions, arg3 Rocksdb_WriteBatch) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	swig_r = (Status)(SwigcptrStatus(C._wrap_DB_Write_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrDB) Get__SWIG_0(arg2 ReadOptions, arg3 ColumnFamilyHandle, arg4 Slice, arg5 *string) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	_swig_i_4 := arg5
	swig_r = (Status)(SwigcptrStatus(C._wrap_DB_Get__SWIG_0_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.swig_voidp(_swig_i_4))))
	return swig_r
}

func (arg1 SwigcptrDB) Get__SWIG_1(arg2 ReadOptions, arg3 Slice, arg4 *string) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4
	swig_r = (Status)(SwigcptrStatus(C._wrap_DB_Get__SWIG_1_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.swig_voidp(_swig_i_3))))
	return swig_r
}

func (p SwigcptrDB) Get(a ...interface{}) Status {
	argc := len(a)
	if argc == 3 {
		return p.Get__SWIG_1(a[0].(ReadOptions), a[1].(Slice), a[2].(*string))
	}
	if argc == 4 {
		return p.Get__SWIG_0(a[0].(ReadOptions), a[1].(ColumnFamilyHandle), a[2].(Slice), a[3].(*string))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrDB) MultiGet__SWIG_0(arg2 ReadOptions, arg3 Std_vector_Sl_rocksdb_ColumnFamilyHandle_Sm__Sg_, arg4 Std_vector_Sl_rocksdb_Slice_Sg_, arg5 Std_vector_Sl_std_string_Sg_) (_swig_ret Std_vector_Sl_rocksdb_Status_Sg_) {
	var swig_r Std_vector_Sl_rocksdb_Status_Sg_
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	_swig_i_4 := arg5.Swigcptr()
	swig_r = (Std_vector_Sl_rocksdb_Status_Sg_)(SwigcptrStd_vector_Sl_rocksdb_Status_Sg_(C._wrap_DB_MultiGet__SWIG_0_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.uintptr_t(_swig_i_4))))
	return swig_r
}

func (arg1 SwigcptrDB) MultiGet__SWIG_1(arg2 ReadOptions, arg3 Std_vector_Sl_rocksdb_Slice_Sg_, arg4 Std_vector_Sl_std_string_Sg_) (_swig_ret Std_vector_Sl_rocksdb_Status_Sg_) {
	var swig_r Std_vector_Sl_rocksdb_Status_Sg_
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	swig_r = (Std_vector_Sl_rocksdb_Status_Sg_)(SwigcptrStd_vector_Sl_rocksdb_Status_Sg_(C._wrap_DB_MultiGet__SWIG_1_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3))))
	return swig_r
}

func (p SwigcptrDB) MultiGet(a ...interface{}) Std_vector_Sl_rocksdb_Status_Sg_ {
	argc := len(a)
	if argc == 3 {
		return p.MultiGet__SWIG_1(a[0].(ReadOptions), a[1].(Std_vector_Sl_rocksdb_Slice_Sg_), a[2].(Std_vector_Sl_std_string_Sg_))
	}
	if argc == 4 {
		return p.MultiGet__SWIG_0(a[0].(ReadOptions), a[1].(Std_vector_Sl_rocksdb_ColumnFamilyHandle_Sm__Sg_), a[2].(Std_vector_Sl_rocksdb_Slice_Sg_), a[3].(Std_vector_Sl_std_string_Sg_))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrDB) KeyMayExist__SWIG_0(arg2 ReadOptions, arg3 ColumnFamilyHandle, arg4 Slice, arg5 *string, arg6 *bool) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	swig_r = (bool)(C._wrap_DB_KeyMayExist__SWIG_0_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.swig_voidp(_swig_i_4), C.swig_voidp(_swig_i_5)))
	return swig_r
}

func (arg1 SwigcptrDB) KeyMayExist__SWIG_1(arg2 ReadOptions, arg3 ColumnFamilyHandle, arg4 Slice, arg5 *string) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	_swig_i_4 := arg5
	swig_r = (bool)(C._wrap_DB_KeyMayExist__SWIG_1_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.swig_voidp(_swig_i_4)))
	return swig_r
}

func (arg1 SwigcptrDB) KeyMayExist__SWIG_2(arg2 ReadOptions, arg3 Slice, arg4 *string, arg5 *bool) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (bool)(C._wrap_DB_KeyMayExist__SWIG_2_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.swig_voidp(_swig_i_3), C.swig_voidp(_swig_i_4)))
	return swig_r
}

func (arg1 SwigcptrDB) KeyMayExist__SWIG_3(arg2 ReadOptions, arg3 Slice, arg4 *string) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4
	swig_r = (bool)(C._wrap_DB_KeyMayExist__SWIG_3_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.swig_voidp(_swig_i_3)))
	return swig_r
}

func (p SwigcptrDB) KeyMayExist(a ...interface{}) bool {
	argc := len(a)
	if argc == 3 {
		return p.KeyMayExist__SWIG_3(a[0].(ReadOptions), a[1].(Slice), a[2].(*string))
	}
	if argc == 4 {
		if _, ok := a[1].(SwigcptrSlice); !ok {
			goto check_2
		}
		if _, ok := a[2].(*string); !ok {
			goto check_2
		}
		if _, ok := a[3].(*bool); !ok {
			goto check_2
		}
		return p.KeyMayExist__SWIG_2(a[0].(ReadOptions), a[1].(Slice), a[2].(*string), a[3].(*bool))
	}
check_2:
	if argc == 4 {
		return p.KeyMayExist__SWIG_1(a[0].(ReadOptions), a[1].(ColumnFamilyHandle), a[2].(Slice), a[3].(*string))
	}
	if argc == 5 {
		return p.KeyMayExist__SWIG_0(a[0].(ReadOptions), a[1].(ColumnFamilyHandle), a[2].(Slice), a[3].(*string), a[4].(*bool))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrDB) NewIterator__SWIG_0(arg2 ReadOptions, arg3 ColumnFamilyHandle) (_swig_ret Iterator) {
	var swig_r Iterator
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	swig_r = (Iterator)(SwigcptrIterator(C._wrap_DB_NewIterator__SWIG_0_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrDB) NewIterator__SWIG_1(arg2 ReadOptions) (_swig_ret Iterator) {
	var swig_r Iterator
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (Iterator)(SwigcptrIterator(C._wrap_DB_NewIterator__SWIG_1_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (p SwigcptrDB) NewIterator(a ...interface{}) Iterator {
	argc := len(a)
	if argc == 1 {
		return p.NewIterator__SWIG_1(a[0].(ReadOptions))
	}
	if argc == 2 {
		return p.NewIterator__SWIG_0(a[0].(ReadOptions), a[1].(ColumnFamilyHandle))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrDB) NewIterators(arg2 ReadOptions, arg3 Std_vector_Sl_rocksdb_ColumnFamilyHandle_Sm__Sg_, arg4 Std_vector_Sl_Iterator_Sm__Sg_) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	swig_r = (Status)(SwigcptrStatus(C._wrap_DB_NewIterators_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3))))
	return swig_r
}

func (arg1 SwigcptrDB) GetSnapshot() (_swig_ret Rocksdb_Snapshot) {
	var swig_r Rocksdb_Snapshot
	_swig_i_0 := arg1
	swig_r = (Rocksdb_Snapshot)(SwigcptrRocksdb_Snapshot(C._wrap_DB_GetSnapshot_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrDB) ReleaseSnapshot(arg2 Rocksdb_Snapshot) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_DB_ReleaseSnapshot_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrDB) GetProperty__SWIG_0(arg2 ColumnFamilyHandle, arg3 Slice, arg4 *string) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4
	swig_r = (bool)(C._wrap_DB_GetProperty__SWIG_0_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.swig_voidp(_swig_i_3)))
	return swig_r
}

func (arg1 SwigcptrDB) GetProperty__SWIG_1(arg2 Slice, arg3 *string) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	swig_r = (bool)(C._wrap_DB_GetProperty__SWIG_1_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_voidp(_swig_i_2)))
	return swig_r
}

func (p SwigcptrDB) GetProperty(a ...interface{}) bool {
	argc := len(a)
	if argc == 2 {
		return p.GetProperty__SWIG_1(a[0].(Slice), a[1].(*string))
	}
	if argc == 3 {
		return p.GetProperty__SWIG_0(a[0].(ColumnFamilyHandle), a[1].(Slice), a[2].(*string))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrDB) GetIntProperty__SWIG_0(arg2 ColumnFamilyHandle, arg3 Slice, arg4 Uint64_t) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	swig_r = (bool)(C._wrap_DB_GetIntProperty__SWIG_0_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3)))
	return swig_r
}

func (arg1 SwigcptrDB) GetIntProperty__SWIG_1(arg2 Slice, arg3 Uint64_t) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	swig_r = (bool)(C._wrap_DB_GetIntProperty__SWIG_1_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2)))
	return swig_r
}

func (p SwigcptrDB) GetIntProperty(a ...interface{}) bool {
	argc := len(a)
	if argc == 2 {
		return p.GetIntProperty__SWIG_1(a[0].(Slice), a[1].(Uint64_t))
	}
	if argc == 3 {
		return p.GetIntProperty__SWIG_0(a[0].(ColumnFamilyHandle), a[1].(Slice), a[2].(Uint64_t))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrDB) GetAggregatedIntProperty(arg2 Slice, arg3 Uint64_t) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	swig_r = (bool)(C._wrap_DB_GetAggregatedIntProperty_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2)))
	return swig_r
}

func (arg1 SwigcptrDB) GetApproximateSizes__SWIG_0(arg2 ColumnFamilyHandle, arg3 Range, arg4 int, arg5 Uint64_t, arg6 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4
	_swig_i_4 := arg5.Swigcptr()
	_swig_i_5 := arg6
	C._wrap_DB_GetApproximateSizes__SWIG_0_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.swig_intgo(_swig_i_3), C.uintptr_t(_swig_i_4), C._Bool(_swig_i_5))
}

func (arg1 SwigcptrDB) GetApproximateSizes__SWIG_1(arg2 ColumnFamilyHandle, arg3 Range, arg4 int, arg5 Uint64_t) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4
	_swig_i_4 := arg5.Swigcptr()
	C._wrap_DB_GetApproximateSizes__SWIG_1_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.swig_intgo(_swig_i_3), C.uintptr_t(_swig_i_4))
}

func (arg1 SwigcptrDB) GetApproximateSizes__SWIG_2(arg2 Range, arg3 int, arg4 Uint64_t, arg5 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4.Swigcptr()
	_swig_i_4 := arg5
	C._wrap_DB_GetApproximateSizes__SWIG_2_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.uintptr_t(_swig_i_3), C._Bool(_swig_i_4))
}

func (arg1 SwigcptrDB) GetApproximateSizes__SWIG_3(arg2 Range, arg3 int, arg4 Uint64_t) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4.Swigcptr()
	C._wrap_DB_GetApproximateSizes__SWIG_3_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.uintptr_t(_swig_i_3))
}

func (p SwigcptrDB) GetApproximateSizes(a ...interface{}) {
	argc := len(a)
	if argc == 3 {
		p.GetApproximateSizes__SWIG_3(a[0].(Range), a[1].(int), a[2].(Uint64_t))
		return
	}
	if argc == 4 {
		if _, ok := a[0].(SwigcptrRange); !ok {
			goto check_2
		}
		if _, ok := a[1].(int); !ok {
			goto check_2
		}
		if _, ok := a[2].(SwigcptrUint64_t); !ok {
			goto check_2
		}
		if _, ok := a[3].(bool); !ok {
			goto check_2
		}
		p.GetApproximateSizes__SWIG_2(a[0].(Range), a[1].(int), a[2].(Uint64_t), a[3].(bool))
		return
	}
check_2:
	if argc == 4 {
		p.GetApproximateSizes__SWIG_1(a[0].(ColumnFamilyHandle), a[1].(Range), a[2].(int), a[3].(Uint64_t))
		return
	}
	if argc == 5 {
		p.GetApproximateSizes__SWIG_0(a[0].(ColumnFamilyHandle), a[1].(Range), a[2].(int), a[3].(Uint64_t), a[4].(bool))
		return
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrDB) CompactRange__SWIG_0(arg2 CompactRangeOptions, arg3 ColumnFamilyHandle, arg4 Slice, arg5 Slice) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	_swig_i_4 := arg5.Swigcptr()
	swig_r = (Status)(SwigcptrStatus(C._wrap_DB_CompactRange__SWIG_0_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.uintptr_t(_swig_i_4))))
	return swig_r
}

func (arg1 SwigcptrDB) CompactRange__SWIG_1(arg2 CompactRangeOptions, arg3 Slice, arg4 Slice) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	swig_r = (Status)(SwigcptrStatus(C._wrap_DB_CompactRange__SWIG_1_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3))))
	return swig_r
}

func (arg1 SwigcptrDB) CompactRange__SWIG_2(arg2 ColumnFamilyHandle, arg3 Slice, arg4 Slice, arg5 bool, arg6 int, arg7 Uint32_t) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	_swig_i_6 := arg7.Swigcptr()
	swig_r = (Status)(SwigcptrStatus(C._wrap_DB_CompactRange__SWIG_2_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C._Bool(_swig_i_4), C.swig_intgo(_swig_i_5), C.uintptr_t(_swig_i_6))))
	return swig_r
}

func (arg1 SwigcptrDB) CompactRange__SWIG_3(arg2 ColumnFamilyHandle, arg3 Slice, arg4 Slice, arg5 bool, arg6 int) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	swig_r = (Status)(SwigcptrStatus(C._wrap_DB_CompactRange__SWIG_3_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C._Bool(_swig_i_4), C.swig_intgo(_swig_i_5))))
	return swig_r
}

func (arg1 SwigcptrDB) CompactRange__SWIG_4(arg2 ColumnFamilyHandle, arg3 Slice, arg4 Slice, arg5 bool) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	_swig_i_4 := arg5
	swig_r = (Status)(SwigcptrStatus(C._wrap_DB_CompactRange__SWIG_4_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C._Bool(_swig_i_4))))
	return swig_r
}

func (arg1 SwigcptrDB) CompactRange__SWIG_5(arg2 ColumnFamilyHandle, arg3 Slice, arg4 Slice) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	swig_r = (Status)(SwigcptrStatus(C._wrap_DB_CompactRange__SWIG_5_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3))))
	return swig_r
}

func (arg1 SwigcptrDB) CompactRange__SWIG_6(arg2 Slice, arg3 Slice, arg4 bool, arg5 int, arg6 Uint32_t) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6.Swigcptr()
	swig_r = (Status)(SwigcptrStatus(C._wrap_DB_CompactRange__SWIG_6_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C._Bool(_swig_i_3), C.swig_intgo(_swig_i_4), C.uintptr_t(_swig_i_5))))
	return swig_r
}

func (arg1 SwigcptrDB) CompactRange__SWIG_7(arg2 Slice, arg3 Slice, arg4 bool, arg5 int) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (Status)(SwigcptrStatus(C._wrap_DB_CompactRange__SWIG_7_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C._Bool(_swig_i_3), C.swig_intgo(_swig_i_4))))
	return swig_r
}

func (arg1 SwigcptrDB) CompactRange__SWIG_8(arg2 Slice, arg3 Slice, arg4 bool) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4
	swig_r = (Status)(SwigcptrStatus(C._wrap_DB_CompactRange__SWIG_8_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C._Bool(_swig_i_3))))
	return swig_r
}

func (arg1 SwigcptrDB) CompactRange__SWIG_9(arg2 Slice, arg3 Slice) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	swig_r = (Status)(SwigcptrStatus(C._wrap_DB_CompactRange__SWIG_9_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

func (p SwigcptrDB) CompactRange(a ...interface{}) Status {
	argc := len(a)
	if argc == 2 {
		return p.CompactRange__SWIG_9(a[0].(Slice), a[1].(Slice))
	}
	if argc == 3 {
		if _, ok := a[0].(SwigcptrColumnFamilyHandle); !ok {
			goto check_2
		}
		if _, ok := a[2].(SwigcptrSlice); !ok {
			goto check_2
		}
		return p.CompactRange__SWIG_5(a[0].(ColumnFamilyHandle), a[1].(Slice), a[2].(Slice))
	}
check_2:
	if argc == 3 {
		if _, ok := a[0].(SwigcptrSlice); !ok {
			goto check_3
		}
		if _, ok := a[2].(bool); !ok {
			goto check_3
		}
		return p.CompactRange__SWIG_8(a[0].(Slice), a[1].(Slice), a[2].(bool))
	}
check_3:
	if argc == 3 {
		return p.CompactRange__SWIG_1(a[0].(CompactRangeOptions), a[1].(Slice), a[2].(Slice))
	}
	if argc == 4 {
		if _, ok := a[0].(SwigcptrSlice); !ok {
			goto check_5
		}
		if _, ok := a[1].(SwigcptrSlice); !ok {
			goto check_5
		}
		if _, ok := a[2].(bool); !ok {
			goto check_5
		}
		if _, ok := a[3].(int); !ok {
			goto check_5
		}
		return p.CompactRange__SWIG_7(a[0].(Slice), a[1].(Slice), a[2].(bool), a[3].(int))
	}
check_5:
	if argc == 4 {
		if _, ok := a[0].(SwigcptrColumnFamilyHandle); !ok {
			goto check_6
		}
		if _, ok := a[1].(SwigcptrSlice); !ok {
			goto check_6
		}
		if _, ok := a[3].(bool); !ok {
			goto check_6
		}
		return p.CompactRange__SWIG_4(a[0].(ColumnFamilyHandle), a[1].(Slice), a[2].(Slice), a[3].(bool))
	}
check_6:
	if argc == 4 {
		return p.CompactRange__SWIG_0(a[0].(CompactRangeOptions), a[1].(ColumnFamilyHandle), a[2].(Slice), a[3].(Slice))
	}
	if argc == 5 {
		if _, ok := a[0].(SwigcptrSlice); !ok {
			goto check_8
		}
		if _, ok := a[2].(bool); !ok {
			goto check_8
		}
		if _, ok := a[3].(int); !ok {
			goto check_8
		}
		if _, ok := a[4].(SwigcptrUint32_t); !ok {
			goto check_8
		}
		return p.CompactRange__SWIG_6(a[0].(Slice), a[1].(Slice), a[2].(bool), a[3].(int), a[4].(Uint32_t))
	}
check_8:
	if argc == 5 {
		return p.CompactRange__SWIG_3(a[0].(ColumnFamilyHandle), a[1].(Slice), a[2].(Slice), a[3].(bool), a[4].(int))
	}
	if argc == 6 {
		return p.CompactRange__SWIG_2(a[0].(ColumnFamilyHandle), a[1].(Slice), a[2].(Slice), a[3].(bool), a[4].(int), a[5].(Uint32_t))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrDB) SetOptions__SWIG_0(arg2 ColumnFamilyHandle, arg3 Std_unordered_map_Sl_std_string_Sc_std_string_Sg_) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	swig_r = (Status)(SwigcptrStatus(C._wrap_DB_SetOptions__SWIG_0_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrDB) SetOptions__SWIG_1(arg2 Std_unordered_map_Sl_std_string_Sc_std_string_Sg_) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (Status)(SwigcptrStatus(C._wrap_DB_SetOptions__SWIG_1_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (p SwigcptrDB) SetOptions(a ...interface{}) Status {
	argc := len(a)
	if argc == 1 {
		return p.SetOptions__SWIG_1(a[0].(Std_unordered_map_Sl_std_string_Sc_std_string_Sg_))
	}
	if argc == 2 {
		return p.SetOptions__SWIG_0(a[0].(ColumnFamilyHandle), a[1].(Std_unordered_map_Sl_std_string_Sc_std_string_Sg_))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrDB) CompactFiles__SWIG_0(arg2 CompactionOptions, arg3 ColumnFamilyHandle, arg4 Std_vector_Sl_std_string_Sg_, arg5 int, arg6 int) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	swig_r = (Status)(SwigcptrStatus(C._wrap_DB_CompactFiles__SWIG_0_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.swig_intgo(_swig_i_4), C.swig_intgo(_swig_i_5))))
	return swig_r
}

func (arg1 SwigcptrDB) CompactFiles__SWIG_1(arg2 CompactionOptions, arg3 ColumnFamilyHandle, arg4 Std_vector_Sl_std_string_Sg_, arg5 int) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	_swig_i_4 := arg5
	swig_r = (Status)(SwigcptrStatus(C._wrap_DB_CompactFiles__SWIG_1_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.swig_intgo(_swig_i_4))))
	return swig_r
}

func (arg1 SwigcptrDB) CompactFiles__SWIG_2(arg2 CompactionOptions, arg3 Std_vector_Sl_std_string_Sg_, arg4 int, arg5 int) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (Status)(SwigcptrStatus(C._wrap_DB_CompactFiles__SWIG_2_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_intgo(_swig_i_4))))
	return swig_r
}

func (arg1 SwigcptrDB) CompactFiles__SWIG_3(arg2 CompactionOptions, arg3 Std_vector_Sl_std_string_Sg_, arg4 int) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4
	swig_r = (Status)(SwigcptrStatus(C._wrap_DB_CompactFiles__SWIG_3_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.swig_intgo(_swig_i_3))))
	return swig_r
}

func (p SwigcptrDB) CompactFiles(a ...interface{}) Status {
	argc := len(a)
	if argc == 3 {
		return p.CompactFiles__SWIG_3(a[0].(CompactionOptions), a[1].(Std_vector_Sl_std_string_Sg_), a[2].(int))
	}
	if argc == 4 {
		if _, ok := a[1].(SwigcptrStd_vector_Sl_std_string_Sg_); !ok {
			goto check_2
		}
		if _, ok := a[2].(int); !ok {
			goto check_2
		}
		return p.CompactFiles__SWIG_2(a[0].(CompactionOptions), a[1].(Std_vector_Sl_std_string_Sg_), a[2].(int), a[3].(int))
	}
check_2:
	if argc == 4 {
		return p.CompactFiles__SWIG_1(a[0].(CompactionOptions), a[1].(ColumnFamilyHandle), a[2].(Std_vector_Sl_std_string_Sg_), a[3].(int))
	}
	if argc == 5 {
		return p.CompactFiles__SWIG_0(a[0].(CompactionOptions), a[1].(ColumnFamilyHandle), a[2].(Std_vector_Sl_std_string_Sg_), a[3].(int), a[4].(int))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrDB) PauseBackgroundWork() (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	swig_r = (Status)(SwigcptrStatus(C._wrap_DB_PauseBackgroundWork_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrDB) ContinueBackgroundWork() (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	swig_r = (Status)(SwigcptrStatus(C._wrap_DB_ContinueBackgroundWork_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrDB) EnableAutoCompaction(arg2 Std_vector_Sl_rocksdb_ColumnFamilyHandle_Sm__Sg_) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (Status)(SwigcptrStatus(C._wrap_DB_EnableAutoCompaction_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrDB) NumberLevels__SWIG_0(arg2 ColumnFamilyHandle) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (int)(C._wrap_DB_NumberLevels__SWIG_0_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrDB) NumberLevels__SWIG_1() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_DB_NumberLevels__SWIG_1_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (p SwigcptrDB) NumberLevels(a ...interface{}) int {
	argc := len(a)
	if argc == 0 {
		return p.NumberLevels__SWIG_1()
	}
	if argc == 1 {
		return p.NumberLevels__SWIG_0(a[0].(ColumnFamilyHandle))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrDB) MaxMemCompactionLevel__SWIG_0(arg2 ColumnFamilyHandle) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (int)(C._wrap_DB_MaxMemCompactionLevel__SWIG_0_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrDB) MaxMemCompactionLevel__SWIG_1() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_DB_MaxMemCompactionLevel__SWIG_1_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (p SwigcptrDB) MaxMemCompactionLevel(a ...interface{}) int {
	argc := len(a)
	if argc == 0 {
		return p.MaxMemCompactionLevel__SWIG_1()
	}
	if argc == 1 {
		return p.MaxMemCompactionLevel__SWIG_0(a[0].(ColumnFamilyHandle))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrDB) Level0StopWriteTrigger__SWIG_0(arg2 ColumnFamilyHandle) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (int)(C._wrap_DB_Level0StopWriteTrigger__SWIG_0_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrDB) Level0StopWriteTrigger__SWIG_1() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_DB_Level0StopWriteTrigger__SWIG_1_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (p SwigcptrDB) Level0StopWriteTrigger(a ...interface{}) int {
	argc := len(a)
	if argc == 0 {
		return p.Level0StopWriteTrigger__SWIG_1()
	}
	if argc == 1 {
		return p.Level0StopWriteTrigger__SWIG_0(a[0].(ColumnFamilyHandle))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrDB) GetName() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_DB_GetName_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrDB) GetEnv() (_swig_ret Rocksdb_Env) {
	var swig_r Rocksdb_Env
	_swig_i_0 := arg1
	swig_r = (Rocksdb_Env)(SwigcptrRocksdb_Env(C._wrap_DB_GetEnv_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrDB) GetOptions__SWIG_0(arg2 ColumnFamilyHandle) (_swig_ret Options) {
	var swig_r Options
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (Options)(SwigcptrOptions(C._wrap_DB_GetOptions__SWIG_0_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrDB) GetOptions__SWIG_1() (_swig_ret Options) {
	var swig_r Options
	_swig_i_0 := arg1
	swig_r = (Options)(SwigcptrOptions(C._wrap_DB_GetOptions__SWIG_1_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (p SwigcptrDB) GetOptions(a ...interface{}) Options {
	argc := len(a)
	if argc == 0 {
		return p.GetOptions__SWIG_1()
	}
	if argc == 1 {
		return p.GetOptions__SWIG_0(a[0].(ColumnFamilyHandle))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrDB) GetDBOptions() (_swig_ret DBOptions) {
	var swig_r DBOptions
	_swig_i_0 := arg1
	swig_r = (DBOptions)(SwigcptrDBOptions(C._wrap_DB_GetDBOptions_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrDB) Flush__SWIG_0(arg2 FlushOptions, arg3 ColumnFamilyHandle) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	swig_r = (Status)(SwigcptrStatus(C._wrap_DB_Flush__SWIG_0_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrDB) Flush__SWIG_1(arg2 FlushOptions) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (Status)(SwigcptrStatus(C._wrap_DB_Flush__SWIG_1_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (p SwigcptrDB) Flush(a ...interface{}) Status {
	argc := len(a)
	if argc == 1 {
		return p.Flush__SWIG_1(a[0].(FlushOptions))
	}
	if argc == 2 {
		return p.Flush__SWIG_0(a[0].(FlushOptions), a[1].(ColumnFamilyHandle))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrDB) SyncWAL() (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	swig_r = (Status)(SwigcptrStatus(C._wrap_DB_SyncWAL_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrDB) GetLatestSequenceNumber() (_swig_ret SequenceNumber) {
	var swig_r SequenceNumber
	_swig_i_0 := arg1
	swig_r = (SequenceNumber)(SwigcptrSequenceNumber(C._wrap_DB_GetLatestSequenceNumber_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrDB) DisableFileDeletions() (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	swig_r = (Status)(SwigcptrStatus(C._wrap_DB_DisableFileDeletions_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrDB) EnableFileDeletions__SWIG_0(arg2 bool) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (Status)(SwigcptrStatus(C._wrap_DB_EnableFileDeletions__SWIG_0_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrDB) EnableFileDeletions__SWIG_1() (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	swig_r = (Status)(SwigcptrStatus(C._wrap_DB_EnableFileDeletions__SWIG_1_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (p SwigcptrDB) EnableFileDeletions(a ...interface{}) Status {
	argc := len(a)
	if argc == 0 {
		return p.EnableFileDeletions__SWIG_1()
	}
	if argc == 1 {
		return p.EnableFileDeletions__SWIG_0(a[0].(bool))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrDB) GetLiveFiles__SWIG_0(arg2 Std_vector_Sl_std_string_Sg_, arg3 Uint64_t, arg4 bool) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4
	swig_r = (Status)(SwigcptrStatus(C._wrap_DB_GetLiveFiles__SWIG_0_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C._Bool(_swig_i_3))))
	return swig_r
}

func (arg1 SwigcptrDB) GetLiveFiles__SWIG_1(arg2 Std_vector_Sl_std_string_Sg_, arg3 Uint64_t) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	swig_r = (Status)(SwigcptrStatus(C._wrap_DB_GetLiveFiles__SWIG_1_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

func (p SwigcptrDB) GetLiveFiles(a ...interface{}) Status {
	argc := len(a)
	if argc == 2 {
		return p.GetLiveFiles__SWIG_1(a[0].(Std_vector_Sl_std_string_Sg_), a[1].(Uint64_t))
	}
	if argc == 3 {
		return p.GetLiveFiles__SWIG_0(a[0].(Std_vector_Sl_std_string_Sg_), a[1].(Uint64_t), a[2].(bool))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrDB) GetSortedWalFiles(arg2 VectorLogPtr) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (Status)(SwigcptrStatus(C._wrap_DB_GetSortedWalFiles_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrDB) GetUpdatesSince__SWIG_0(arg2 SequenceNumber, arg3 Unique_ptr_Sl_TransactionLogIterator_Sg_, arg4 TransactionLogIterator_ReadOptions) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	swig_r = (Status)(SwigcptrStatus(C._wrap_DB_GetUpdatesSince__SWIG_0_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3))))
	return swig_r
}

func (arg1 SwigcptrDB) GetUpdatesSince__SWIG_1(arg2 SequenceNumber, arg3 Unique_ptr_Sl_TransactionLogIterator_Sg_) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	swig_r = (Status)(SwigcptrStatus(C._wrap_DB_GetUpdatesSince__SWIG_1_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

func (p SwigcptrDB) GetUpdatesSince(a ...interface{}) Status {
	argc := len(a)
	if argc == 2 {
		return p.GetUpdatesSince__SWIG_1(a[0].(SequenceNumber), a[1].(Unique_ptr_Sl_TransactionLogIterator_Sg_))
	}
	if argc == 3 {
		return p.GetUpdatesSince__SWIG_0(a[0].(SequenceNumber), a[1].(Unique_ptr_Sl_TransactionLogIterator_Sg_), a[2].(TransactionLogIterator_ReadOptions))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrDB) DeleteFile(arg2 string) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (Status)(SwigcptrStatus(C._wrap_DB_DeleteFile_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), *(*C.swig_type_107)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func (arg1 SwigcptrDB) GetLiveFilesMetaData(arg2 Std_vector_Sl_LiveFileMetaData_Sg_) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_DB_GetLiveFilesMetaData_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrDB) GetColumnFamilyMetaData__SWIG_0(arg2 ColumnFamilyHandle, arg3 ColumnFamilyMetaData) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	C._wrap_DB_GetColumnFamilyMetaData__SWIG_0_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))
}

func (arg1 SwigcptrDB) GetColumnFamilyMetaData__SWIG_1(arg2 ColumnFamilyMetaData) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_DB_GetColumnFamilyMetaData__SWIG_1_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (p SwigcptrDB) GetColumnFamilyMetaData(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		p.GetColumnFamilyMetaData__SWIG_1(a[0].(ColumnFamilyMetaData))
		return
	}
	if argc == 2 {
		p.GetColumnFamilyMetaData__SWIG_0(a[0].(ColumnFamilyHandle), a[1].(ColumnFamilyMetaData))
		return
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrDB) AddFile__SWIG_0(arg2 ColumnFamilyHandle, arg3 string, arg4 bool) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (Status)(SwigcptrStatus(C._wrap_DB_AddFile__SWIG_0_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), *(*C.swig_type_108)(unsafe.Pointer(&_swig_i_2)), C._Bool(_swig_i_3))))
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func (arg1 SwigcptrDB) AddFile__SWIG_1(arg2 ColumnFamilyHandle, arg3 string) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	swig_r = (Status)(SwigcptrStatus(C._wrap_DB_AddFile__SWIG_1_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), *(*C.swig_type_109)(unsafe.Pointer(&_swig_i_2)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func (arg1 SwigcptrDB) AddFile__SWIG_2(arg2 string, arg3 bool) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (Status)(SwigcptrStatus(C._wrap_DB_AddFile__SWIG_2_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), *(*C.swig_type_110)(unsafe.Pointer(&_swig_i_1)), C._Bool(_swig_i_2))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func (arg1 SwigcptrDB) AddFile__SWIG_3(arg2 string) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (Status)(SwigcptrStatus(C._wrap_DB_AddFile__SWIG_3_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), *(*C.swig_type_111)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func (arg1 SwigcptrDB) AddFile__SWIG_4(arg2 ColumnFamilyHandle, arg3 Rocksdb_ExternalSstFileInfo, arg4 bool) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4
	swig_r = (Status)(SwigcptrStatus(C._wrap_DB_AddFile__SWIG_4_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C._Bool(_swig_i_3))))
	return swig_r
}

func (arg1 SwigcptrDB) AddFile__SWIG_5(arg2 ColumnFamilyHandle, arg3 Rocksdb_ExternalSstFileInfo) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	swig_r = (Status)(SwigcptrStatus(C._wrap_DB_AddFile__SWIG_5_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrDB) AddFile__SWIG_6(arg2 Rocksdb_ExternalSstFileInfo, arg3 bool) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	swig_r = (Status)(SwigcptrStatus(C._wrap_DB_AddFile__SWIG_6_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C._Bool(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrDB) AddFile__SWIG_7(arg2 Rocksdb_ExternalSstFileInfo) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (Status)(SwigcptrStatus(C._wrap_DB_AddFile__SWIG_7_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (p SwigcptrDB) AddFile(a ...interface{}) Status {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(string); !ok {
			goto check_1
		}
		return p.AddFile__SWIG_3(a[0].(string))
	}
check_1:
	if argc == 1 {
		return p.AddFile__SWIG_7(a[0].(Rocksdb_ExternalSstFileInfo))
	}
	if argc == 2 {
		if _, ok := a[0].(SwigcptrColumnFamilyHandle); !ok {
			goto check_3
		}
		if _, ok := a[1].(string); !ok {
			goto check_3
		}
		return p.AddFile__SWIG_1(a[0].(ColumnFamilyHandle), a[1].(string))
	}
check_3:
	if argc == 2 {
		if _, ok := a[0].(SwigcptrColumnFamilyHandle); !ok {
			goto check_4
		}
		if _, ok := a[1].(SwigcptrRocksdb_ExternalSstFileInfo); !ok {
			goto check_4
		}
		return p.AddFile__SWIG_5(a[0].(ColumnFamilyHandle), a[1].(Rocksdb_ExternalSstFileInfo))
	}
check_4:
	if argc == 2 {
		if _, ok := a[0].(SwigcptrRocksdb_ExternalSstFileInfo); !ok {
			goto check_5
		}
		return p.AddFile__SWIG_6(a[0].(Rocksdb_ExternalSstFileInfo), a[1].(bool))
	}
check_5:
	if argc == 2 {
		return p.AddFile__SWIG_2(a[0].(string), a[1].(bool))
	}
	if argc == 3 {
		if _, ok := a[1].(SwigcptrRocksdb_ExternalSstFileInfo); !ok {
			goto check_7
		}
		return p.AddFile__SWIG_4(a[0].(ColumnFamilyHandle), a[1].(Rocksdb_ExternalSstFileInfo), a[2].(bool))
	}
check_7:
	if argc == 3 {
		return p.AddFile__SWIG_0(a[0].(ColumnFamilyHandle), a[1].(string), a[2].(bool))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrDB) GetDbIdentity(arg2 *string) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (Status)(SwigcptrStatus(C._wrap_DB_GetDbIdentity_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.swig_voidp(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrDB) DefaultColumnFamily() (_swig_ret ColumnFamilyHandle) {
	var swig_r ColumnFamilyHandle
	_swig_i_0 := arg1
	swig_r = (ColumnFamilyHandle)(SwigcptrColumnFamilyHandle(C._wrap_DB_DefaultColumnFamily_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrDB) GetPropertiesOfAllTables__SWIG_0(arg2 ColumnFamilyHandle, arg3 Std_unordered_map_Sl_std_string_Sc_std_shared_ptr_Sl_rocksdb_TableProperties_SS_const_Sg__Sg_) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	swig_r = (Status)(SwigcptrStatus(C._wrap_DB_GetPropertiesOfAllTables__SWIG_0_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrDB) GetPropertiesOfAllTables__SWIG_1(arg2 Std_unordered_map_Sl_std_string_Sc_std_shared_ptr_Sl_rocksdb_TableProperties_SS_const_Sg__Sg_) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (Status)(SwigcptrStatus(C._wrap_DB_GetPropertiesOfAllTables__SWIG_1_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (p SwigcptrDB) GetPropertiesOfAllTables(a ...interface{}) Status {
	argc := len(a)
	if argc == 1 {
		return p.GetPropertiesOfAllTables__SWIG_1(a[0].(Std_unordered_map_Sl_std_string_Sc_std_shared_ptr_Sl_rocksdb_TableProperties_SS_const_Sg__Sg_))
	}
	if argc == 2 {
		return p.GetPropertiesOfAllTables__SWIG_0(a[0].(ColumnFamilyHandle), a[1].(Std_unordered_map_Sl_std_string_Sc_std_shared_ptr_Sl_rocksdb_TableProperties_SS_const_Sg__Sg_))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrDB) GetPropertiesOfTablesInRange(arg2 ColumnFamilyHandle, arg3 Range, arg4 Std_size_t, arg5 Std_unordered_map_Sl_std_string_Sc_std_shared_ptr_Sl_rocksdb_TableProperties_SS_const_Sg__Sg_) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	_swig_i_4 := arg5.Swigcptr()
	swig_r = (Status)(SwigcptrStatus(C._wrap_DB_GetPropertiesOfTablesInRange_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.uintptr_t(_swig_i_4))))
	return swig_r
}

func (arg1 SwigcptrDB) GetRootDB() (_swig_ret DB) {
	var swig_r DB
	_swig_i_0 := arg1
	swig_r = (DB)(SwigcptrDB(C._wrap_DB_GetRootDB_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))))
	return swig_r
}

type DB interface {
	Swigcptr() uintptr
	SwigIsDB()
	CreateColumnFamily(arg2 ColumnFamilyOptions, arg3 string, arg4 ColumnFamilyHandle) (_swig_ret Status)
	DropColumnFamily(arg2 ColumnFamilyHandle) (_swig_ret Status)
	Put(a ...interface{}) Status
	Delete(a ...interface{}) Status
	SingleDelete(a ...interface{}) Status
	Merge(a ...interface{}) Status
	Write(arg2 WriteOptions, arg3 Rocksdb_WriteBatch) (_swig_ret Status)
	Get(a ...interface{}) Status
	MultiGet(a ...interface{}) Std_vector_Sl_rocksdb_Status_Sg_
	KeyMayExist(a ...interface{}) bool
	NewIterator(a ...interface{}) Iterator
	NewIterators(arg2 ReadOptions, arg3 Std_vector_Sl_rocksdb_ColumnFamilyHandle_Sm__Sg_, arg4 Std_vector_Sl_Iterator_Sm__Sg_) (_swig_ret Status)
	GetSnapshot() (_swig_ret Rocksdb_Snapshot)
	ReleaseSnapshot(arg2 Rocksdb_Snapshot)
	GetProperty(a ...interface{}) bool
	GetIntProperty(a ...interface{}) bool
	GetAggregatedIntProperty(arg2 Slice, arg3 Uint64_t) (_swig_ret bool)
	GetApproximateSizes(a ...interface{})
	CompactRange(a ...interface{}) Status
	SetOptions(a ...interface{}) Status
	CompactFiles(a ...interface{}) Status
	PauseBackgroundWork() (_swig_ret Status)
	ContinueBackgroundWork() (_swig_ret Status)
	EnableAutoCompaction(arg2 Std_vector_Sl_rocksdb_ColumnFamilyHandle_Sm__Sg_) (_swig_ret Status)
	NumberLevels(a ...interface{}) int
	MaxMemCompactionLevel(a ...interface{}) int
	Level0StopWriteTrigger(a ...interface{}) int
	GetName() (_swig_ret string)
	GetEnv() (_swig_ret Rocksdb_Env)
	GetOptions(a ...interface{}) Options
	GetDBOptions() (_swig_ret DBOptions)
	Flush(a ...interface{}) Status
	SyncWAL() (_swig_ret Status)
	GetLatestSequenceNumber() (_swig_ret SequenceNumber)
	DisableFileDeletions() (_swig_ret Status)
	EnableFileDeletions(a ...interface{}) Status
	GetLiveFiles(a ...interface{}) Status
	GetSortedWalFiles(arg2 VectorLogPtr) (_swig_ret Status)
	GetUpdatesSince(a ...interface{}) Status
	DeleteFile(arg2 string) (_swig_ret Status)
	GetLiveFilesMetaData(arg2 Std_vector_Sl_LiveFileMetaData_Sg_)
	GetColumnFamilyMetaData(a ...interface{})
	AddFile(a ...interface{}) Status
	GetDbIdentity(arg2 *string) (_swig_ret Status)
	DefaultColumnFamily() (_swig_ret ColumnFamilyHandle)
	GetPropertiesOfAllTables(a ...interface{}) Status
	GetPropertiesOfTablesInRange(arg2 ColumnFamilyHandle, arg3 Range, arg4 Std_size_t, arg5 Std_unordered_map_Sl_std_string_Sc_std_shared_ptr_Sl_rocksdb_TableProperties_SS_const_Sg__Sg_) (_swig_ret Status)
	GetRootDB() (_swig_ret DB)
}

func DestroyDB(arg1 string, arg2 Options) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (Status)(SwigcptrStatus(C._wrap_DestroyDB_rocksdbswig_576e316b0df25a62(*(*C.swig_type_112)(unsafe.Pointer(&_swig_i_0)), C.uintptr_t(_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func RepairDB(arg1 string, arg2 Options) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (Status)(SwigcptrStatus(C._wrap_RepairDB_rocksdbswig_576e316b0df25a62(*(*C.swig_type_113)(unsafe.Pointer(&_swig_i_0)), C.uintptr_t(_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

type SwigcptrStatusDBPair uintptr

func (p SwigcptrStatusDBPair) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrStatusDBPair) SwigIsStatusDBPair() {
}

func (arg1 SwigcptrStatusDBPair) SetStatus(arg2 Status) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_StatusDBPair_status_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrStatusDBPair) GetStatus() (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	swig_r = (Status)(SwigcptrStatus(C._wrap_StatusDBPair_status_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrStatusDBPair) SetDb(arg2 DB) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_StatusDBPair_db_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrStatusDBPair) GetDb() (_swig_ret DB) {
	var swig_r DB
	_swig_i_0 := arg1
	swig_r = (DB)(SwigcptrDB(C._wrap_StatusDBPair_db_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewStatusDBPair() (_swig_ret StatusDBPair) {
	var swig_r StatusDBPair
	swig_r = (StatusDBPair)(SwigcptrStatusDBPair(C._wrap_new_StatusDBPair_rocksdbswig_576e316b0df25a62()))
	return swig_r
}

func DeleteStatusDBPair(arg1 StatusDBPair) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_StatusDBPair_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))
}

type StatusDBPair interface {
	Swigcptr() uintptr
	SwigIsStatusDBPair()
	SetStatus(arg2 Status)
	GetStatus() (_swig_ret Status)
	SetDb(arg2 DB)
	GetDb() (_swig_ret DB)
}

func MyDBOpen(arg1 Options, arg2 string) (_swig_ret StatusDBPair) {
	var swig_r StatusDBPair
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2
	swig_r = (StatusDBPair)(SwigcptrStatusDBPair(C._wrap_MyDBOpen_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), *(*C.swig_type_114)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

type SwigcptrStatusStringPair uintptr

func (p SwigcptrStatusStringPair) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrStatusStringPair) SwigIsStatusStringPair() {
}

func (arg1 SwigcptrStatusStringPair) SetStatus(arg2 Status) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_StatusStringPair_status_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrStatusStringPair) GetStatus() (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	swig_r = (Status)(SwigcptrStatus(C._wrap_StatusStringPair_status_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrStatusStringPair) SetValue(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_StatusStringPair_value_set_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), *(*C.swig_type_115)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrStatusStringPair) GetValue() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_StatusStringPair_value_get_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func NewStatusStringPair() (_swig_ret StatusStringPair) {
	var swig_r StatusStringPair
	swig_r = (StatusStringPair)(SwigcptrStatusStringPair(C._wrap_new_StatusStringPair_rocksdbswig_576e316b0df25a62()))
	return swig_r
}

func DeleteStatusStringPair(arg1 StatusStringPair) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_StatusStringPair_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0))
}

type StatusStringPair interface {
	Swigcptr() uintptr
	SwigIsStatusStringPair()
	SetStatus(arg2 Status)
	GetStatus() (_swig_ret Status)
	SetValue(arg2 string)
	GetValue() (_swig_ret string)
}

func MyDBGet(arg1 DB, arg2 ReadOptions, arg3 Slice) (_swig_ret StatusStringPair) {
	var swig_r StatusStringPair
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	swig_r = (StatusStringPair)(SwigcptrStatusStringPair(C._wrap_MyDBGet_rocksdbswig_576e316b0df25a62(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}


type SwigcptrUint64_t uintptr
type Uint64_t interface {
	Swigcptr() uintptr;
}
func (p SwigcptrUint64_t) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_vector_Sl_rocksdb_Slice_Sg_ uintptr
type Std_vector_Sl_rocksdb_Slice_Sg_ interface {
	Swigcptr() uintptr;
}
func (p SwigcptrStd_vector_Sl_rocksdb_Slice_Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrColumnFamilyMetaData uintptr
type ColumnFamilyMetaData interface {
	Swigcptr() uintptr;
}
func (p SwigcptrColumnFamilyMetaData) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrRocksdb_Env uintptr
type Rocksdb_Env interface {
	Swigcptr() uintptr;
}
func (p SwigcptrRocksdb_Env) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_vector_Sl_int_Sg_ uintptr
type Std_vector_Sl_int_Sg_ interface {
	Swigcptr() uintptr;
}
func (p SwigcptrStd_vector_Sl_int_Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_unordered_map_Sl_std_string_Sc_std_shared_ptr_Sl_rocksdb_TableProperties_SS_const_Sg__Sg_ uintptr
type Std_unordered_map_Sl_std_string_Sc_std_shared_ptr_Sl_rocksdb_TableProperties_SS_const_Sg__Sg_ interface {
	Swigcptr() uintptr;
}
func (p SwigcptrStd_unordered_map_Sl_std_string_Sc_std_shared_ptr_Sl_rocksdb_TableProperties_SS_const_Sg__Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_vector_Sl_std_shared_ptr_Sl_EventListener_Sg__Sg_ uintptr
type Std_vector_Sl_std_shared_ptr_Sl_EventListener_Sg__Sg_ interface {
	Swigcptr() uintptr;
}
func (p SwigcptrStd_vector_Sl_std_shared_ptr_Sl_EventListener_Sg__Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrRocksdb_Comparator uintptr
type Rocksdb_Comparator interface {
	Swigcptr() uintptr;
}
func (p SwigcptrRocksdb_Comparator) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_shared_ptr_Sl_rocksdb_RateLimiter_Sg_ uintptr
type Std_shared_ptr_Sl_rocksdb_RateLimiter_Sg_ interface {
	Swigcptr() uintptr;
}
func (p SwigcptrStd_shared_ptr_Sl_rocksdb_RateLimiter_Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_vector_Sl_rocksdb_ColumnFamilyDescriptor_Sg_ uintptr
type Std_vector_Sl_rocksdb_ColumnFamilyDescriptor_Sg_ interface {
	Swigcptr() uintptr;
}
func (p SwigcptrStd_vector_Sl_rocksdb_ColumnFamilyDescriptor_Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_vector_Sl_rocksdb_ColumnFamilyHandle_Sm__Sg_ uintptr
type Std_vector_Sl_rocksdb_ColumnFamilyHandle_Sm__Sg_ interface {
	Swigcptr() uintptr;
}
func (p SwigcptrStd_vector_Sl_rocksdb_ColumnFamilyHandle_Sm__Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrCompactionOptionsUniversal uintptr
type CompactionOptionsUniversal interface {
	Swigcptr() uintptr;
}
func (p SwigcptrCompactionOptionsUniversal) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrIterator uintptr
type Iterator interface {
	Swigcptr() uintptr;
}
func (p SwigcptrIterator) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_shared_ptr_Sl_rocksdb_MergeOperator_Sg_ uintptr
type Std_shared_ptr_Sl_rocksdb_MergeOperator_Sg_ interface {
	Swigcptr() uintptr;
}
func (p SwigcptrStd_shared_ptr_Sl_rocksdb_MergeOperator_Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_vector_Sl_Iterator_Sm__Sg_ uintptr
type Std_vector_Sl_Iterator_Sm__Sg_ interface {
	Swigcptr() uintptr;
}
func (p SwigcptrStd_vector_Sl_Iterator_Sm__Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrUnique_ptr_Sl_TransactionLogIterator_Sg_ uintptr
type Unique_ptr_Sl_TransactionLogIterator_Sg_ interface {
	Swigcptr() uintptr;
}
func (p SwigcptrUnique_ptr_Sl_TransactionLogIterator_Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrRocksdb_ExternalSstFileInfo uintptr
type Rocksdb_ExternalSstFileInfo interface {
	Swigcptr() uintptr;
}
func (p SwigcptrRocksdb_ExternalSstFileInfo) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrRocksdb_Logger uintptr
type Rocksdb_Logger interface {
	Swigcptr() uintptr;
}
func (p SwigcptrRocksdb_Logger) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_shared_ptr_Sl_rocksdb_TableFactory_Sg_ uintptr
type Std_shared_ptr_Sl_rocksdb_TableFactory_Sg_ interface {
	Swigcptr() uintptr;
}
func (p SwigcptrStd_shared_ptr_Sl_rocksdb_TableFactory_Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_shared_ptr_Sl_rocksdb_MemTableRepFactory_Sg_ uintptr
type Std_shared_ptr_Sl_rocksdb_MemTableRepFactory_Sg_ interface {
	Swigcptr() uintptr;
}
func (p SwigcptrStd_shared_ptr_Sl_rocksdb_MemTableRepFactory_Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_shared_ptr_Sl_rocksdb_Logger_Sg_ uintptr
type Std_shared_ptr_Sl_rocksdb_Logger_Sg_ interface {
	Swigcptr() uintptr;
}
func (p SwigcptrStd_shared_ptr_Sl_rocksdb_Logger_Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_size_t uintptr
type Std_size_t interface {
	Swigcptr() uintptr;
}
func (p SwigcptrStd_size_t) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrRocksdb_Snapshot uintptr
type Rocksdb_Snapshot interface {
	Swigcptr() uintptr;
}
func (p SwigcptrRocksdb_Snapshot) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrSequenceNumber uintptr
type SequenceNumber interface {
	Swigcptr() uintptr;
}
func (p SwigcptrSequenceNumber) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrTransactionLogIterator_ReadOptions uintptr
type TransactionLogIterator_ReadOptions interface {
	Swigcptr() uintptr;
}
func (p SwigcptrTransactionLogIterator_ReadOptions) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_shared_ptr_Sl_rocksdb_SstFileManager_Sg_ uintptr
type Std_shared_ptr_Sl_rocksdb_SstFileManager_Sg_ interface {
	Swigcptr() uintptr;
}
func (p SwigcptrStd_shared_ptr_Sl_rocksdb_SstFileManager_Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_vector_Sl_rocksdb_DbPath_Sg_ uintptr
type Std_vector_Sl_rocksdb_DbPath_Sg_ interface {
	Swigcptr() uintptr;
}
func (p SwigcptrStd_vector_Sl_rocksdb_DbPath_Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_vector_Sl_std_shared_ptr_Sl_rocksdb_TablePropertiesCollectorFactory_Sg__Sg_ uintptr
type Std_vector_Sl_std_shared_ptr_Sl_rocksdb_TablePropertiesCollectorFactory_Sg__Sg_ interface {
	Swigcptr() uintptr;
}
func (p SwigcptrStd_vector_Sl_std_shared_ptr_Sl_rocksdb_TablePropertiesCollectorFactory_Sg__Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_vector_Sl_enum_SS_rocksdb_CompressionType_Sg_ uintptr
type Std_vector_Sl_enum_SS_rocksdb_CompressionType_Sg_ interface {
	Swigcptr() uintptr;
}
func (p SwigcptrStd_vector_Sl_enum_SS_rocksdb_CompressionType_Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_vector_Sl_LiveFileMetaData_Sg_ uintptr
type Std_vector_Sl_LiveFileMetaData_Sg_ interface {
	Swigcptr() uintptr;
}
func (p SwigcptrStd_vector_Sl_LiveFileMetaData_Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_vector_Sl_std_string_Sg_ uintptr
type Std_vector_Sl_std_string_Sg_ interface {
	Swigcptr() uintptr;
}
func (p SwigcptrStd_vector_Sl_std_string_Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_unordered_map_Sl_std_string_Sc_std_string_Sg_ uintptr
type Std_unordered_map_Sl_std_string_Sc_std_string_Sg_ interface {
	Swigcptr() uintptr;
}
func (p SwigcptrStd_unordered_map_Sl_std_string_Sc_std_string_Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrUint32_t uintptr
type Uint32_t interface {
	Swigcptr() uintptr;
}
func (p SwigcptrUint32_t) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrRocksdb_WalFilter uintptr
type Rocksdb_WalFilter interface {
	Swigcptr() uintptr;
}
func (p SwigcptrRocksdb_WalFilter) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrRocksdb_CompactionFilter uintptr
type Rocksdb_CompactionFilter interface {
	Swigcptr() uintptr;
}
func (p SwigcptrRocksdb_CompactionFilter) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_shared_ptr_Sl_rocksdb_Statistics_Sg_ uintptr
type Std_shared_ptr_Sl_rocksdb_Statistics_Sg_ interface {
	Swigcptr() uintptr;
}
func (p SwigcptrStd_shared_ptr_Sl_rocksdb_Statistics_Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_shared_ptr_Sl_rocksdb_Cache_Sg_ uintptr
type Std_shared_ptr_Sl_rocksdb_Cache_Sg_ interface {
	Swigcptr() uintptr;
}
func (p SwigcptrStd_shared_ptr_Sl_rocksdb_Cache_Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_shared_ptr_Sl_rocksdb_CompactionFilterFactory_Sg_ uintptr
type Std_shared_ptr_Sl_rocksdb_CompactionFilterFactory_Sg_ interface {
	Swigcptr() uintptr;
}
func (p SwigcptrStd_shared_ptr_Sl_rocksdb_CompactionFilterFactory_Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_vector_Sl_rocksdb_Status_Sg_ uintptr
type Std_vector_Sl_rocksdb_Status_Sg_ interface {
	Swigcptr() uintptr;
}
func (p SwigcptrStd_vector_Sl_rocksdb_Status_Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_shared_ptr_Sl_rocksdb_SliceTransform_SS_const_Sg_ uintptr
type Std_shared_ptr_Sl_rocksdb_SliceTransform_SS_const_Sg_ interface {
	Swigcptr() uintptr;
}
func (p SwigcptrStd_shared_ptr_Sl_rocksdb_SliceTransform_SS_const_Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrRocksdb_WriteBatch uintptr
type Rocksdb_WriteBatch interface {
	Swigcptr() uintptr;
}
func (p SwigcptrRocksdb_WriteBatch) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrVectorLogPtr uintptr
type VectorLogPtr interface {
	Swigcptr() uintptr;
}
func (p SwigcptrVectorLogPtr) Swigcptr() uintptr {
	return uintptr(p)
}



var swigDirectorTrack struct {
	sync.Mutex
	m map[int]interface{}
	c int
}

func swigDirectorAdd(v interface{}) int {
	swigDirectorTrack.Lock()
	defer swigDirectorTrack.Unlock()
	if swigDirectorTrack.m == nil {
		swigDirectorTrack.m = make(map[int]interface{})
	}
	swigDirectorTrack.c++
	ret := swigDirectorTrack.c
	swigDirectorTrack.m[ret] = v
	return ret
}

func swigDirectorLookup(c int) interface{} {
	swigDirectorTrack.Lock()
	defer swigDirectorTrack.Unlock()
	ret := swigDirectorTrack.m[c]
	if ret == nil {
		panic("C++ director pointer not found (possible	use-after-free)")
	}
	return ret
}

func swigDirectorDelete(c int) {
	swigDirectorTrack.Lock()
	defer swigDirectorTrack.Unlock()
	if swigDirectorTrack.m[c] == nil {
		if c > swigDirectorTrack.c {
			panic("C++ director pointer invalid (possible memory corruption")
		} else {
			panic("C++ director pointer not found (possible use-after-free)")
		}
	}
	delete(swigDirectorTrack.m, c)
}

